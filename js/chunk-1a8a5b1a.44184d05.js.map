{"version":3,"sources":["webpack:///./src/docs/en/ve-table/pagination/main.vue?e208","webpack:///./src/docs/en/ve-table/pagination/explain.md?904c","webpack:///./src/docs/en/ve-table/pagination/explain.md","webpack:///./src/docs/en/ve-table/pagination/basic.md?d35f","webpack:///src/docs/en/ve-table/pagination/basic.md","webpack:///./src/docs/en/ve-table/pagination/basic.md?0cbf","webpack:///./src/docs/en/ve-table/pagination/basic.md","webpack:///./src/docs/en/ve-table/pagination/checkbox.md?1a78","webpack:///src/docs/en/ve-table/pagination/checkbox.md","webpack:///./src/docs/en/ve-table/pagination/checkbox.md?f6aa","webpack:///./src/docs/en/ve-table/pagination/checkbox.md","webpack:///src/docs/en/ve-table/pagination/main.vue","webpack:///./src/docs/en/ve-table/pagination/main.vue?654e","webpack:///./src/docs/en/ve-table/pagination/main.vue","webpack:///./src/docs/en/ve-table/pagination/checkbox.md?822e","webpack:///./src/docs/en/ve-table/pagination/basic.md?37db"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","staticRenderFns","_m","staticClass","script","component","attrs","slot","pre","name","components","on","data","pageIndex","pageSize","columns","field","key","title","align","renderBodyCell","column","rowIndex","width","computed","tableData","totalCount","methods","pageNumberChange","pageSizeChange","initDatabase","DB_DATA","date","hobby","address","created","democomponentExport","selectedRowKeysCollection","checkboxOption","selectedRowKeys","selectedRowChange","isSelected","selectedAllChange","type","currentPageData","changeSelectedRowKeys","changeSelectAll","resetSelectedRowKeys","rowKey","Explain","Basic","Checkbox"],"mappings":"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","file":"js/chunk-1a8a5b1a.44184d05.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"Combining Pagination\")]),_c('Explain'),_c('Basic'),_c('Checkbox')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"1、The table component and the paging component are separate\"),_c('br'),_vm._v(\" 2、The following example is simulated data, and paging is usually combined with back-end services\"),_c('br'),_vm._v(\" 3、There is a lot of data, but you don't want to use paging. You can also use virtual scrolling\"),_c('br')])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./explain.md?vue&type=template&id=d6048b60&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('anchor',{attrs:{\"is-edit\":\"\",\"label\":\"Example\",\"fileName\":\"basic.md\"}}),_c('demo-block',[_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <div>\\n        <ve-table :columns=\\\"columns\\\" :table-data=\\\"tableData\\\" />\\n        <div class=\\\"table-pagination\\\">\\n            <ve-pagination\\n                :total=\\\"totalCount\\\"\\n                :page-index=\\\"pageIndex\\\"\\n                :page-size=\\\"pageSize\\\"\\n                @on-page-number-change=\\\"pageNumberChange\\\"\\n                @on-page-size-change=\\\"pageSizeChange\\\"\\n            />\\n        </div>\\n    </div>\\n</template>\\n\\n<style>\\n    .table-pagination {\\n        margin-top: 20px;\\n        text-align: right;\\n    }\\n</style>\\n\\n<script>\\n    // Simulation table data from database\\n    let DB_DATA = [];\\n\\n    export default {\\n        data() {\\n            return {\\n                // page index\\n                pageIndex: 1,\\n                // page size\\n                pageSize: 10,\\n                columns: [\\n                    {\\n                        field: \\\"\\\",\\n                        key: \\\"a\\\",\\n                        title: \\\"#\\\",\\n                        align: \\\"center\\\",\\n                        renderBodyCell: ({ row, column, rowIndex }, h) => {\\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\\n                        },\\n                    },\\n                    { field: \\\"name\\\", key: \\\"b\\\", title: \\\"Name\\\", align: \\\"center\\\" },\\n                    { field: \\\"date\\\", key: \\\"c\\\", title: \\\"Date\\\", align: \\\"left\\\" },\\n                    { field: \\\"hobby\\\", key: \\\"d\\\", title: \\\"Hobby\\\", align: \\\"left\\\" },\\n                    { field: \\\"address\\\", key: \\\"e\\\", title: \\\"Address\\\", width: \\\"\\\" },\\n                ],\\n            };\\n        },\\n        computed: {\\n            // table data\\n            tableData() {\\n                const { pageIndex, pageSize } = this;\\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\\n            },\\n            // total count\\n            totalCount() {\\n                return DB_DATA.length;\\n            },\\n        },\\n        methods: {\\n            // page number change\\n            pageNumberChange(pageIndex) {\\n                this.pageIndex = pageIndex;\\n            },\\n\\n            // page size change\\n            pageSizeChange(pageSize) {\\n                this.pageIndex = 1;\\n                this.pageSize = pageSize;\\n            },\\n\\n            // Simulation table data\\n            initDatabase() {\\n                DB_DATA = [];\\n                for (let i = 0; i < 1000; i++) {\\n                    DB_DATA.push({\\n                        name: \\\"John\\\" + i,\\n                        date: \\\"1900-05-20\\\",\\n                        hobby: \\\"coding and coding repeat\\\" + i,\\n                        address: \\\"No.1 Century Avenue, Shanghai\\\" + i,\\n                    });\\n                }\\n            },\\n        },\\n        created() {\\n            this.initDatabase();\\n        },\\n    };\\n</script>\\n\")])])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content example-md-doc\">\n        <anchor is-edit label=\"Example\" fileName=\"basic.md\" />\n        <demo-block>\n        \n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;ve-table :columns=&quot;columns&quot; :table-data=&quot;tableData&quot; /&gt;\n        &lt;div class=&quot;table-pagination&quot;&gt;\n            &lt;ve-pagination\n                :total=&quot;totalCount&quot;\n                :page-index=&quot;pageIndex&quot;\n                :page-size=&quot;pageSize&quot;\n                @on-page-number-change=&quot;pageNumberChange&quot;\n                @on-page-size-change=&quot;pageSizeChange&quot;\n            /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n    .table-pagination {\n        margin-top: 20px;\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;script&gt;\n    // Simulation table data from database\n    let DB_DATA = [];\n\n    export default {\n        data() {\n            return {\n                // page index\n                pageIndex: 1,\n                // page size\n                pageSize: 10,\n                columns: [\n                    {\n                        field: &quot;&quot;,\n                        key: &quot;a&quot;,\n                        title: &quot;#&quot;,\n                        align: &quot;center&quot;,\n                        renderBodyCell: ({ row, column, rowIndex }, h) =&gt; {\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\n                        },\n                    },\n                    { field: &quot;name&quot;, key: &quot;b&quot;, title: &quot;Name&quot;, align: &quot;center&quot; },\n                    { field: &quot;date&quot;, key: &quot;c&quot;, title: &quot;Date&quot;, align: &quot;left&quot; },\n                    { field: &quot;hobby&quot;, key: &quot;d&quot;, title: &quot;Hobby&quot;, align: &quot;left&quot; },\n                    { field: &quot;address&quot;, key: &quot;e&quot;, title: &quot;Address&quot;, width: &quot;&quot; },\n                ],\n            };\n        },\n        computed: {\n            // table data\n            tableData() {\n                const { pageIndex, pageSize } = this;\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n            },\n            // total count\n            totalCount() {\n                return DB_DATA.length;\n            },\n        },\n        methods: {\n            // page number change\n            pageNumberChange(pageIndex) {\n                this.pageIndex = pageIndex;\n            },\n\n            // page size change\n            pageSizeChange(pageSize) {\n                this.pageIndex = 1;\n                this.pageSize = pageSize;\n            },\n\n            // Simulation table data\n            initDatabase() {\n                DB_DATA = [];\n                for (let i = 0; i &lt; 1000; i++) {\n                    DB_DATA.push({\n                        name: &quot;John&quot; + i,\n                        date: &quot;1900-05-20&quot;,\n                        hobby: &quot;coding and coding repeat&quot; + i,\n                        address: &quot;No.1 Century Avenue, Shanghai&quot; + i,\n                    });\n                }\n            },\n        },\n        created() {\n            this.initDatabase();\n        },\n    };\n&lt;/script&gt;\n</code></pre></template></demo-block>\n      </section>\n    </template>\n    <script>\n        null\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('ve-table',{attrs:{\"columns\":_vm.columns,\"table-data\":_vm.tableData}}),_vm._v(\" \"),_c('div',{staticClass:\"table-pagination\"},[_c('ve-pagination',{attrs:{\"total\":_vm.totalCount,\"page-index\":_vm.pageIndex,\"page-size\":_vm.pageSize},on:{\"on-page-number-change\":_vm.pageNumberChange,\"on-page-size-change\":_vm.pageSizeChange}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    // Simulation table data from database\n    let DB_DATA = [];\n\n    const democomponentExport = {\n        data() {\n            return {\n                // page index\n                pageIndex: 1,\n                // page size\n                pageSize: 10,\n                columns: [\n                    {\n                        field: \"\",\n                        key: \"a\",\n                        title: \"#\",\n                        align: \"center\",\n                        renderBodyCell: ({ row, column, rowIndex }, h) => {\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\n                        },\n                    },\n                    { field: \"name\", key: \"b\", title: \"Name\", align: \"center\" },\n                    { field: \"date\", key: \"c\", title: \"Date\", align: \"left\" },\n                    { field: \"hobby\", key: \"d\", title: \"Hobby\", align: \"left\" },\n                    { field: \"address\", key: \"e\", title: \"Address\", width: \"\" },\n                ],\n            };\n        },\n        computed: {\n            // table data\n            tableData() {\n                const { pageIndex, pageSize } = this;\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n            },\n            // total count\n            totalCount() {\n                return DB_DATA.length;\n            },\n        },\n        methods: {\n            // page number change\n            pageNumberChange(pageIndex) {\n                this.pageIndex = pageIndex;\n            },\n\n            // page size change\n            pageSizeChange(pageSize) {\n                this.pageIndex = 1;\n                this.pageSize = pageSize;\n            },\n\n            // Simulation table data\n            initDatabase() {\n                DB_DATA = [];\n                for (let i = 0; i < 1000; i++) {\n                    DB_DATA.push({\n                        name: \"John\" + i,\n                        date: \"1900-05-20\",\n                        hobby: \"coding and coding repeat\" + i,\n                        address: \"No.1 Century Avenue, Shanghai\" + i,\n                    });\n                }\n            },\n        },\n        created() {\n            this.initDatabase();\n        },\n    };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n    <style lang=\"less\">\n      .table-pagination {\n        margin-top: 20px;\n        text-align: right;\n    }\n    </style>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./basic.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./basic.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./basic.md?vue&type=template&id=13a020d8&\"\nimport script from \"./basic.md?vue&type=script&lang=js&\"\nexport * from \"./basic.md?vue&type=script&lang=js&\"\nimport style0 from \"./basic.md?vue&type=style&index=0&id=13a020d8&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content example-md-doc\"},[_c('anchor',{attrs:{\"is-edit\":\"\",\"label\":\"With Row Checkbox\",\"fileName\":\"checkbox.md\"}}),_c('demo-block',[_c('div',[_c('p',[_vm._v(\"Logic of this example, refer to \"),_c('a',{attrs:{\"href\":\"https://mail.google.com/\"}},[_vm._v(\"mail.google.com\")])])]),_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <div>\\n        <div>current selected row keys:{{selectedRowKeysCollection}}</div>\\n        <ve-table\\n            :columns=\\\"columns\\\"\\n            :table-data=\\\"currentPageData\\\"\\n            :checkbox-option=\\\"checkboxOption\\\"\\n            row-key-field-name=\\\"rowKey\\\"\\n        />\\n        <div class=\\\"table-pagination\\\">\\n            <ve-pagination\\n                :total=\\\"totalCount\\\"\\n                :page-index=\\\"pageIndex\\\"\\n                :page-size=\\\"pageSize\\\"\\n                @on-page-number-change=\\\"pageNumberChange\\\"\\n                @on-page-size-change=\\\"pageSizeChange\\\"\\n            />\\n        </div>\\n    </div>\\n</template>\\n\\n<style>\\n    .table-pagination {\\n        margin-top: 20px;\\n        text-align: right;\\n    }\\n</style>\\n\\n<script>\\n    // Simulation table data from database\\n    let DB_DATA = [];\\n\\n    export default {\\n        data() {\\n            return {\\n                // page index\\n                pageIndex: 1,\\n                // page size\\n                pageSize: 10,\\n                // selected row keys collection\\n                selectedRowKeysCollection: [],\\n                // checkbox option\\n                checkboxOption: {\\n                    // 可控属性\\n                    selectedRowKeys: [],\\n                    // 行选择改变事件\\n                    selectedRowChange: ({ row, isSelected, selectedRowKeys }) => {\\n                        this.changeSelectedRowKeys(row, isSelected);\\n                    },\\n                    // 全选改变事件\\n                    selectedAllChange: ({ isSelected, selectedRowKeys }) => {\\n                        this.changeSelectAll(isSelected, selectedRowKeys);\\n                    },\\n                },\\n                columns: [\\n                    {\\n                        field: \\\"\\\",\\n                        key: \\\"a\\\",\\n                        title: \\\"#\\\",\\n                        align: \\\"center\\\",\\n                        renderBodyCell: ({ row, column, rowIndex }, h) => {\\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\\n                        },\\n                    },\\n                    {\\n                        field: \\\"\\\",\\n                        key: \\\"checkbox\\\",\\n                        // type=checkbox\\n                        type: \\\"checkbox\\\",\\n                        title: \\\"\\\",\\n                        width: 50,\\n                        align: \\\"center\\\",\\n                    },\\n\\n                    { field: \\\"name\\\", key: \\\"b\\\", title: \\\"Name\\\", align: \\\"center\\\" },\\n                    { field: \\\"date\\\", key: \\\"c\\\", title: \\\"Date\\\", align: \\\"left\\\" },\\n                    { field: \\\"hobby\\\", key: \\\"d\\\", title: \\\"Hobby\\\", align: \\\"left\\\" },\\n                    { field: \\\"address\\\", key: \\\"e\\\", title: \\\"Address\\\", width: \\\"\\\" },\\n                ],\\n            };\\n        },\\n        computed: {\\n            // table data\\n            currentPageData() {\\n                const { pageIndex, pageSize } = this;\\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\\n            },\\n            // total count\\n            totalCount() {\\n                return DB_DATA.length;\\n            },\\n        },\\n        methods: {\\n            // selected rowKeys change\\n            changeSelectedRowKeys(row, isSelected) {\\n                const rowKey = row.rowKey;\\n\\n                if (isSelected) {\\n                    this.checkboxOption.selectedRowKeys.push(rowKey);\\n                    this.selectedRowKeysCollection.push(rowKey);\\n                } else {\\n                    const index = this.checkboxOption.selectedRowKeys.indexOf(rowKey);\\n                    this.checkboxOption.selectedRowKeys.splice(index, 1);\\n                    this.selectedRowKeysCollection.splice(index, 1);\\n                }\\n            },\\n\\n            // select all change\\n            changeSelectAll(isSelected, selectedRowKeys) {\\n                this.checkboxOption.selectedRowKeys = selectedRowKeys;\\n\\n                if (isSelected) {\\n                    this.selectedRowKeysCollection =\\n                        this.selectedRowKeysCollection.concat(selectedRowKeys);\\n                } else {\\n                    this.currentPageData.forEach((item) => {\\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) > -1) {\\n                            this.selectedRowKeysCollection.splice(index, 1);\\n                        }\\n                    });\\n                }\\n            },\\n\\n            // reset selectedRowKeys\\n            resetSelectedRowKeys() {\\n                this.checkboxOption.selectedRowKeys = [];\\n\\n                const selectedRowKeysCollection = this.selectedRowKeysCollection;\\n\\n                if (selectedRowKeysCollection.length) {\\n                    this.currentPageData.forEach((item) => {\\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) > -1) {\\n                            this.checkboxOption.selectedRowKeys.push(item.rowKey);\\n                        }\\n                    });\\n                }\\n            },\\n\\n            // page number change\\n            pageNumberChange(pageIndex) {\\n                this.pageIndex = pageIndex;\\n                this.resetSelectedRowKeys();\\n            },\\n\\n            // page size change\\n            pageSizeChange(pageSize) {\\n                this.pageIndex = 1;\\n                this.pageSize = pageSize;\\n                this.resetSelectedRowKeys();\\n            },\\n\\n            // Simulation table data\\n            initDatabase() {\\n                DB_DATA = [];\\n                for (let i = 0; i < 1000; i++) {\\n                    DB_DATA.push({\\n                        rowKey: i,\\n                        name: \\\"John\\\" + i,\\n                        date: \\\"1900-05-20\\\",\\n                        hobby: \\\"coding and coding repeat\\\" + i,\\n                        address: \\\"No.1 Century Avenue, Shanghai\\\" + i,\\n                    });\\n                }\\n            },\\n        },\\n        created() {\\n            this.initDatabase();\\n        },\\n    };\\n</script>\\n\")])])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content example-md-doc\">\n        <anchor is-edit label=\"With Row Checkbox\" fileName=\"checkbox.md\" />\n        <demo-block>\n        <div><p>Logic of this example, refer to <a href=\"https://mail.google.com/\">mail.google.com</a></p>\n</div>\n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;div&gt;current selected row keys:{{selectedRowKeysCollection}}&lt;/div&gt;\n        &lt;ve-table\n            :columns=&quot;columns&quot;\n            :table-data=&quot;currentPageData&quot;\n            :checkbox-option=&quot;checkboxOption&quot;\n            row-key-field-name=&quot;rowKey&quot;\n        /&gt;\n        &lt;div class=&quot;table-pagination&quot;&gt;\n            &lt;ve-pagination\n                :total=&quot;totalCount&quot;\n                :page-index=&quot;pageIndex&quot;\n                :page-size=&quot;pageSize&quot;\n                @on-page-number-change=&quot;pageNumberChange&quot;\n                @on-page-size-change=&quot;pageSizeChange&quot;\n            /&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n    .table-pagination {\n        margin-top: 20px;\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;script&gt;\n    // Simulation table data from database\n    let DB_DATA = [];\n\n    export default {\n        data() {\n            return {\n                // page index\n                pageIndex: 1,\n                // page size\n                pageSize: 10,\n                // selected row keys collection\n                selectedRowKeysCollection: [],\n                // checkbox option\n                checkboxOption: {\n                    // 可控属性\n                    selectedRowKeys: [],\n                    // 行选择改变事件\n                    selectedRowChange: ({ row, isSelected, selectedRowKeys }) =&gt; {\n                        this.changeSelectedRowKeys(row, isSelected);\n                    },\n                    // 全选改变事件\n                    selectedAllChange: ({ isSelected, selectedRowKeys }) =&gt; {\n                        this.changeSelectAll(isSelected, selectedRowKeys);\n                    },\n                },\n                columns: [\n                    {\n                        field: &quot;&quot;,\n                        key: &quot;a&quot;,\n                        title: &quot;#&quot;,\n                        align: &quot;center&quot;,\n                        renderBodyCell: ({ row, column, rowIndex }, h) =&gt; {\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\n                        },\n                    },\n                    {\n                        field: &quot;&quot;,\n                        key: &quot;checkbox&quot;,\n                        // type=checkbox\n                        type: &quot;checkbox&quot;,\n                        title: &quot;&quot;,\n                        width: 50,\n                        align: &quot;center&quot;,\n                    },\n\n                    { field: &quot;name&quot;, key: &quot;b&quot;, title: &quot;Name&quot;, align: &quot;center&quot; },\n                    { field: &quot;date&quot;, key: &quot;c&quot;, title: &quot;Date&quot;, align: &quot;left&quot; },\n                    { field: &quot;hobby&quot;, key: &quot;d&quot;, title: &quot;Hobby&quot;, align: &quot;left&quot; },\n                    { field: &quot;address&quot;, key: &quot;e&quot;, title: &quot;Address&quot;, width: &quot;&quot; },\n                ],\n            };\n        },\n        computed: {\n            // table data\n            currentPageData() {\n                const { pageIndex, pageSize } = this;\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n            },\n            // total count\n            totalCount() {\n                return DB_DATA.length;\n            },\n        },\n        methods: {\n            // selected rowKeys change\n            changeSelectedRowKeys(row, isSelected) {\n                const rowKey = row.rowKey;\n\n                if (isSelected) {\n                    this.checkboxOption.selectedRowKeys.push(rowKey);\n                    this.selectedRowKeysCollection.push(rowKey);\n                } else {\n                    const index = this.checkboxOption.selectedRowKeys.indexOf(rowKey);\n                    this.checkboxOption.selectedRowKeys.splice(index, 1);\n                    this.selectedRowKeysCollection.splice(index, 1);\n                }\n            },\n\n            // select all change\n            changeSelectAll(isSelected, selectedRowKeys) {\n                this.checkboxOption.selectedRowKeys = selectedRowKeys;\n\n                if (isSelected) {\n                    this.selectedRowKeysCollection =\n                        this.selectedRowKeysCollection.concat(selectedRowKeys);\n                } else {\n                    this.currentPageData.forEach((item) =&gt; {\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) &gt; -1) {\n                            this.selectedRowKeysCollection.splice(index, 1);\n                        }\n                    });\n                }\n            },\n\n            // reset selectedRowKeys\n            resetSelectedRowKeys() {\n                this.checkboxOption.selectedRowKeys = [];\n\n                const selectedRowKeysCollection = this.selectedRowKeysCollection;\n\n                if (selectedRowKeysCollection.length) {\n                    this.currentPageData.forEach((item) =&gt; {\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) &gt; -1) {\n                            this.checkboxOption.selectedRowKeys.push(item.rowKey);\n                        }\n                    });\n                }\n            },\n\n            // page number change\n            pageNumberChange(pageIndex) {\n                this.pageIndex = pageIndex;\n                this.resetSelectedRowKeys();\n            },\n\n            // page size change\n            pageSizeChange(pageSize) {\n                this.pageIndex = 1;\n                this.pageSize = pageSize;\n                this.resetSelectedRowKeys();\n            },\n\n            // Simulation table data\n            initDatabase() {\n                DB_DATA = [];\n                for (let i = 0; i &lt; 1000; i++) {\n                    DB_DATA.push({\n                        rowKey: i,\n                        name: &quot;John&quot; + i,\n                        date: &quot;1900-05-20&quot;,\n                        hobby: &quot;coding and coding repeat&quot; + i,\n                        address: &quot;No.1 Century Avenue, Shanghai&quot; + i,\n                    });\n                }\n            },\n        },\n        created() {\n            this.initDatabase();\n        },\n    };\n&lt;/script&gt;\n</code></pre></template></demo-block>\n      </section>\n    </template>\n    <script>\n        null\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('div',[_vm._v(\"current selected row keys:\"+_vm._s(_vm.selectedRowKeysCollection))]),_vm._v(\" \"),_c('ve-table',{attrs:{\"columns\":_vm.columns,\"table-data\":_vm.currentPageData,\"checkbox-option\":_vm.checkboxOption,\"row-key-field-name\":\"rowKey\"}}),_vm._v(\" \"),_c('div',{staticClass:\"table-pagination\"},[_c('ve-pagination',{attrs:{\"total\":_vm.totalCount,\"page-index\":_vm.pageIndex,\"page-size\":_vm.pageSize},on:{\"on-page-number-change\":_vm.pageNumberChange,\"on-page-size-change\":_vm.pageSizeChange}})],1)],1)]],2)}\nvar staticRenderFns = []\n\n  \n    // Simulation table data from database\n    let DB_DATA = [];\n\n    const democomponentExport = {\n        data() {\n            return {\n                // page index\n                pageIndex: 1,\n                // page size\n                pageSize: 10,\n                // selected row keys collection\n                selectedRowKeysCollection: [],\n                // checkbox option\n                checkboxOption: {\n                    // 可控属性\n                    selectedRowKeys: [],\n                    // 行选择改变事件\n                    selectedRowChange: ({ row, isSelected, selectedRowKeys }) => {\n                        this.changeSelectedRowKeys(row, isSelected);\n                    },\n                    // 全选改变事件\n                    selectedAllChange: ({ isSelected, selectedRowKeys }) => {\n                        this.changeSelectAll(isSelected, selectedRowKeys);\n                    },\n                },\n                columns: [\n                    {\n                        field: \"\",\n                        key: \"a\",\n                        title: \"#\",\n                        align: \"center\",\n                        renderBodyCell: ({ row, column, rowIndex }, h) => {\n                            return (this.pageIndex - 1) * this.pageSize + rowIndex + 1;\n                        },\n                    },\n                    {\n                        field: \"\",\n                        key: \"checkbox\",\n                        // type=checkbox\n                        type: \"checkbox\",\n                        title: \"\",\n                        width: 50,\n                        align: \"center\",\n                    },\n\n                    { field: \"name\", key: \"b\", title: \"Name\", align: \"center\" },\n                    { field: \"date\", key: \"c\", title: \"Date\", align: \"left\" },\n                    { field: \"hobby\", key: \"d\", title: \"Hobby\", align: \"left\" },\n                    { field: \"address\", key: \"e\", title: \"Address\", width: \"\" },\n                ],\n            };\n        },\n        computed: {\n            // table data\n            currentPageData() {\n                const { pageIndex, pageSize } = this;\n                return DB_DATA.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n            },\n            // total count\n            totalCount() {\n                return DB_DATA.length;\n            },\n        },\n        methods: {\n            // selected rowKeys change\n            changeSelectedRowKeys(row, isSelected) {\n                const rowKey = row.rowKey;\n\n                if (isSelected) {\n                    this.checkboxOption.selectedRowKeys.push(rowKey);\n                    this.selectedRowKeysCollection.push(rowKey);\n                } else {\n                    const index = this.checkboxOption.selectedRowKeys.indexOf(rowKey);\n                    this.checkboxOption.selectedRowKeys.splice(index, 1);\n                    this.selectedRowKeysCollection.splice(index, 1);\n                }\n            },\n\n            // select all change\n            changeSelectAll(isSelected, selectedRowKeys) {\n                this.checkboxOption.selectedRowKeys = selectedRowKeys;\n\n                if (isSelected) {\n                    this.selectedRowKeysCollection =\n                        this.selectedRowKeysCollection.concat(selectedRowKeys);\n                } else {\n                    this.currentPageData.forEach((item) => {\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) > -1) {\n                            this.selectedRowKeysCollection.splice(index, 1);\n                        }\n                    });\n                }\n            },\n\n            // reset selectedRowKeys\n            resetSelectedRowKeys() {\n                this.checkboxOption.selectedRowKeys = [];\n\n                const selectedRowKeysCollection = this.selectedRowKeysCollection;\n\n                if (selectedRowKeysCollection.length) {\n                    this.currentPageData.forEach((item) => {\n                        if (selectedRowKeysCollection.indexOf(item.rowKey) > -1) {\n                            this.checkboxOption.selectedRowKeys.push(item.rowKey);\n                        }\n                    });\n                }\n            },\n\n            // page number change\n            pageNumberChange(pageIndex) {\n                this.pageIndex = pageIndex;\n                this.resetSelectedRowKeys();\n            },\n\n            // page size change\n            pageSizeChange(pageSize) {\n                this.pageIndex = 1;\n                this.pageSize = pageSize;\n                this.resetSelectedRowKeys();\n            },\n\n            // Simulation table data\n            initDatabase() {\n                DB_DATA = [];\n                for (let i = 0; i < 1000; i++) {\n                    DB_DATA.push({\n                        rowKey: i,\n                        name: \"John\" + i,\n                        date: \"1900-05-20\",\n                        hobby: \"coding and coding repeat\" + i,\n                        address: \"No.1 Century Avenue, Shanghai\" + i,\n                    });\n                }\n            },\n        },\n        created() {\n            this.initDatabase();\n        },\n    };\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n    <style lang=\"less\">\n      .table-pagination {\n        margin-top: 20px;\n        text-align: right;\n    }\n    </style>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./checkbox.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!../../../../../node_modules/eslint-loader/index.js??ref--13-0!./checkbox.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./checkbox.md?vue&type=template&id=34ef8153&\"\nimport script from \"./checkbox.md?vue&type=script&lang=js&\"\nexport * from \"./checkbox.md?vue&type=script&lang=js&\"\nimport style0 from \"./checkbox.md?vue&type=style&index=0&id=34ef8153&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <h2>Combining Pagination</h2>\n        <Explain />\n        <Basic />\n        <Checkbox />\n    </div>\n</template>\n<script>\nimport Explain from \"./explain.md\";\nimport Basic from \"./basic.md\";\nimport Checkbox from \"./checkbox.md\";\n\nexport default {\n    name: \"basic-main\",\n    components: {\n        Explain,\n        Basic,\n        Checkbox,\n    },\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=0acad7aa&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!./checkbox.md?vue&type=style&index=0&id=34ef8153&prod&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/vue-loader/lib/index.js??ref--14-0!../../../../../build/md-loader/index.js!./basic.md?vue&type=style&index=0&id=13a020d8&prod&lang=less&\""],"sourceRoot":""}