{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../packages/src/locale/lang/zh-CN.js","webpack:///./src/comp/locale/index.js","webpack:///./src/comp/mixins/i18n-mixins.js","webpack:///./src/comp/demo-block.vue?2fbf","webpack:///./src/comp/app.vue?629e","webpack:///./src/utils/cookies.js","webpack:///./src/comp/mixins/theme-switch-mixins.js","webpack:///./src/comp/directives/clickoutside.js","webpack:///./src/plugins/http-request.js","webpack:///./src/service/index.js","webpack:///src/comp/app.vue","webpack:///./src/comp/app.vue?cc82","webpack:///./src/comp/app.vue","webpack:///./src/router/router.config.js","webpack:///./src/router/index.js","webpack:///./src/comp/demo-block.vue?8fb5","webpack:///./src/comp/online-edit/code-sand-box/index.jsx","webpack:///src/comp/demo-block.vue","webpack:///./src/comp/demo-block.vue?c434","webpack:///./src/comp/demo-block.vue","webpack:///./src/comp/anchor.vue?469f","webpack:///src/comp/anchor.vue","webpack:///./src/comp/anchor.vue?7efd","webpack:///./src/comp/anchor.vue","webpack:///../packages/ve-locale/index.js","webpack:///../packages/src/locale/index.js","webpack:///../packages/src/utils/index.js","webpack:///../packages/ve-checkbox/src/util/constant.js","webpack:///../packages/ve-checkbox/src/util/index.js","webpack:///../packages/ve-checkbox/src/index.jsx","webpack:///../packages/ve-checkbox/index.js","webpack:///../packages/ve-checkbox-group/src/util/constant.js","webpack:///../packages/ve-checkbox-group/src/index.jsx","webpack:///../packages/ve-checkbox-group/index.js","webpack:///../packages/ve-contextmenu/src/util/constant.js","webpack:///../packages/ve-contextmenu/src/util/index.js","webpack:///../packages/src/utils/constant.js","webpack:///../packages/ve-icon/src/util/constant.js","webpack:///../packages/ve-icon/src/index.jsx","webpack:///../packages/ve-icon/index.js","webpack:///../packages/src/utils/dom.js","webpack:///../packages/src/utils/random.js","webpack:///../packages/src/directives/events-outside.js","webpack:///../packages/ve-contextmenu/src/index.jsx","webpack:///../packages/ve-contextmenu/index.js","webpack:///../packages/src/directives/clickoutside.js","webpack:///../packages/ve-radio/src/util/constant.js","webpack:///../packages/ve-radio/src/util/index.js","webpack:///../packages/ve-radio/src/index.jsx","webpack:///../packages/ve-radio/index.js","webpack:///../packages/ve-dropdown/src/util/constant.js","webpack:///../packages/ve-dropdown/src/util/index.js","webpack:///../packages/ve-dropdown/src/index.jsx","webpack:///../packages/ve-dropdown/index.js","webpack:///../packages/ve-loading/src/util/constant.js","webpack:///../packages/ve-loading/src/util/index.js","webpack:///../packages/ve-loading/src/plane.jsx","webpack:///../packages/ve-loading/src/bounce.jsx","webpack:///../packages/ve-loading/src/wave.jsx","webpack:///../packages/ve-loading/src/pulse.jsx","webpack:///../packages/ve-loading/src/flow.jsx","webpack:///../packages/ve-loading/src/grid.jsx","webpack:///../packages/ve-loading/src/loading.jsx","webpack:///../packages/ve-loading/src/index.js","webpack:///../packages/ve-loading/index.js","webpack:///../packages/ve-pagination/src/util/constant.js","webpack:///../packages/ve-pagination/src/util/index.js","webpack:///../packages/ve-pagination/src/pager.jsx","webpack:///../packages/ve-select/src/util/constant.js","webpack:///../packages/ve-select/src/util/index.js","webpack:///../packages/ve-select/src/index.jsx","webpack:///../packages/ve-select/index.js","webpack:///../packages/ve-pagination/src/index.jsx","webpack:///../packages/ve-pagination/index.js","webpack:///../packages/ve-table/src/util/constant.js","webpack:///../packages/ve-table/src/util/index.js","webpack:///../packages/ve-table/src/util/clipboard.js","webpack:///../packages/src/utils/animation-frame.js","webpack:///../packages/src/utils/scroll-bar.js","webpack:///../packages/src/utils/request-animation-timeout.js","webpack:///../packages/src/utils/event-key-codes.js","webpack:///../packages/src/utils/hooks-manager.js","webpack:///../packages/src/utils/mouse-event.js","webpack:///../packages/src/mixins/emitter.js","webpack:///../packages/ve-table/src/colgroup/index.jsx","webpack:///../packages/ve-table/src/header/header-checkbox-content.jsx","webpack:///../packages/ve-table/src/header/header-filter-content.jsx","webpack:///../packages/ve-table/src/header/header-filter-custom-content.jsx","webpack:///../packages/ve-table/src/header/header-th.jsx","webpack:///../packages/src/utils/resize-event.js","webpack:///../packages/src/comps/resize-observer/src/index.jsx","webpack:///../packages/src/comps/resize-observer/index.js","webpack:///../packages/ve-table/src/header/header-tr.jsx","webpack:///../packages/ve-table/src/header/index.jsx","webpack:///../packages/ve-table/src/body/body-checkbox-content.jsx","webpack:///../packages/ve-table/src/body/body-radio-content.jsx","webpack:///../packages/ve-table/src/body/expand-tr-icon.jsx","webpack:///../packages/ve-table/src/body/body-td.jsx","webpack:///../packages/ve-table/src/body/body-tr.jsx","webpack:///../packages/ve-table/src/body/body-tr-scrolling.jsx","webpack:///../packages/ve-table/src/body/expand-tr.jsx","webpack:///../packages/ve-table/src/body/index.jsx","webpack:///../packages/ve-table/src/footer/footer-td.jsx","webpack:///../packages/ve-table/src/footer/footer-tr.jsx","webpack:///../packages/ve-table/src/footer/index.jsx","webpack:///../packages/ve-table/src/editor/constant.js","webpack:///../packages/src/directives/focus.js","webpack:///../packages/src/utils/auto-resize.js","webpack:///../packages/ve-table/src/editor/index.jsx","webpack:///../packages/ve-table/src/selection/constant.js","webpack:///../packages/ve-table/src/selection/index.jsx","webpack:///../packages/ve-table/src/column-resizer/index.jsx","webpack:///../packages/ve-table/src/index.jsx","webpack:///../packages/ve-table/index.js","webpack:///../packages/index.js","webpack:///./src/main.js","webpack:///./src/utils/constant.js","webpack:///./src/router/locale/zh.router.config.js","webpack:///./src/router/locale/en.router.config.js","webpack:///./src/router/locale/index.js","webpack:///./src/comp/anchor.vue?8e30","webpack:///../packages/src/locale/lang/en-US.js","webpack:///./src/utils/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","pagination","goto","page","itemsPerPage","total","prev5","next5","table","confirmFilter","resetFilter","cut","copy","insertRowAbove","insertRowBelow","removeRow","emptyRow","emptyColumn","emptyCell","leftFixedColumnTo","cancelLeftFixedColumnTo","rightFixedColumnTo","cancelRightFixedColumnTo","zh","menus","path","isRouter","docTheme","switchDocThemeOptions","label","anchorCatalogTitle","compLang","zhCN","eidtDemoTitle","eidtDemoUrlPrefix","demo","description","expandCode","foldCode","openInCodepen","openInCodeSandBox","completeDemo","demo1","selection","dataRowsOption","dataRows","columnFixed","loading","expand","radio","checkbox","demo2","en","enUS","computed","currentDocLang","this","$route","split","DOC_LANG","EN","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","staticStyle","_v","_l","currentLocal","item","class","activeMenuClass","attrs","on","$event","gotoRouter","_s","showLangDropdown","active","stopPropagation","langChange","showThemeDropdown","currentDocTheme","themeChange","showVersionDropdown","currentDocVersion","versionChange","_m","meta","_e","keepAlive","staticRenderFns","setDocTheme","Cookies","set","DOC_THEME_COOKIE","getDocTheme","styleLinkId","themeSwitcherTool","ThemeSwitcherTool","themeList","themeName","themePath","useStorage","storageKey","methods","switchThemeMix","switcher","catch","mounted","el","binding","vNode","msg","compName","context","handler","contains","__clickOutSide__","addEventListener","unbind","removeEventListener","service","axios","interceptors","use","response","getVersions","net","location","isDev","process","url","protocol","hostname","port","Date","getTime","httpRequest","method","res","mixins","switchLangOptions","switchVersionOptions","defalutDocTheme","showLogo","watch","lang","host","hash","pathname","matched","initDocTheme","created","component","emptyLayout","docLayout","hide","redirect","children","routers","Vue","VueRouter","linkActiveClass","routes","routerConfig","hover","hovering","visibilityChange","_t","$slots","demoLangInfo","ref","fixedControl","style","width","getDemoBlockControlWidth","isExpanded","iconClass","controlText","onlineExample","version","html","props","btnName","String","required","exampleTpl","exampleScript","default","exampleStyle","getMainjsContent","getExampleContent","getbabelContent","getCodesanboxPrefillConfig","codesandboxPackage","title","main","dependencies","vue","mockjs","scripts","serve","build","lint","browserslist","codesanboxPrefillConfig","files","content","render","compress","string","LZString","compressToBase64","replace","fromProps","$refs","submit","JSON","stringify","components","CodeSandBoxOnline","scrollParent","isDemoRendered","codeArea","codeAreaHeight","clientHeight","scrollHandler","top","bottom","left","removeScrollHandler","cur","highlight","beforeDestroy","id","goAnchor","eidt","isEdit","fileName","goTobyAnchorId","routerUrl","locale","defineReactive","util","proto","$veTableMessages","cloneDeep","defaultLang","getMessage","update","merge","createI18N","messages","args","isFunction","createLocale","isEmptyArray","arr","Array","isArray","isEmptyValue","isDefined","val","isBoolean","isNumber","getValByUnit","getParentCompByName","parent","$parent","$options","getChildCompsByName","childrens","$children","forEach","child","scrollTo","option","scrollTop","scrollLeft","PREFIX_CLS","EMIT_EVENTS","ON_CHECKED_CHANGE","COMPS_NAME","VE_CHECKBOX","VE_CHECKBOX_GROUP","clsName","cls","Number","Boolean","disabled","indeterminate","isControlled","isSelected","model","checkboxGroup","checkboxClass","internalIsSelected","checkboxStyle","display","isVerticalShow","updateModelBySingle","checkboxChange","isChecked","checked","$emit","isCheckBoxGroup","updateModel","getLabelContent","initModel","indexOf","updateModelByGroup","checkBoxGroup","VeCheckbox","newVal","checkedVal","index","VeCheckboxGroup","VE_CONTEXTMENU","ON_NODE_CLICK","INIT_DATA","PARENT_DEEP","CONTEXTMENU_NODE_TYPES","SEPARATOR","INSTANCE_METHODS","HIDE_CONTEXTMENU","KEY_CODES","BACK_SPACE","TAB","ENTER","SHIFT","SPACE","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","DELETE","F2","ICON_NAMES","FILTER","DOUBLE_RIGHT_ARROW","DOUBLE_LEFT_ARROW","TOP_ARROW","RIGHT_ARROW","BOTTOM_ARROW","LEFT_ARROW","SORT_TOP_ARROW","SORT_BOTTOM_ARROW","SEARCH","MOUSE_EVENT_CLICK_TYPE","LEFT_MOUSE","MIDDLE_MOUSE","RIGHT_MOUSE","VE_ICON","color","size","iconStyle","values","includes","VeIcon","trim","addClass","curClass","className","classes","classList","add","hasClass","removeClass","remove","getViewportOffset","triggerEl","doc","documentElement","box","getBoundingClientRect","pageXOffset","clientLeft","pageYOffset","clientTop","offsetLeft","offsetTop","right","clientWidth","height","right2","bottom2","getViewportOffsetWithinContainer","containerEl","tElOffsetTop","tElOffsetLeft","tElLef","tElTop","tElRight","tElBottom","tElRight2","tElBottom2","cElOffsetTop","cElOffsetLeft","cElLef","cElTop","cElRight","cElBottom","cElRight2","cElBottom2","getMousePosition","x","y","body","pageYoffset","clientX","clientY","getCaretPosition","rootDocument","selectionStart","focus","createRange","re","createTextRange","rc","duplicate","moveToBookmark","getBookmark","setEndPoint","text","setCaretPosition","element","pos","endPos","setSelectionRange","elementParent","parentDisplayValue","getRandomId","now","toString","Math","random","substr","events","callback","__eventsOutside__","eventName","eventsOutside","options","eventTarget","HTMLElement","internalOptions","panelOptions","eventTargetEl","rootContextmenuId","isChildrenPanelsClicked","isPanelRightDirection","isPanelsEmptyed","activeMenuIds","map","parentId","removeOrEmptyPanels","getRandomIdWithPrefix","createInternalOptions","createPanelOptions","resetContextmenu","addRootContextmenuPanelToBody","immediate","registerContextmenuEvent","hasChildren","getPanelOptionByMenuId","menuId","panelOption","getParentContextmenuPanelEl","contextmenuPanelId","panelIndex","findIndex","parentPanelId","querySelector","createPanelByHover","menu","deletePanelDeeps","filter","parentDeep","deep","reverse","delIndex","currentMenu","$nextTick","addContextmenuPanelToBody","contextmenuId","showContextmenuPanel","createInternalOptionsRecursion","showRootContextmenuPanel","preventDefault","isRootContextmenu","contextmenuPanelEl","innerHTML","position","currentPanelWidth","currentPanelHeight","clickLeft","clickTop","clickRight","clickBottom","panelX","panelY","parentContextmenuPanelEl","parentPanelLeft","parentPanelRight","parentPanelWidth","emptyContextmenuPanels","isRemove","removeContextmenuEvent","debounceCreatePanelByHover","debounce","destroyed","contextmenuProps","contextmenuPanelProps","click","contextmenu","contextmenuNodeProps","mouseover","VeContextmenu","ON_RADIO_CHANGE","VE_RADIO","radioClass","checkedChange","VeRadio","FILTER_RESET","FILTER_CONFIRM","VISIBLE_CHANGE","ITEM_SELECT_CHANGE","VE_DROPDOWN","clickoutside","isSelect","showOperation","maxWidth","maxHeight","isMultiple","textAlign","isInput","confirmFilterText","resetFilterText","hideByItemClick","showRadio","visible","isCustomContent","defaultInstance","popperAppendTo","beforeVisibleChange","Function","internalVisible","inputValue","isDropdownShowTriggerClicked","rootId","dropdownItemsPanelId","popperAppendToEl","appendToElTagName","isDropdownVisible","getMaxWidth","Infinity","selectedLabels","selected","operationFilterClass","dropdownItemsClass","init","showDropDown","hideDropDown","assign","setInputValue","confirm","reset","some","nextVisible","allowChange","beforeVisibleChangeCallback","rootEl","changDropdownPanelPosition","removeOrEmptyRootPanel","$el","triggerElHeight","isAppendToBody","triggerElLeft","triggerElTop","triggerElRight","triggerElBottom","labels","join","dropdownPanelClick","dropdownShowToggle","singleSelectOptionClick","getTextAlignClass","dropdownClickOutside","checkedChangeControl","addRootElementToElement","tagName","targetEl","checkboxProps","showLine","radioProps","dropdownProps","dropdownItemsProps","VeDropdown","VE_LOADING","VE_LOADING_PLANE","VE_LOADING_BOUNCE","VE_LOADING_WAVE","VE_LOADING_PULSE","VE_LOADING_FLOW","VE_LOADING_GRID","VE_LOADING_FOLD","SPIN_NAMES","PLANE","GRID","WAVE","FLOW","BOUNCE","PULSE","spinStyle","itemStyle","Plane","Bounce","Wave","Pulse","Flow","Grid","loadingClass","fullscreen","loadingStyle","overlayBackgroundColor","spinProps","tip","defaultOptions","lock","parent__","PARENT_RELATIVE_CLASS","PARENT_LOCK_CLASS","LoadingConstructor","extend","VeLoading","createInstance","checkSpinName","Loading","loadingInstance","show","nextTick","close","destroy","$destroy","install","$veLoading","LOCALE_COMP_NAME","PAGE_NUMBER_CHANGE","PAGE_SIZE_CHANGE","VE_PAGINATION","pageCount","pageIndex","pagingCount","numOffset","floor","showJumpPrev","showJumpNext","pagingCounts","startNum","jumpPage","number","SELECT_CHANGE","VE_SELECT","placeholder","validator","dropdownVisible","showSelectInfo","dropdownChange","input","VeSelect","Total","Prev","prevPage","newPageIndex","Pager","Next","nextPage","Sizer","newPageSizeOption","handleChange","items","find","pageSizeChangeHandler","Jumper","jumperEnter","keyCode","getValidNum","jumpPageHandler","layout","pageSize","pageSizeOption","parseInt","newPageSize","ceil","temp","isNaN","goBackPageIndex","goBackPageSize","template","comps","prev","pager","next","sizer","jumper","VePagination","COLUMN_TYPES","EXPAND","CHECKBOX","RADIO","COLUMN_FIXED_TYPE","LEFT","RIGHT","EXPAND_TRIGGER_TYPES","ICON","CELL","ROW","CELL_SELECTION_DIRECTION","UP","DOWN","AUTOFILLING_DIRECTION","CURRENT_CELL_SELECTION_TYPES","SINGLE","RANGE","BODY_CELL_WIDTH_CHANGE","HEADER_ROW_HEIGHT_CHANGE","FOOTER_ROW_HEIGHT_CHANGE","BODY_ROW_HEIGHT_CHANGE","BODY_ROW_CLICK","BODY_CELL_CLICK","BODY_CELL_MOUSEOVER","BODY_CELL_MOUSEDOWN","BODY_CELL_MOUSEMOVE","BODY_CELL_MOUSEUP","BODY_CELL_DOUBLE_CLICK","BODY_CELL_CONTEXTMENU","EXPAND_ROW_CHANGE","CHECKBOX_SELECTED_ROW_CHANGE","CHECKBOX_SELECTED_ALL_CHANGE","CHECKBOX_SELECTED_ALL_INFO","RADIO_SELECTED_ROW_CHANGE","SORT_CHANGE","CELL_SELECTION_KEY_CHANGE","CELL_SELECTION_RANGE_DATA_CHANGE","HEADER_FILTER_CONFIRM","HEADER_FILTER_RESET","HEADER_CELL_CLICK","HEADER_CELL_CONTEXTMENU","HEADER_CELL_MOUSEDOWN","HEADER_CELL_MOUSEOVER","HEADER_CELL_MOUSEMOVE","HEADER_CELL_MOUSELEAVE","HIGHLIGHT_ROW_CHANGE","EDIT_INPUT_CLICK","EDIT_INPUT_BLUR","EDIT_INPUT_VALUE_CHANGE","EDIT_INPUT_COPY","EDIT_INPUT_PASTE","EDIT_INPUT_CUT","SELECTION_CORNER_MOUSEDOWN","SELECTION_CORNER_MOUSEUP","AUTOFILLING_DIRECTION_CHANGE","HOOKS_NAME","TABLE_CONTAINER_SCROLL","TABLE_CONTAINER_MOUSEUP","TABLE_SIZE_CHANGE","TABLE_CELL_WIDTH_CHANGE","CLIPBOARD_CELL_VALUE_CHANGE","VE_TABLE","VE_TABLE_THADER","VE_TABLE_THADER_TR","VE_TABLE_THADER_Th","VE_TABLE_HEADER_CHECKBOX_CONTENT","VE_TABLE_HEADER_FILTER_CONTENT","VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT","VE_TABLE_BODY","VE_TABLE_BODY_TR","VE_TABLE_BODY_TR_SCROLLING","VE_TABLE_BODY_CHECKBOX_CONTENT","VE_TABLE_BODY_RADIO_CONTENT","VE_TABLE_BODY_TD","VE_TABLE_COLGROUP","VE_TABLE_FOOTER","VE_TABLE_EXPAND_TR","VE_TABLE_EXPAND_TR_ICON","VE_TABLE_EDIT_INPUT","VE_TABLE_SELECTION","VE_TABLE_COLUMN_RESISZER","COMPS_CUSTOM_ATTRS","BODY_ROW_KEY","BODY_COLUMN_KEY","SCROLL_TO","SCROLL_TO_ROW_KEY","SCROLL_TO_COL_KEY","START_EDITING_CELL","STOP_EDITING_CELL","SET_HIGHLIGHT_ROW","SET_CELL_SELECTION","SET_RANGE_CELL_SELECTION","GET_RANGE_CELL_SELECTION","SET_ALL_CELL_SELECTION","HIDE_COLUMNS_BY_KEYS","SHOW_COLUMNS_BY_KEYS","CONTEXTMENU_TYPES","HEADER_CONTEXTMENU","BODY_CONTEXTMENU","CUT","COPY","INSERT_ROW_ABOVE","INSERT_ROW_BELOW","REMOVE_ROW","EMPTY_ROW","EMPTY_COLUMN","EMPTY_CELL","LEFT_FIXED_COLUMN_TO","CANCEL_LEFT_FIXED_COLUMN_TO","RIGHT_FIXED_COLUMN_TO","CANCEL_RIGHT_FIXED_COLUMN_TO","getRowKey","rowData","rowKeyFieldName","getColumnByColkey","colKey","colgroups","isLastColumnByColKey","isOperationColumn","firstCol","operationColumn","isLastRowByRowKey","rowKey","allRowKeys","getDomResizeObserverCompKey","originalKey","columnsOptionResetTime","recursiveRemoveColumnByKey","columns","getFixedTotalWidthByColumnKey","fixed","currentIndex","reduce","currentVal","_realTimeWidth","getNotFixedTotalWidthByColumnKey","getTotalWidthByColKeys","colKeys","initGroupColumns","cloneColumns","groupColumns","maxLevel","setColumnLevel","column","_level","setColspanAndRowspanAndKeys","keys","colspan","_colspan","_keys","endsWith","_rowspan","setColgroupsAndGroupColumns","groupColumn","colgroup","isGroupHeader","getHeaderContextmenuOptionCollection","REMOVE_COLUMN","HIDE_COLUMN","getBodyContextmenuOptionCollection","setHeaderContextmenuOptions","contextmenuHeaderOption","cellSelectionRangeData","headerIndicatorColKeys","enableHeaderContextmenu","selectionRangeKeys","getSelectionRangeKeys","selectionRangeIndexes","getSelectionRangeIndexes","isOperationCol","colCount","endColIndex","startColIndex","contextmenus","beforeShow","isWholeColSelection","startColKey","leftFixedColKeys","getColKeysByFixedType","fixedType","isExcludeOperationColumn","rightFixedColKeys","headerContextmenuOptionCollection","contentmenuCollectionItem","isContinue","setBodyContextmenuOptions","enableBodyContextmenu","contextmenuBodyOption","bodyIndicatorRowKeys","rowCount","endRowIndex","startRowIndex","isWholeRowSelection","startRowKey","bodyContextmenuOptionCollection","createEmptyRowData","field","isContextmenuPanelClicked","contextmenuPanelEls","querySelectorAll","getColKeysByHeaderColumn","headerColumnItem","getColKeysByRangeColKeys","colKey1","colKey2","index1","index2","beginIndex","endIndex","getColKeysByFixedTypeWithinColKeys","condition","getRowKeysByRangeRowKeys","topRowKey","bottomRowKey","isCellInSelectionRange","cellData","leftColKey","rightColKey","rowKeys","isClearSelectionByBodyCellRightClick","mouseEventClickType","cellSelectionData","normalEndCell","rowIndex","endColKey","endRowKey","getSelectionRangeData","resultType","tableData","fieldNames","newRow","fieldName","isExistGivenFixedColKey","isExistNotFixedColKey","getLeftmostOrRightmostColKey","mostObj","colIndex","getLeftmostColKey","getRightmostColKey","getPreviewColKey","currentColKey","getNextColKey","cellAutofill","isReplaceData","direction","nextCurrentCell","nextNormalEndCell","cellSelectionTableData","sourceSelectionRangeIndexes","targetSelectionRangeIndexes","cellSelectionTableDataRowIndex","cellSelectionTableDataColIndex","sourceSelectionData","targetSelectionData","sourceFieldNames","newData","targetFieldNames","setColumnFixed","enableColumnResize","fixedColIndex","colItem","oldFixedType","_colItem","_columnResizeWidth","cancelColumnFixed","win","regUniversalNewLine","regNextCellNoQuotes","regNextEmptyCell","decodeSpreadsheetStr","str","lastLength","row","match","nextCell","startsWith","quoteNo","isStillCell","nextChar","fill","matchedText","encodeToSpreadsheetStr","rLen","cLen","onBeforeCopy","selectionRangeData","onAfterCopy","spreadsheetStr","clipboardData","setData","onBeforePaste","pastedData","getData","decodePasteData","min","cellIndex","onAfterPaste","beforePasteResponse","pasteData","onBeforeCut","onAfterCut","onBeforeDelete","onAfterDelete","getScrollbarWidth","outer","visibility","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","start","isInputKeyCode","altKey","ctrlKey","shiftKey","Hooks","hooks","hookName","isRepeat","warn","arguments","hook","getMouseEventClickType","button","which","broadcast","componentName","params","concat","dispatch","$root","emitter","checkboxOption","isIndeterminate","selectedChange","setSelectedAllInfo","$on","isSelectedParam","filterList","filterConfirm","filterReset","getIcon","h","filterIcon","compProps","filterCustom","defaultVisible","visibleChange","getCustomContent","slot","showFn","closeFn","groupColumnItem","headerRows","fixedHeader","sortOption","sortColumns","cellStyleOption","eventCustomOption","isLastLeftFixedColumn","leftFixedColumns","isfirstRightFixedColumn","isLastCloumn","lastColumnKey","getTheadThClass","startColKeyIndex","isIndicatorActive","indicatorColKeys","showIndicator","every","headerCellClass","customClass","getTheadThStyle","align","totalWidth","columnIndex","rowHeight","getCheckboxContent","hideSelectAll","sortChange","sortResult","sortAlways","currentField","sortBy","getSortContent","getFilterContent","filterProps","getFilterCustomContent","cellClick","fn","cellDblclick","cellContextmenu","cellMouseenter","cellMouseleave","cellMousemove","cellMouseover","cellMousedown","cellMouseup","renderHeaderCell","renderResult","customEvents","headerCellEvents","dblclick","mouseenter","mouseleave","mousemove","mousedown","mouseup","thProps","rowspan","resizeHandler","entries","entry","listeners","__resizeListeners__","contentRect","addResizeListener","__ro__","ResizeObserver","observe","removeResizeListener","disconnect","resizeListener","VueDomResizeObserver","trHeightChange","rowClick","rowDblclick","rowContextmenu","rowMouseenter","rowMouseleave","rowMousemove","rowMouseover","rowMousedown","rowMouseup","headerRowEvents","trProps","nativeOn","headerClass","initSortColumns","multipleSort","internalCheckboxSelectedRowKeys","disableSelectedRowKeys","isControlledProp","selectedRowKeys","initSelected","radioOption","internalRadioSelectedRowKey","expandOption","expandedRowkeys","expandRowIconContainerClass","columnCollection","isExpandRow","cellSpanOption","editOption","rawCellValue","currentColumnCollectionItem","currentRowKey","bodyTdStyle","bodyTdClass","bodyCellClass","currentCell","startRowKeyIndex","indicatorRowKeys","getEllipsisContentStyle","ellipsis","lineClamp","_lineClamp","getRenderContent","renderBodyCell","showTitle","isShowTitle","getRadioContent","getCellSpan","bodyCellSpan","eventTargetName","nodeName","trigger","expandIconProps","bodyCellEvents","tdProps","expandRowChange","isVirtualScroll","highlightRowKey","trClass","isHighlight","getTdContent","bodyRowEvents","tableViewportWidth","expandColumn","columnCount","isRowExpanded","defaultExpandAllRows","expanRowClass","hasLeftFixedColumn","expandTdContentStyle","getExpandRowContent","actualRenderTableData","hasFixedColumn","virtualScrollOption","showVirtualScrollingPlaceholder","cellSelectionOption","colsWidths","Map","internalExpandRowkeys","virtualScrollPreviewRenderedRowKeys","virtualScrollRepeatRenderedRowKeys","col","columnCollectionItem","isControlledExpand","expandedRowKeys","disableCheckboxSelectedRowKeys","rowkey","disableCheckboxUnselectedRowKeys","isCheckboxSelectedAll","isCheckboxIndeterminate","isControlledRadio","initInternalExpandRowKeys","initInternalCheckboxSelectedRowKeys","resetInternalCheckboxSelectedRowKeys","sendToCheckboxAll","initInternalRadioSelectedRowKey","rightFixedColumns","beforeExpandRowChange","beforeExpandRowResult","beforeExpandedRowKeys","rowKeyIndex","afterExpandRowChange","afterExpandedRowKeys","expandable","tdSizeChange","defaultExpandedRowKeys","getExpandRowComp","expandTrProps","selectedRowKey","defaultSelectedRowKey","defaultSelectedAllRows","defaultSelectedRowKeys","checkboxSelectedRowChange","selectedRowChange","internalCheckboxSelectedRowKeysTemp","checkboxSelectedAllChange","selectedAllChange","allSelectedKeys","radioSelectedRowChange","getTrKey","renderingRowKeys","previewRenderedRowKeys","dealKeydownEvent","measureTdProps","padding","border","trPropsScrolling","footerRows","fixedFooter","getBodyTdClass","footerCellClass","getBodyTdStyle","renderFooterCell","footerCellSpan","footerCellEvents","footerRowEvents","footerData","footerClass","TEXTAREA_ADD_NEW_LINE","TEXTAREA_SELECT","vnode","select","autoResize","defaults","minHeight","minWidth","paddingWidth","createTextNode","span","unObserve","resize","newChar","scrollHeight","test","textContent","fontSize","getComputedStyle","fontFamily","whiteSpace","overflowY","delayedResize","extendDefaults","config","firstChild","el_","doObserve","currentStyle","defaultView","parentRendered","inputStartValue","editingCell","isCellEditing","hasXScrollBar","hasYScrollBar","hasRightFixedColumn","scrollBarWidth","textareaInputRef","displayTextarea","overflowViewport","textareaRect","tableEl","cellEl","isEditCellFocus","currentColumn","containerClass","containerStyle","opacity","textareaClass","setTableEl","addHook","setCellEl","debounceSetCellEl","setTextareaPosition","debounceSetTextareaPosition","showTextarea","hideTextarea","setRawCellValue","previousElementSibling","tableLeft","tableTop","tableRight","tableBottom","cellLeft","cellTop","cellHeight","cellWidth","cellRight","cellBottom","rightFixedTotalWidth","textareaUnObserve","textareaValueChange","textareaInputEl","caretPosition","newValue","containerProps","textareaProps","domProps","tabindex","paste","CLEAR_CURRENT_CELL_RECT","CLEAR_NORMAL_END_CELL_RECT","HTMLTableElement","cellAutofillOption","isAutofillStarting","currentCellSelectionType","virtualScrollVisibleIndexs","currentCellEl","normalEndCellEl","autoFillEndCellEl","cellSelectionRect","currentCellRect","normalEndCellRect","autoFillEndCellRect","selectionBordersVisibility","end","showCorner","directionX","directionY","cornerCellInfo","isLastColumn","isLastRow","isFirstSelectionRow","isFirstSelectionCol","isFirstNotFixedSelectionCol","setCellEls","debounceSetCellEls","resetCellPositions","debounceResetCellPositions","setCurrentCellEl","setSelectionPositions","setCellSelectionRangeData","setNormalEndCellEl","clearAutofillEndCellRect","setAutofillEndCellEl","leftmostColKey","getCellPosition","getCellPositionByColKey","isFirstRow","getTableFirstRowCellByColKey","getTableLastRowCellByColKey","isCurrentCellOverflow","isNormalEndCellOverflow","rect","mackUpColKey","mackUpRowIndex","mackUpRect","mackUpRectParams","getSelectionCurrent","selectionCurrent","autoFillArea","borders","borderWidth","borderHeight","topBorder","rightBorder","bottomBorder","leftBorder","corner","getSelectionAutofillArea","areaPostions","totalColKeys","fixedColKeys","getBorders","getSelectionAreas","normalArea","normalAreaLayer","getAreaLayer","rightmostColKey","autofillingDirection","rangeColKey1","rangeColKey2","autoFillEndCell","isRender","fixedColsTotalWidth","cornerTop","cornerLeft","cornerBorderRightWidth","cornerBorderBottomtWidth","cornerProps","getTableCellEl","fixedLeftSelectionCurrent","fixedLeftSelectionArea","fixedLeftAutoFillArea","middleSelectionCurrent","middleSelectionArea","middleAutoFillArea","fixedRightSelectionCurrent","fixedRightSelectionArea","fixedRightAutoFillArea","tableContainerEl","HTMLDivElement","isColumnResizerHover","isColumnResizing","setIsColumnResizerHover","setIsColumnResizing","setColumnWidth","columnWidthResizeOption","columnResizerStartX","currentResizingColumn","columnResizerHandlerWidth","columnResizerRect","columnMinWidth","initColumnResizerPosition","tableContainerLeft","tableContainerTop","cellRect","setColumnResizerPositionByDrag","columnResizerHandlerMousedown","columnResizerMouseup","onselectstart","ondragstart","differWidth","abs","nextColumnWidth","sizeChange","columnWidth","clearColumnResizerStatus","columnResizerHandlerProps","columnResizerLineProps","showHeader","scrollWidth","borderAround","borderX","borderY","rowStyleOption","columnHiddenOption","clipboardOption","tableRootRef","tableContainerWrapperRef","tableContainerRef","tableRef","tableBodyRef","tableContentWrapperRef","virtualPhantomRef","editInputRef","cellSelectionRef","contextmenuRef","hiddenColumns","virtualScrollVisibleData","defaultVirtualScrollBufferScale","defaultVirtualScrollMinRowHeight","defaultPlaceholderPerScrollingRowCount","virtualScrollStartIndex","previewVirtualScrollStartIndex","virtualScrollEndIndex","disablePointerEventsTimeoutId","isLeftScrolling","isRightScrolling","previewTableContainerScrollLeft","endColKeyIndex","endRowKeyIndex","isHeaderCellMousedown","isBodyCellMousedown","isBodyOperationColumnMousedown","tableOffestHeight","tableHeight","editorInputStartValue","enableStopEditing","contextmenuEventTarget","contextmenuOptions","virtualScrollBufferCount","virtualScrollVisibleCount","bufferScale","realBufferScale","minRowHeight","tableContainerWrapperStyle","tableContainerStyle","tableContainerHeight","getScrollBarWidth","tableStyle","tableClass","tableContainerClass","enableCellSelection","tableBodyClass","hoverHighlight","clickHighlight","stripe","enable","hasEditColumn","edit","contextMenuType","enableClipboard","headerTotalHeight","footerTotalHeight","oldVal","initVirtualScrollPositions","initVirtualScroll","clearCellSelectionCurrentCell","initColumns","initColumnWidthByColumnResize","initScrolling","initHeaderRows","initFooterRows","setTableContentTopValue","setCellSelectionByAutofill","clearCellSelectionAutofillEndCell","setCurrentCellSelectionType","setRangeCellSelectionByHeaderIndicator","setRangeCellSelectionByBodyIndicator","headerRowHeightChange","footRowHeightChange","bodyCellWidthChange","colWidths","triggerHook","setScrollBarStatus","updateColgroupsBySortChange","columnDefaultWidth","defaultHiddenColumnKeys","showOrHideColumns","cellSelectionCurrentCellChange","cellSelectionNormalEndCellChange","cellSelectionAutofillCellChange","clearCellSelectionNormalEndCell","headerIndicatorColKeysChange","clearHeaderIndicatorColKeys","bodyIndicatorRowKeysChange","clearBodyIndicatorRowKeys","currentCellData","normalEndCellData","cellAutofillParams","beforeAutofill","afterAutofill","autofillResponse","cellSelectionRangeDataChange","autofillingDirectionChange","selectCellByDirection","editInputEditor","textareaAddNewLine","defaultValue","deleteCellSelectionRangeValue","nextColumn","columnToVisible","nextRowKey","rowToVisible","leftTotalWidth","rightTotalWidth","diff","scrollRight","containerClientHeight","containerScrollTop","nextRowEl","trOffsetTop","trClientHeight","parentOffsetTop","setVirtualScrollVisibleData","startIndex","aboveCount","getVirtualScrollAboveCount","belowCount","getVirtualScrollBelowCount","getVirtualViewPhantom","virtualScrollPositions","bodyRowHeightChange","oldHeight","dValue","k","setVirtualPhantomHeight","setVirtualScrollStartOffset","totalHeight","startOffset","ele","getVirtualScrollStartIndex","virtualScrollBinarySearch","list","tempIndex","midIndex","midValue","tableContainerVirtualScrollHandler","visibleCount","visibleStartIndex","visibleEndIndex","visibleAboveCount","visibleBelowCount","bodyElement","scrolling","debounceScrollEnded","scrollingResetTimeInterval","debounceScrollEndedCallback","setScrolling","previewScrollLeft","tableClickOutside","saveCellWhenStopEditing","cellValueChange","beforeCellValueChange","afterCellValueChange","currentRow","changeValue","clearEditingCell","cellSelectionByClick","isScrollToRow","bodyCellContextmenu","editCellByClick","isDblclick","setContextmenuOptions","bodyCellDoubleClick","bodyCellClick","bodyCellMousedown","newStartRowKey","newEndRowKey","currentRowIndex","isClearByRightClick","bodyCellMouseover","bodyCellMousemove","bodyCellMouseup","headerCellClick","headerCellContextmenu","headerCellMousedown","currentCellStartColKey","currentCellEndColKey","clearCurrentCellRect","clearNormalEndCellRect","newStartColKey","newEndColKey","currentCellStartColIndex","currentCellEndColIndex","headerCellMouseover","headerCellMousemove","headerCellMouseleave","headerMouseleave","tableContainerMouseup","cellSelectionCornerMousedown","cellSelectionCornerMouseup","isEditColumn","setEditingCell","updateEditingCellValue","contextmenuItemClick","headerContextmenuItemClick","bodyContextmenuItemClick","afterMenuClick","textareaSelect","execCommand","editorCopy","beforeCopyCallback","beforeCopy","afterCopyCallback","afterCopy","allowCoping","editorPaste","beforePasteCallback","beforePaste","afterPasteCallback","afterPaste","allowPasting","editorCut","beforeCutCallback","beforeCut","afterCutCallback","afterCut","allowCuting","delete2","delete","beforeDeleteCallback","beforeDelete","afterDeleteCallback","afterDelete","allowDeleting","isScrollToStartCell","from","Set","behavior","rowEl","debouncedBodyCellWidthChange","headerProps","cursor","bodyProps","footerProps","tableRootProps","tableContainerWrapperProps","tableContainerProps","scroll","previewStartIndex","differ","tableWrapperProps","tableProps","selectionProps","editInputProps","columnResizerProps","VeTable","VeLocale","Component","$veLocale","DemoBlock","Anchor","VueLazyContainer","env","require","router","beforeEach","to","NProgress","done","afterEach","blocks","hljs","highlightBlock","APP","ZH","stripScript","stripStyle","stripTemplate","$router","query","anchor","finally"],"mappings":"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","file":"js/app.682d46e0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-01d97210\":\"3695cc0e\",\"chunk-0531fab8\":\"67dcb1ca\",\"chunk-0bbd516c\":\"ab12179f\",\"chunk-0e9db98e\":\"d812493c\",\"chunk-111f0e52\":\"5edf57ed\",\"chunk-1a8a5b1a\":\"44184d05\",\"chunk-2d0afd9c\":\"10b914d9\",\"chunk-2d0b16cf\":\"f1cde93c\",\"chunk-2d0b6d05\":\"c61a5b46\",\"chunk-2d0bd9b8\":\"625cc060\",\"chunk-2d0c1598\":\"3d0d4e6b\",\"chunk-2d0c4dda\":\"8a2ecb6f\",\"chunk-2d0c77bc\":\"7c51748f\",\"chunk-2d0cb734\":\"eea3dd67\",\"chunk-2d0cf4a8\":\"d2723e4c\",\"chunk-2d0d0901\":\"25366ae2\",\"chunk-2d0d621b\":\"33ac67ab\",\"chunk-2d0d7692\":\"5f989332\",\"chunk-2d0daee1\":\"332fbd44\",\"chunk-2d0ddb56\":\"99a5b5d6\",\"chunk-2d0de6c6\":\"68b71381\",\"chunk-2d0e6170\":\"8b9b10f7\",\"chunk-aad157fa\":\"3e9a47d5\",\"chunk-2d0e6c57\":\"dc4971e7\",\"chunk-2d0e8fd4\":\"9d40d552\",\"chunk-2d0e943c\":\"d063f7d3\",\"chunk-2d0e9b80\":\"9ac6f75e\",\"chunk-2d20efb8\":\"f08c5b28\",\"chunk-2d21064d\":\"f5a9ef8d\",\"chunk-2d21645e\":\"945a1e6a\",\"chunk-2d2174ea\":\"c474ea69\",\"chunk-2d217c5e\":\"b60ac5a4\",\"chunk-2d217cc9\":\"a2aabc9f\",\"chunk-2d21b23f\":\"5e5cf52f\",\"chunk-2d21b346\":\"926c120f\",\"chunk-2d21d817\":\"2a3def7e\",\"chunk-2d21f0a9\":\"9356ee37\",\"chunk-2d21f28c\":\"7803d337\",\"chunk-2d224c89\":\"b9dc5c25\",\"chunk-2d2266fb\":\"0a67c60c\",\"chunk-2d228897\":\"db6eaa6f\",\"chunk-2d230df7\":\"7ee435a3\",\"chunk-2d23723d\":\"93b0c4f6\",\"chunk-2d238264\":\"d294d5df\",\"chunk-2d238466\":\"c5a5b054\",\"chunk-2dec8e62\":\"57306cd5\",\"chunk-330c9842\":\"07c4ce9a\",\"chunk-0ea8a1ff\":\"8dc9c191\",\"chunk-197c0064\":\"feff1025\",\"chunk-1bb7c056\":\"9c3966c9\",\"chunk-23588564\":\"8df84d2c\",\"chunk-2d0be333\":\"4a34b40c\",\"chunk-3988a222\":\"093e0f18\",\"chunk-5f37565a\":\"26bbf095\",\"chunk-3c08e466\":\"ed72be2b\",\"chunk-3c503f11\":\"51b3b5cb\",\"chunk-3c5508a8\":\"cbe7dc76\",\"chunk-3fed1e69\":\"07ee5285\",\"chunk-4ad4ee14\":\"927914cc\",\"chunk-558f2502\":\"817f7cfe\",\"chunk-57dbc9a0\":\"9c1fb399\",\"chunk-df2173ba\":\"88047ff4\",\"chunk-5ad9c301\":\"b58e6bb5\",\"chunk-6311d6e4\":\"e9b55205\",\"chunk-676ab716\":\"b06f8a3a\",\"chunk-72b5c1c5\":\"acff8326\",\"chunk-74192098\":\"ef6dd100\",\"chunk-8dae9a0e\":\"404494fe\",\"chunk-ad36806a\":\"304a1fc3\",\"chunk-41ef3acb\":\"aaf11606\",\"chunk-47239d68\":\"66d1a424\",\"chunk-492be25d\":\"bab935f1\",\"chunk-51d09297\":\"8199cad2\",\"chunk-64f56cf4\":\"75676118\",\"chunk-65b8b01c\":\"7aef422a\",\"chunk-6c40dc59\":\"e2039530\",\"chunk-71843e6a\":\"889e055d\",\"chunk-76f81d66\":\"a8544af1\",\"chunk-7a0361a0\":\"60e5ee7d\",\"chunk-a7675f98\":\"97c0e6a7\",\"chunk-034aaaac\":\"3dba0c0a\",\"chunk-134340fb\":\"66d654e1\",\"chunk-18aff0e4\":\"934d711c\",\"chunk-211aab0f\":\"9bac6e4a\",\"chunk-0b01f334\":\"6b278533\",\"chunk-3e9c837a\":\"8aa3d717\",\"chunk-33c9e563\":\"64d3652e\",\"chunk-36f46100\":\"3e6bab5d\",\"chunk-44ccc99c\":\"a649d691\",\"chunk-46800696\":\"f12d44c6\",\"chunk-4b123a8c\":\"92310206\",\"chunk-4d23d1d2\":\"1ef52f3e\",\"chunk-57467bc8\":\"ce03cb6b\",\"chunk-295cf444\":\"d14a7a40\",\"chunk-5fd9674c\":\"6b11702d\",\"chunk-67e8c551\":\"06f88d95\",\"chunk-7d447681\":\"5b3881ea\",\"chunk-8a2253b6\":\"142873f3\",\"chunk-b6b397a6\":\"71d16a9e\",\"chunk-ffa18aee\":\"290b577d\",\"chunk-be5abec6\":\"f3e36da1\",\"chunk-be6034c6\":\"45d7ab9f\",\"chunk-c13d4c7a\":\"da3c404e\",\"chunk-c8d58690\":\"83bab361\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0531fab8\":1,\"chunk-0bbd516c\":1,\"chunk-111f0e52\":1,\"chunk-1a8a5b1a\":1,\"chunk-aad157fa\":1,\"chunk-2dec8e62\":1,\"chunk-330c9842\":1,\"chunk-23588564\":1,\"chunk-3fed1e69\":1,\"chunk-41ef3acb\":1,\"chunk-47239d68\":1,\"chunk-492be25d\":1,\"chunk-51d09297\":1,\"chunk-64f56cf4\":1,\"chunk-65b8b01c\":1,\"chunk-71843e6a\":1,\"chunk-76f81d66\":1,\"chunk-7a0361a0\":1,\"chunk-a7675f98\":1,\"chunk-44ccc99c\":1,\"chunk-b6b397a6\":1,\"chunk-c8d58690\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-01d97210\":\"31d6cfe0\",\"chunk-0531fab8\":\"d4038072\",\"chunk-0bbd516c\":\"b34ec5e3\",\"chunk-0e9db98e\":\"31d6cfe0\",\"chunk-111f0e52\":\"67bdd64a\",\"chunk-1a8a5b1a\":\"c78d663f\",\"chunk-2d0afd9c\":\"31d6cfe0\",\"chunk-2d0b16cf\":\"31d6cfe0\",\"chunk-2d0b6d05\":\"31d6cfe0\",\"chunk-2d0bd9b8\":\"31d6cfe0\",\"chunk-2d0c1598\":\"31d6cfe0\",\"chunk-2d0c4dda\":\"31d6cfe0\",\"chunk-2d0c77bc\":\"31d6cfe0\",\"chunk-2d0cb734\":\"31d6cfe0\",\"chunk-2d0cf4a8\":\"31d6cfe0\",\"chunk-2d0d0901\":\"31d6cfe0\",\"chunk-2d0d621b\":\"31d6cfe0\",\"chunk-2d0d7692\":\"31d6cfe0\",\"chunk-2d0daee1\":\"31d6cfe0\",\"chunk-2d0ddb56\":\"31d6cfe0\",\"chunk-2d0de6c6\":\"31d6cfe0\",\"chunk-2d0e6170\":\"31d6cfe0\",\"chunk-aad157fa\":\"3335ef5f\",\"chunk-2d0e6c57\":\"31d6cfe0\",\"chunk-2d0e8fd4\":\"31d6cfe0\",\"chunk-2d0e943c\":\"31d6cfe0\",\"chunk-2d0e9b80\":\"31d6cfe0\",\"chunk-2d20efb8\":\"31d6cfe0\",\"chunk-2d21064d\":\"31d6cfe0\",\"chunk-2d21645e\":\"31d6cfe0\",\"chunk-2d2174ea\":\"31d6cfe0\",\"chunk-2d217c5e\":\"31d6cfe0\",\"chunk-2d217cc9\":\"31d6cfe0\",\"chunk-2d21b23f\":\"31d6cfe0\",\"chunk-2d21b346\":\"31d6cfe0\",\"chunk-2d21d817\":\"31d6cfe0\",\"chunk-2d21f0a9\":\"31d6cfe0\",\"chunk-2d21f28c\":\"31d6cfe0\",\"chunk-2d224c89\":\"31d6cfe0\",\"chunk-2d2266fb\":\"31d6cfe0\",\"chunk-2d228897\":\"31d6cfe0\",\"chunk-2d230df7\":\"31d6cfe0\",\"chunk-2d23723d\":\"31d6cfe0\",\"chunk-2d238264\":\"31d6cfe0\",\"chunk-2d238466\":\"31d6cfe0\",\"chunk-2dec8e62\":\"95d772cc\",\"chunk-330c9842\":\"e1d3fe52\",\"chunk-0ea8a1ff\":\"31d6cfe0\",\"chunk-197c0064\":\"31d6cfe0\",\"chunk-1bb7c056\":\"31d6cfe0\",\"chunk-23588564\":\"db19dcdd\",\"chunk-2d0be333\":\"31d6cfe0\",\"chunk-3988a222\":\"31d6cfe0\",\"chunk-5f37565a\":\"31d6cfe0\",\"chunk-3c08e466\":\"31d6cfe0\",\"chunk-3c503f11\":\"31d6cfe0\",\"chunk-3c5508a8\":\"31d6cfe0\",\"chunk-3fed1e69\":\"5b59b7e9\",\"chunk-4ad4ee14\":\"31d6cfe0\",\"chunk-558f2502\":\"31d6cfe0\",\"chunk-57dbc9a0\":\"31d6cfe0\",\"chunk-df2173ba\":\"31d6cfe0\",\"chunk-5ad9c301\":\"31d6cfe0\",\"chunk-6311d6e4\":\"31d6cfe0\",\"chunk-676ab716\":\"31d6cfe0\",\"chunk-72b5c1c5\":\"31d6cfe0\",\"chunk-74192098\":\"31d6cfe0\",\"chunk-8dae9a0e\":\"31d6cfe0\",\"chunk-ad36806a\":\"31d6cfe0\",\"chunk-41ef3acb\":\"73165a15\",\"chunk-47239d68\":\"1391ec65\",\"chunk-492be25d\":\"c4a3a430\",\"chunk-51d09297\":\"67bdd64a\",\"chunk-64f56cf4\":\"8a4f71b0\",\"chunk-65b8b01c\":\"8a4f71b0\",\"chunk-6c40dc59\":\"31d6cfe0\",\"chunk-71843e6a\":\"d0e832ae\",\"chunk-76f81d66\":\"b34ec5e3\",\"chunk-7a0361a0\":\"c78d663f\",\"chunk-a7675f98\":\"e1d3fe52\",\"chunk-034aaaac\":\"31d6cfe0\",\"chunk-134340fb\":\"31d6cfe0\",\"chunk-18aff0e4\":\"31d6cfe0\",\"chunk-211aab0f\":\"31d6cfe0\",\"chunk-0b01f334\":\"31d6cfe0\",\"chunk-3e9c837a\":\"31d6cfe0\",\"chunk-33c9e563\":\"31d6cfe0\",\"chunk-36f46100\":\"31d6cfe0\",\"chunk-44ccc99c\":\"5b59b7e9\",\"chunk-46800696\":\"31d6cfe0\",\"chunk-4b123a8c\":\"31d6cfe0\",\"chunk-4d23d1d2\":\"31d6cfe0\",\"chunk-57467bc8\":\"31d6cfe0\",\"chunk-295cf444\":\"31d6cfe0\",\"chunk-5fd9674c\":\"31d6cfe0\",\"chunk-67e8c551\":\"31d6cfe0\",\"chunk-7d447681\":\"31d6cfe0\",\"chunk-8a2253b6\":\"31d6cfe0\",\"chunk-b6b397a6\":\"db19dcdd\",\"chunk-ffa18aee\":\"31d6cfe0\",\"chunk-be5abec6\":\"31d6cfe0\",\"chunk-be6034c6\":\"31d6cfe0\",\"chunk-c13d4c7a\":\"31d6cfe0\",\"chunk-c8d58690\":\"d0e832ae\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\n    pagination: {\n        goto: \"前往\",\n        page: \"页\",\n        itemsPerPage: \" 条/页\",\n        total: (total) => `共 ${total} 条`,\n        prev5: \"向前 5 页\",\n        next5: \"向后 5 页\",\n    },\n    table: {\n        // filter\n        confirmFilter: \"筛选\",\n        resetFilter: \"重置\",\n        // contextmenu\n        cut: \"剪切\",\n        copy: \"复制\",\n        insertRowAbove: \"上方插入行\",\n        insertRowBelow: \"下方插入行\",\n        removeRow: \"删除 $1 行\",\n        emptyRow: \"清空 $1 行\",\n        //removeColumn: \"删除 $1 列\",\n        emptyColumn: \"清空 $1 列\",\n        //hideColumn: \"隐藏 $1 列\",\n        emptyCell: \"清空单元格\",\n        leftFixedColumnTo: \"左列冻结\",\n        cancelLeftFixedColumnTo: \"取消左列冻结\",\n        rightFixedColumnTo: \"右列冻结\",\n        cancelRightFixedColumnTo: \"取消右列冻结\",\n    },\n};\n","import zhCN from \"../../../../packages/src/locale/lang/zh-CN\";\nimport enUS from \"../../../../packages/src/locale/lang/en-US\";\n\nexport default {\n    zh: {\n        menus: [\n            {\n                name: \"文档\",\n                path: \"/doc\",\n                isRouter: true,\n            },\n            {\n                name: \"示例\",\n                path: \"/demo\",\n                isRouter: true,\n            },\n            {\n                name: \"更新日志\",\n                path: \"https://github.com/Happy-Coding-Clans/vue-easytable/releases\",\n                isRouter: false,\n            },\n        ],\n        docTheme: \"组件主题\",\n        // 主题切换配置\n        switchDocThemeOptions: [\n            { value: \"default\", label: \"默认\" },\n            { value: \"dark\", label: \"暗黑\" },\n        ],\n        anchorCatalogTitle: \"目录\",\n        // 组件配置多语言跟着文档语言环境走\n        compLang: zhCN,\n        eidtDemoTitle: \"在 Github 上编辑\",\n        eidtDemoUrlPrefix:\n            \"https://github.com/huangshuwei/vue-easytable/edit/master/examples/src/docs/zh/\",\n        demo: {\n            description: \"功能描述\",\n            expandCode: \"展开代码\",\n            foldCode: \"收起代码\",\n            openInCodepen: \"在 Codepen 中编辑\",\n            openInCodeSandBox: \"在 CodeSandBox 中编辑\",\n        },\n        completeDemo: {\n            demo1: {\n                selection: \"这是数据表格的应用场景\",\n                dataRowsOption: [\n                    {\n                        value: 5000,\n                        label: \"5000 行\",\n                    },\n                    {\n                        value: 10000,\n                        label: \"10,000 行\",\n                    },\n                    {\n                        value: 100000,\n                        label: \"100,000 行\",\n                    },\n                    {\n                        value: 150000,\n                        label: \"150,000 行\",\n                    },\n                ],\n                dataRows: \"数据量：\",\n                columnFixed: \"列固定：\",\n                loading: \"Loading：\",\n                expand: \"行展开：\",\n                radio: \"行单选：\",\n                checkbox: \"行多选：\",\n            },\n            demo2: {\n                selection: \"当然，你也可以把它当做 Excel 来用\",\n                description:\n                    \"在这个案例中，你可以尝试右键菜单、行和列多选、即时输入、单元格自动填充等功能...\",\n            },\n        },\n    },\n    en: {\n        menus: [\n            {\n                name: \"Document\",\n                path: \"/doc\",\n                isRouter: true,\n            },\n            {\n                name: \"Demo\",\n                path: \"/demo\",\n                isRouter: true,\n            },\n            {\n                name: \"Changelog\",\n                path: \"https://github.com/Happy-Coding-Clans/vue-easytable/releases\",\n                isRouter: false,\n            },\n        ],\n        docTheme: \"Component Theme\",\n        // 主题切换配置\n        switchDocThemeOptions: [\n            { value: \"default\", label: \"default\" },\n            { value: \"dark\", label: \"dark\" },\n        ],\n        anchorCatalogTitle: \"Contents\",\n        compLang: enUS,\n        eidtDemoTitle: \"Edit this on Github\",\n        eidtDemoUrlPrefix:\n            \"https://github.com/huangshuwei/vue-easytable/edit/master/examples/src/docs/en/\",\n        demo: {\n            description: \"Code Description\",\n            expandCode: \"Expand Code\",\n            foldCode: \"Hide Code\",\n            openInCodepen: \"Edit in Codepen\",\n            openInCodeSandBox: \"Edit in CodeSandBox\",\n        },\n        completeDemo: {\n            demo1: {\n                selection: \"Here is a data grid .\",\n                dataRowsOption: [\n                    {\n                        value: 5000,\n                        label: \"5000 Rows\",\n                    },\n                    {\n                        value: 10000,\n                        label: \"10,000 Rows\",\n                    },\n                    {\n                        value: 100000,\n                        label: \"100,000 Rows\",\n                    },\n                    {\n                        value: 150000,\n                        label: \"150,000 Rows\",\n                    },\n                ],\n                dataRows: \"Data Rows:\",\n                columnFixed: \"Fixed Columns:\",\n                loading: \"Loading:\",\n                expand: \"Row Expand:\",\n                radio: \"Row Radio:\",\n                checkbox: \"Row Checkbox:\",\n            },\n            demo2: {\n                selection:\n                    \"Of course, you can use it like Excel or Google Sheets .\",\n                description:\n                    \"In this case, you can try features such as right-click menu, multiple selection of rows and columns, real-time input, and cell autofilling, etc.\",\n            },\n        },\n    },\n};\n","import { DOC_LANG } from \"@/utils/constant.js\";\n\nexport default {\n    computed: {\n        // current doc lang\n        currentDocLang() {\n            return this.$route.path.split(\"/\")[1] || DOC_LANG.EN;\n        },\n    },\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=style&index=0&id=3c06f5ee&prod&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"main-banner\"},[_c('div',{staticClass:\"main-banner-warpper\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showLogo),expression:\"showLogo\"}],staticClass:\"main-banner-logo\"},[_c('i',{staticClass:\"icon iconfont icon-table\",staticStyle:{\"font-size\":\"20px\"}}),_vm._v(\" vue-easytable \")]),_c('div',{staticClass:\"main-banner-menus-container\"},[_c('div',{staticClass:\"main-banner-menus\"},[_vm._l((_vm.currentLocal.menus),function(item){return _c('span',{key:item.name,class:[\n                            'main-banner-menu-item',\n                            _vm.activeMenuClass(item) ]},[_c('a',{staticClass:\"main-banner-menu-link\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.gotoRouter(item)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])])}),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showLangDropdown = false); }\n                            ),expression:\"\\n                                () => (showLangDropdown = false)\\n                            \"}],staticClass:\"switch-lang-container\"},[_c('span',{staticClass:\"switch-lang\",on:{\"click\":function($event){_vm.showLangDropdown = !_vm.showLangDropdown}}},[_c('i',{staticClass:\"icon iconfont icon-translate\"}),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-lang-dropdown-pannel\",class:_vm.showLangDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.switchLangOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.value ===\n                                                _vm.currentDocLang,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.langChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showThemeDropdown = false); }\n                            ),expression:\"\\n                                () => (showThemeDropdown = false)\\n                            \"}],staticClass:\"switch-theme-container\"},[_c('span',{staticClass:\"switch-theme\",on:{\"click\":function($event){_vm.showThemeDropdown = !_vm.showThemeDropdown}}},[_vm._v(\" \"+_vm._s(_vm.currentLocal.docTheme)+\" \"),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-theme-dropdown-pannel\",class:_vm.showThemeDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.currentLocal.switchDocThemeOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.value ===\n                                                _vm.currentDocTheme,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.themeChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_c('span',{staticClass:\"main-banner-menu-item\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(\n                                function () { return (_vm.showVersionDropdown = false); }\n                            ),expression:\"\\n                                () => (showVersionDropdown = false)\\n                            \"}],staticClass:\"switch-version-container\"},[_c('span',{staticClass:\"switch-version\",on:{\"click\":function($event){_vm.showVersionDropdown =\n                                        !_vm.showVersionDropdown}}},[_vm._v(\" \"+_vm._s(_vm.currentDocVersion)+\" \"),_c('i',{staticClass:\"icon iconfont icon-dropdown\"})]),_c('div',{staticClass:\"switch-version-dropdown-pannel\",class:_vm.showVersionDropdown\n                                        ? 'dropdown-pannel-show'\n                                        : ''},_vm._l((_vm.switchVersionOptions),function(item){return _c('span',{key:item.value,class:[\n                                        'dropdown-item',\n                                        {\n                                            active:\n                                                item.label ===\n                                                _vm.currentDocVersion,\n                                        } ],on:{\"click\":function($event){$event.stopPropagation();return _vm.versionChange(item)}}},[_vm._v(\" \"+_vm._s(item.label)+\" \")])}),0)])]),_vm._m(0)],2)])])]),_c('keep-alive',[(_vm.$route.meta.keepAlive)?_c('router-view'):_vm._e()],1),(!_vm.$route.meta.keepAlive)?_c('router-view'):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"main-banner-menu-item\"},[_c('a',{staticClass:\"main-banner-menu-link\",attrs:{\"href\":\"https://github.com/huangshuwei/vue-easytable\"}},[_c('i',{staticClass:\"icon iconfont icon-github\"})])])}]\n\nexport { render, staticRenderFns }","import Cookies from \"js-cookie\";\n\nimport { DOC_THEME_COOKIE } from \"./constant\";\n\n// set doc theme cookie\nexport function setDocTheme(value) {\n    return Cookies.set(DOC_THEME_COOKIE, value);\n}\n\n// get doc theme cookie\nexport function getDocTheme() {\n    let result = Cookies.get(DOC_THEME_COOKIE);\n    return result;\n}\n","import ThemeSwitcherTool from \"theme-switcher-tool\";\n\nconst styleLinkId = \"theme_creator_cli_style_id\";\n\nconst themeSwitcherTool = ThemeSwitcherTool({\n    // Your theme list\n    themeList: [\n        {\n            themeName: \"dark\",\n            themePath:\n                \"https://unpkg.com/vue-easytable/libs/theme-dark/index.css\",\n        },\n        {\n            themeName: \"default\",\n            themePath:\n                \"https://unpkg.com/vue-easytable/libs/theme-default/index.css\",\n        },\n    ],\n    // Your actual style id\n    styleLinkId: styleLinkId,\n    useStorage: false,\n    storageKey: \"theme_switcher_tool_theme\",\n});\n\nexport default {\n    methods: {\n        // switch theme mix\n        switchThemeMix(themeName) {\n            return new Promise((resolve, reject) => {\n                themeSwitcherTool\n                    .switcher({\n                        themeName: themeName,\n                    })\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch(reject);\n            });\n        },\n    },\n    mounted() {\n        // 防止已发布的样式文件，对正在开发的样式有干扰\n        if (process.env.NODE_ENV === \"development\") {\n            let themeLink = document.getElementById(styleLinkId);\n            if (themeLink) {\n                themeLink.parentNode.removeChild(themeLink);\n            }\n        }\n    },\n};\n","export default {\n    bind: function (el, binding, vNode) {\n        if (typeof binding.value !== \"function\") {\n            let msg = `in [clickoutside] directives, provided expression '${binding.expression}' is not a function `;\n\n            const compName = vNode.context.name;\n\n            if (compName) {\n                msg += `in ${compName}`;\n            }\n            console.error(msg);\n        }\n\n        var handler = (e) => {\n            if (!el.contains(e.target) && el !== e.target) {\n                binding.value(e);\n            } else {\n                return false;\n            }\n        };\n\n        el.__clickOutSide__ = handler;\n\n        document.addEventListener(\"click\", handler, true);\n    },\n\n    unbind: function (el) {\n        document.removeEventListener(\"click\", el.__clickOutSide__, true);\n        el.__clickOutSide__ = null;\n    },\n};\n","/*\n * dependence on https://github.com/axios/axios\n * */\n\nimport axios from \"axios\";\n\nconst service = axios.create({});\n\n// request interceptor\nservice.interceptors.request.use(\n    (request) => {\n        return request;\n    },\n    (error) => {\n        // Do something with request error\n        return Promise.reject(error);\n    },\n);\n\n// response interceptor\nservice.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        return Promise.reject(error);\n    },\n);\n\nexport default service;\n","import httpRequest from \"@/plugins/http-request\";\n\n// get versions\nexport function getVersions() {\n    return new Promise((resolve, reject) => {\n        let net = window.location;\n\n        const isDev = process.env.NODE_ENV === \"development\";\n\n        let url = `${net.protocol}//${net.hostname}:${net.port}`;\n\n        // 包含 /vue-easytable/ 目录\n        if (!isDev) {\n            url += \"/vue-easytable\";\n        }\n        url += `/versions.json?t=${new Date().getTime()}`;\n\n        httpRequest({\n            url: url,\n            method: \"get\",\n        })\n            .then((res) => {\n                resolve(res);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n    });\n}\n","<template>\n    <div class=\"main\">\n        <div class=\"main-banner\">\n            <div class=\"main-banner-warpper\">\n                <!-- logo -->\n                <div v-show=\"showLogo\" class=\"main-banner-logo\">\n                    <i\n                        style=\"font-size: 20px\"\n                        class=\"icon iconfont icon-table\"\n                    ></i>\n                    &nbsp;vue-easytable\n                </div>\n                <!-- menus -->\n                <div class=\"main-banner-menus-container\">\n                    <div class=\"main-banner-menus\">\n                        <span\n                            v-for=\"item in currentLocal.menus\"\n                            :key=\"item.name\"\n                            :class=\"[\n                                'main-banner-menu-item',\n                                activeMenuClass(item),\n                            ]\"\n                        >\n                            <a\n                                class=\"main-banner-menu-link\"\n                                href=\"javascript:void(0)\"\n                                @click=\"gotoRouter(item)\"\n                            >\n                                {{ item.name }}\n                            </a>\n                        </span>\n\n                        <!-- switch lang -->\n                        <span class=\"main-banner-menu-item\">\n                            <div\n                                v-click-outside=\"\n                                    () => (showLangDropdown = false)\n                                \"\n                                class=\"switch-lang-container\"\n                            >\n                                <span\n                                    class=\"switch-lang\"\n                                    @click=\"\n                                        showLangDropdown = !showLangDropdown\n                                    \"\n                                >\n                                    <i class=\"icon iconfont icon-translate\" />\n                                    <i class=\"icon iconfont icon-dropdown\" />\n                                </span>\n                                <div\n                                    class=\"switch-lang-dropdown-pannel\"\n                                    :class=\"\n                                        showLangDropdown\n                                            ? 'dropdown-pannel-show'\n                                            : ''\n                                    \"\n                                >\n                                    <span\n                                        v-for=\"item in switchLangOptions\"\n                                        :key=\"item.value\"\n                                        :class=\"[\n                                            'dropdown-item',\n                                            {\n                                                active:\n                                                    item.value ===\n                                                    currentDocLang,\n                                            },\n                                        ]\"\n                                        @click.stop=\"langChange(item)\"\n                                    >\n                                        {{ item.label }}\n                                    </span>\n                                </div>\n                            </div>\n                        </span>\n\n                        <!-- switch theme -->\n                        <span class=\"main-banner-menu-item\">\n                            <div\n                                v-click-outside=\"\n                                    () => (showThemeDropdown = false)\n                                \"\n                                class=\"switch-theme-container\"\n                            >\n                                <span\n                                    class=\"switch-theme\"\n                                    @click=\"\n                                        showThemeDropdown = !showThemeDropdown\n                                    \"\n                                >\n                                    {{ currentLocal.docTheme }}\n                                    <i class=\"icon iconfont icon-dropdown\" />\n                                </span>\n                                <div\n                                    class=\"switch-theme-dropdown-pannel\"\n                                    :class=\"\n                                        showThemeDropdown\n                                            ? 'dropdown-pannel-show'\n                                            : ''\n                                    \"\n                                >\n                                    <span\n                                        v-for=\"item in currentLocal.switchDocThemeOptions\"\n                                        :key=\"item.value\"\n                                        :class=\"[\n                                            'dropdown-item',\n                                            {\n                                                active:\n                                                    item.value ===\n                                                    currentDocTheme,\n                                            },\n                                        ]\"\n                                        @click.stop=\"themeChange(item)\"\n                                    >\n                                        {{ item.label }}\n                                    </span>\n                                </div>\n                            </div>\n                        </span>\n\n                        <!-- switch version -->\n                        <span class=\"main-banner-menu-item\">\n                            <div\n                                v-click-outside=\"\n                                    () => (showVersionDropdown = false)\n                                \"\n                                class=\"switch-version-container\"\n                            >\n                                <span\n                                    class=\"switch-version\"\n                                    @click=\"\n                                        showVersionDropdown =\n                                            !showVersionDropdown\n                                    \"\n                                >\n                                    {{ currentDocVersion }}\n                                    <i class=\"icon iconfont icon-dropdown\" />\n                                </span>\n                                <div\n                                    class=\"switch-version-dropdown-pannel\"\n                                    :class=\"\n                                        showVersionDropdown\n                                            ? 'dropdown-pannel-show'\n                                            : ''\n                                    \"\n                                >\n                                    <span\n                                        v-for=\"item in switchVersionOptions\"\n                                        :key=\"item.value\"\n                                        :class=\"[\n                                            'dropdown-item',\n                                            {\n                                                active:\n                                                    item.label ===\n                                                    currentDocVersion,\n                                            },\n                                        ]\"\n                                        @click.stop=\"versionChange(item)\"\n                                    >\n                                        {{ item.label }}\n                                    </span>\n                                </div>\n                            </div>\n                        </span>\n\n                        <span class=\"main-banner-menu-item\">\n                            <a\n                                class=\"main-banner-menu-link\"\n                                href=\"https://github.com/huangshuwei/vue-easytable\"\n                            >\n                                <i class=\"icon iconfont icon-github\"></i>\n                            </a>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <keep-alive>\n            <router-view v-if=\"$route.meta.keepAlive\" />\n        </keep-alive>\n        <router-view v-if=\"!$route.meta.keepAlive\" />\n    </div>\n</template>\n\n<script>\nimport { getDocTheme, setDocTheme } from \"@/utils/cookies\";\nimport locale from \"./locale\";\nimport I18nMixins from \"./mixins/i18n-mixins\";\nimport ThemeSwitchMixins from \"./mixins/theme-switch-mixins.js\";\nimport clickoutside from \"./directives/clickoutside.js\";\nimport { version as latestVersion } from \"../../../package.json\";\n\nimport { getVersions } from \"@/service/index.js\";\n\nexport default {\n    directives: {\n        \"click-outside\": clickoutside,\n    },\n    mixins: [I18nMixins, ThemeSwitchMixins],\n    data() {\n        return {\n            //switch lang option\n            switchLangOptions: [\n                { value: \"en\", label: \"English\" },\n                { value: \"zh\", label: \"简体中文\" },\n            ],\n            // show lang dropdown\n            showLangDropdown: false,\n            //switch version option,\n            switchVersionOptions: [],\n            showVersionDropdown: false,\n            // show theme dropdown\n            showThemeDropdown: false,\n            // default doc theme\n            defalutDocTheme: \"default\",\n            // current doc theme\n            currentDocTheme: \"\",\n        };\n    },\n    computed: {\n        // current local\n        currentLocal() {\n            return locale[this.currentDocLang];\n        },\n\n        // show logo\n        showLogo() {\n            return window.env !== \"dev\";\n        },\n\n        // current doc version\n        currentDocVersion() {\n            const { switchVersionOptions } = this;\n\n            const { pathname } = window.location;\n\n            const versionItem = switchVersionOptions.find(\n                (x) => x.value === pathname,\n            );\n\n            return versionItem ? versionItem.label : latestVersion;\n        },\n    },\n    watch: {\n        currentDocLang() {\n            this.$veLocale.use(locale[this.currentDocLang][\"compLang\"]);\n        },\n    },\n    methods: {\n        // lang change\n        langChange(item) {\n            const { matched } = this.$route;\n\n            const lang = item.value;\n\n            if (matched[0].path !== `/${lang}`) {\n                const path = this.$route.path.replace(\n                    this.currentDocLang,\n                    lang,\n                );\n                this.$router.push(path);\n                this.$veLocale.use(locale[lang][\"compLang\"]);\n            }\n            setTimeout(() => {\n                this.showLangDropdown = false;\n            }, 150);\n        },\n        // theme change\n        themeChange({ value }) {\n            setDocTheme(value);\n            this.currentDocTheme = value;\n            this.showThemeDropdown = false;\n\n            if (window.env === \"dev\") {\n                setTimeout(() => {\n                    window.location.reload();\n                });\n            } else {\n                this.switchThemeMix(value).finally(() => {\n                    //this.loadingInstance.close();\n                });\n            }\n        },\n        // version change\n        versionChange(item) {\n            const { protocol, host, pathname, hash } = window.location;\n            // version 1.0\n            if (item.isVersion1) {\n                const newUrl = protocol + \"//\" + host + item.value;\n                window.open(newUrl, \"_blank\");\n            } else {\n                const newUrl = protocol + \"//\" + host + item.value + hash;\n                window.open(item.value, \"_self\");\n            }\n        },\n        // go ro router path\n        gotoRouter(item) {\n            if (item.isRouter) {\n                this.$router\n                    .push({ path: `/${this.currentDocLang}${item.path}` })\n                    .catch(() => {});\n            } else {\n                window.open(item.path, \"_blank\");\n            }\n        },\n        activeMenuClass(item) {\n            let result = \"\";\n\n            const { matched } = this.$route;\n            if (\n                matched &&\n                matched.length > 0 &&\n                matched.some(\n                    (x) => x.path === `/${this.currentDocLang}${item.path}`,\n                )\n            ) {\n                result = \"link-active\";\n            }\n            return result;\n        },\n        // init theme\n        initDocTheme() {\n            this.currentDocTheme = getDocTheme() ?? this.defalutDocTheme;\n            // 初始化\n            if (window.env != \"dev\") {\n                this.switchThemeMix(this.currentDocTheme);\n            }\n            console.log(\"current doc theme ::\", this.currentDocTheme);\n        },\n    },\n    created() {\n        getVersions().then(({ data }) => {\n            this.switchVersionOptions = data;\n        });\n    },\n    mounted() {\n        this.initDocTheme();\n    },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./app.vue?vue&type=template&id=65c2f821&\"\nimport script from \"./app.vue?vue&type=script&lang=js&\"\nexport * from \"./app.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import routers from \"./locale\";\n\nconst emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\n\nconst docLayout = () => import(\"@/comp/layout/doc-layout.vue\");\n\nexport default [\n    {\n        path: \"/\",\n        meta: { keepAlive: true, hide: true },\n        redirect: \"/en\",\n    }, // 默认路由\n    {\n        path: \"*\", // 页面不存在的情况下会跳到首页\n        redirect: \"/\",\n    },\n    {\n        path: \"/zh\",\n        component: emptyLayout,\n        redirect: \"/zh/demo\",\n        children: [\n            {\n                path: \"demo\",\n                component: () => import(\"../demo/index.vue\"),\n                name: \"示例\",\n                meta: { keepAlive: false, hide: true },\n            },\n            {\n                path: \"doc\",\n                component: docLayout,\n                redirect: \"/zh/doc/intro\",\n                children: routers.zh,\n            },\n        ],\n    },\n    {\n        path: \"/en\",\n        component: emptyLayout,\n        redirect: \"/en/demo\",\n        children: [\n            {\n                path: \"demo\",\n                component: () => import(\"../demo/index.vue\"),\n                name: \"示例\",\n                meta: { keepAlive: false, hide: true },\n            },\n            {\n                path: \"doc\",\n                component: docLayout,\n                redirect: \"/en/doc/intro\",\n                children: routers.en,\n            },\n        ],\n    },\n];\n","import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport routerConfig from \"./router.config.js\";\n//import routerConfig from \"./router.config-test.js\";\n\nVue.use(VueRouter);\n\nexport default new VueRouter({\n    linkActiveClass: \"active\",\n    routes: routerConfig,\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-block\",class:[{ hover: _vm.hovering }],on:{\"mouseenter\":function($event){_vm.hovering = true},\"mouseleave\":function($event){_vm.hovering = false}}},[_c('vue-lazy-container',{staticClass:\"source-code-container\",attrs:{\"tag-name\":\"div\"},on:{\"change\":_vm.visibilityChange}},[(_vm.isDemoRendered)?_c('div',{staticClass:\"source\"},[_vm._t(\"source\")],2):_c('div',{staticClass:\"source-empty\"},[_vm._v(\"Loading...\")])]),(_vm.$slots.default)?_c('div',{staticClass:\"description\"},[_c('div',{staticClass:\"title-container\"},[_c('span',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.demoLangInfo.description))])]),_c('div',{staticClass:\"content\"},[_vm._t(\"default\")],2)]):_vm._e(),_c('div',{ref:\"meta\",staticClass:\"meta\"},[_c('div',{staticClass:\"highlight\"},[_vm._t(\"highlight\")],2)]),_c('div',{ref:\"control\",staticClass:\"demo-block-control\",class:{ 'is-fixed': _vm.fixedControl },style:({ width: _vm.getDemoBlockControlWidth }),on:{\"click\":function($event){_vm.isExpanded = !_vm.isExpanded}}},[_c('i',{class:['arraw-slide-icon', _vm.iconClass, { hovering: _vm.hovering }]}),_c('transition',{attrs:{\"name\":\"text-slide\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hovering),expression:\"hovering\"}],staticClass:\"slide-content\"},[_vm._v(\" \"+_vm._s(_vm.controlText)+\" \")])]),_c('transition',{attrs:{\"name\":\"text-slide\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hovering || _vm.isExpanded),expression:\"hovering || isExpanded\"}],staticClass:\"slide-content online-edit-btn\",attrs:{\"size\":\"small\",\"type\":\"text\"}},[_c('CodeSandBoxOnline',{attrs:{\"btn-name\":_vm.demoLangInfo['openInCodeSandBox'] || '',\"version\":_vm.onlineExample.version,\"example-tpl\":_vm.onlineExample.html,\"example-script\":_vm.onlineExample.script,\"example-style\":_vm.onlineExample.style}})],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import LZString from \"lz-string\";\n\nexport default {\n    props: {\n        btnName: {\n            type: String,\n            required: true,\n        },\n        // vue-easytable version\n        version: {\n            type: String,\n            required: true,\n        },\n        // vue tpl\n        exampleTpl: {\n            type: String,\n            required: true,\n        },\n        // scripts\n        exampleScript: {\n            type: String,\n            default: \"\",\n        },\n        // style\n        exampleStyle: {\n            type: String,\n            required: true,\n        },\n    },\n    methods: {\n        // get main js content\n        getMainjsContent() {\n            return `\nimport Vue from \"vue\";\nimport Example from \"./Example.vue\";\n\n// import default theme\nimport \"vue-easytable/libs/theme-default/index.css\";\n\n// import vue-easytable library\nimport VueEasytable from \"vue-easytable\";\n\n// for online edit\nimport \"vue-easytable/libs/font/iconfont.css\";\n\n// only used by examples\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nVue.use(VueEasytable);\n\nVue.use(ElementUI);\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(Example)\n}).$mount(\"#app\");\n            `;\n        },\n\n        // get example.vue content\n        getExampleContent() {\n            return `\n            ${this.exampleTpl}\n\n            <script>\n             ${this.exampleScript}\n            </script>\n\n            <style>\n            ${this.exampleStyle}\n            </style>\n            `;\n        },\n\n        // get babel content\n        getbabelContent() {\n            return `\n{\n    \"presets\": [\n        \"@vue/cli-plugin-babel/preset\"\n    ]\n}\n            `;\n        },\n\n        getCodesanboxPrefillConfig() {\n            const {\n                version,\n                getExampleContent,\n                getMainjsContent,\n                getbabelContent,\n            } = this;\n\n            const codesandboxPackage = {\n                title: `vue-easytable@${version} example`,\n                main: \"main.js\",\n                dependencies: {\n                    vue: \"^2.6.11\",\n                    \"vue-template-compiler\": \"^2.6.11\",\n                    \"vue-easytable\": version,\n                    \"element-ui\": \"^2.15.0\",\n                    mockjs: \"^1.1.0\",\n                    \"@vue/cli-service\": \"4.1.1\",\n                    \"@vue/cli-plugin-babel\": \"4.5.11\",\n                    \"@vue/babel-preset-jsx\": \"1.2.4\",\n                },\n                // codesandbox 更新后不支持了\n                // devDependencies: {\n                //     \"@vue/cli-plugin-babel\": \"4.5.11\",\n                //     \"@vue/cli-plugin-eslint\": \"4.1.1\",\n                //     \"@vue/cli-service\": \"4.1.1\",\n                // },\n                scripts: {\n                    serve: \"vue-cli-service serve\",\n                    build: \"vue-cli-service build\",\n                    lint: \"vue-cli-service lint\",\n                },\n                browserslist: [\"> 1%\", \"last 2 versions\", \"not ie <= 8\"],\n            };\n\n            const codesanboxPrefillConfig = {\n                files: {\n                    \"package.json\": { content: codesandboxPackage },\n                    \"Example.vue\": { content: getExampleContent() },\n                    \"main.js\": { content: getMainjsContent() },\n                    \".babelrc\": { content: getbabelContent() },\n                },\n            };\n\n            return codesanboxPrefillConfig;\n        },\n    },\n    render() {\n        const { getCodesanboxPrefillConfig, btnName } = this;\n\n        function compress(string) {\n            return LZString.compressToBase64(string)\n                .replace(/\\+/g, \"-\") // Convert '+' to '-'\n                .replace(/\\//g, \"_\") // Convert '/' to '_'\n                .replace(/=+$/, \"\"); // Remove ending '='\n        }\n\n        const fromProps = {\n            ref: \"form\",\n        };\n\n        return (\n            <div>\n                <form\n                    {...fromProps}\n                    action=\"https://codesandbox.io/api/v1/sandboxes/define\"\n                    method=\"POST\"\n                    target=\"_blank\"\n                    onClick={() => {\n                        this.$refs[fromProps.ref].submit();\n                    }}\n                >\n                    <input\n                        type=\"hidden\"\n                        name=\"parameters\"\n                        value={compress(\n                            JSON.stringify(getCodesanboxPrefillConfig()),\n                        )}\n                    />\n                    {btnName}\n                </form>\n            </div>\n        );\n    },\n};\n","<template>\n    <div\n        class=\"demo-block\"\n        :class=\"[{ hover: hovering }]\"\n        @mouseenter=\"hovering = true\"\n        @mouseleave=\"hovering = false\"\n    >\n        <vue-lazy-container\n            class=\"source-code-container\"\n            tag-name=\"div\"\n            @change=\"visibilityChange\"\n        >\n            <div v-if=\"isDemoRendered\" class=\"source\">\n                <slot name=\"source\"></slot>\n            </div>\n            <div v-else class=\"source-empty\">Loading...</div>\n        </vue-lazy-container>\n        <div v-if=\"$slots.default\" class=\"description\">\n            <div class=\"title-container\">\n                <span class=\"title\">{{ demoLangInfo.description }}</span>\n            </div>\n            <div class=\"content\">\n                <slot></slot>\n            </div>\n        </div>\n        <div ref=\"meta\" class=\"meta\">\n            <div class=\"highlight\">\n                <slot name=\"highlight\"></slot>\n            </div>\n        </div>\n        <div\n            ref=\"control\"\n            class=\"demo-block-control\"\n            :style=\"{ width: getDemoBlockControlWidth }\"\n            :class=\"{ 'is-fixed': fixedControl }\"\n            @click=\"isExpanded = !isExpanded\"\n        >\n            <i\n                :class=\"['arraw-slide-icon', iconClass, { hovering: hovering }]\"\n            ></i>\n            <transition name=\"text-slide\">\n                <span v-show=\"hovering\" class=\"slide-content\">\n                    {{ controlText }}\n                </span>\n            </transition>\n            <!--    <transition name=\"text-slide\">\n                <div\n                    v-show=\"hovering || isExpanded\"\n                    size=\"small\"\n                    type=\"text\"\n                    class=\"slide-content online-edit-btn\"\n                >\n                    {{ demoLangInfo.runInline }}\n                </div>\n            </transition> -->\n            <transition name=\"text-slide\">\n                <div\n                    v-show=\"hovering || isExpanded\"\n                    size=\"small\"\n                    type=\"text\"\n                    class=\"slide-content online-edit-btn\"\n                >\n                    <CodeSandBoxOnline\n                        :btn-name=\"demoLangInfo['openInCodeSandBox'] || ''\"\n                        :version=\"onlineExample.version\"\n                        :example-tpl=\"onlineExample.html\"\n                        :example-script=\"onlineExample.script\"\n                        :example-style=\"onlineExample.style\"\n                    />\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script type=\"text/babel\">\nimport { stripScript, stripStyle, stripTemplate } from \"@/utils/index\";\n// 最外层\nimport { version } from \"../../../package.json\";\n\nimport locale from \"./locale\";\nimport I18nMixins from \"./mixins/i18n-mixins\";\nimport CodeSandBoxOnline from \"@/comp/online-edit/code-sand-box/index.jsx\";\n\nexport default {\n    components: { CodeSandBoxOnline },\n    mixins: [I18nMixins],\n    data() {\n        return {\n            onlineExample: {\n                version: \"\",\n                script: \"\",\n                html: \"\",\n                style: \"\",\n            },\n            hovering: false,\n            isExpanded: false,\n            fixedControl: false,\n            scrollParent: null,\n            // 是否示例渲染完成\n            isDemoRendered: false,\n        };\n    },\n\n    computed: {\n        // demo lang info\n        demoLangInfo() {\n            return locale[this.currentDocLang][\"demo\"];\n        },\n\n        iconClass() {\n            return this.isExpanded\n                ? \"iconfont icon-arrow-up\"\n                : \"iconfont icon-arrow-down\";\n        },\n\n        controlText() {\n            return this.isExpanded\n                ? this.demoLangInfo.foldCode\n                : this.demoLangInfo.expandCode;\n        },\n\n        codeArea() {\n            return this.$el.getElementsByClassName(\"meta\")[0];\n        },\n\n        codeAreaHeight() {\n            if (this.$el.getElementsByClassName(\"description\").length > 0) {\n                return this.$el.getElementsByClassName(\"highlight\")[0]\n                    .clientHeight;\n            }\n            return this.$el.getElementsByClassName(\"highlight\")[0].clientHeight;\n        },\n\n        getDemoBlockControlWidth() {\n            let result = \"100%\";\n\n            if (this.fixedControl) {\n                result =\n                    document.querySelector(\".demo-block\").clientWidth + \"px\";\n            }\n\n            return result;\n        },\n    },\n\n    watch: {\n        isExpanded(val) {\n            this.codeArea.style.height = val\n                ? `${this.codeAreaHeight + 1}px`\n                : \"0\";\n            if (!val) {\n                this.fixedControl = false;\n                this.$refs.control.style.left = \"0\";\n                this.removeScrollHandler();\n                return;\n            }\n            setTimeout(() => {\n                document.addEventListener(\"scroll\", this.scrollHandler);\n                this.scrollHandler();\n            }, 200);\n        },\n    },\n\n    methods: {\n        // visibility change\n        visibilityChange(entry, observer, id) {\n            const { isIntersecting } = entry;\n\n            // visibility\n            if (isIntersecting) {\n                this.isDemoRendered = true;\n            }\n        },\n        // scroll handler\n        scrollHandler() {\n            const { top, bottom, left } =\n                this.$refs.meta.getBoundingClientRect();\n            // 44px 为自身高度\n            this.fixedControl =\n                bottom > document.documentElement.clientHeight &&\n                top + 44 <= document.documentElement.clientHeight;\n\n            this.$refs.control.style.left = this.fixedControl\n                ? `${left}px`\n                : \"0\";\n        },\n\n        removeScrollHandler() {\n            document.removeEventListener(\"scroll\", this.scrollHandler);\n        },\n    },\n\n    created() {\n        this.onlineExample.version = version;\n        const highlight = this.$slots.highlight;\n        if (highlight && highlight[0]) {\n            let code = \"\";\n            let cur = highlight[0];\n            if (cur.tag === \"pre\" && cur.children && cur.children[0]) {\n                cur = cur.children[0];\n                if (cur.tag === \"code\") {\n                    code = cur.children[0].text;\n                }\n            }\n            if (code) {\n                this.onlineExample.html = stripTemplate(code);\n                this.onlineExample.script = stripScript(code);\n                this.onlineExample.style = stripStyle(code);\n            }\n        }\n    },\n\n    mounted() {\n        this.$nextTick(() => {\n            let highlight = this.$el.getElementsByClassName(\"highlight\")[0];\n            if (this.$el.getElementsByClassName(\"description\").length === 0) {\n                highlight.style.width = \"100%\";\n                highlight.borderRight = \"none\";\n            }\n        });\n    },\n\n    beforeDestroy() {\n        this.removeScrollHandler();\n    },\n};\n</script>\n\n<style lang=\"less\">\n.demo-block {\n    border: solid 1px #ebebeb;\n    border-radius: 3px;\n    transition: 0.2s;\n\n    &.hover {\n        box-shadow: 0 0 8px 0 rgba(232, 237, 250, 0.6),\n            0 2px 4px 0 rgba(232, 237, 250, 0.5);\n    }\n\n    &.demo-icon {\n        .source > div i {\n            margin: 0 24px;\n            font-size: 30px;\n        }\n    }\n\n    code {\n        font-family: Menlo, Monaco, Consolas, Courier, monospace;\n    }\n\n    .demo-button {\n        float: right;\n    }\n\n    .source-code-container {\n        min-height: 250px;\n        .source {\n            padding: 24px;\n        }\n        .source-empty {\n            min-height: 250px;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: #666;\n        }\n    }\n\n    .description {\n        box-sizing: border-box;\n        border-radius: 3px;\n        font-size: 14px;\n        line-height: 22px;\n        color: #666;\n        word-break: break-word;\n        margin-top: 50px;\n        background-color: #fff;\n\n        .title-container {\n            font-weight: 500;\n            position: relative;\n            &:before {\n                content: \"\";\n                display: block;\n                width: 100%;\n                height: 1px;\n                background: #eee;\n                position: absolute;\n                top: 10px;\n                left: 0;\n            }\n            .title {\n                display: inline-block;\n                background: #fff;\n                padding: 0 10px 0 10px;\n                position: relative;\n                margin-left: 30px;\n                font-size: 14px;\n            }\n        }\n\n        .content {\n            margin: 20px;\n            p {\n                margin: 0;\n                line-height: 26px;\n            }\n\n            code {\n                color: #5e6d82;\n                background-color: #e6effb;\n                margin: 0 4px;\n                display: inline-block;\n                padding: 1px 5px;\n                font-size: 12px;\n                border-radius: 3px;\n                height: 18px;\n                line-height: 18px;\n            }\n        }\n    }\n\n    .meta {\n        background-color: #fff;\n        overflow: hidden;\n        height: 0;\n        transition: height 0.2s;\n\n        .highlight {\n            pre {\n                margin: 0;\n            }\n\n            code.hljs {\n                margin: 0;\n                max-height: none;\n                border-radius: 0;\n                border-bottom: none;\n                &::before {\n                    content: none;\n                }\n            }\n        }\n    }\n\n    .demo-block-control {\n        border-top: solid 1px #eaeefb;\n        height: 44px;\n        box-sizing: border-box;\n        background-color: #fff;\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n        text-align: center;\n        margin-top: -1px;\n        color: #d3dce6;\n        cursor: pointer;\n        position: relative;\n\n        &.is-fixed {\n            position: fixed;\n            bottom: 0;\n            width: 868px;\n        }\n\n        .arraw-slide-icon {\n            display: inline-block;\n            font-size: 16px;\n            line-height: 44px;\n            transition: 0.3s;\n            &.hovering {\n                transform: translateX(-40px);\n            }\n        }\n\n        .slide-content {\n            position: absolute;\n            transform: translateX(-30px);\n            font-size: 14px;\n            line-height: 44px;\n            transition: 0.3s;\n            display: inline-block;\n        }\n\n        &:hover {\n            color: #409eff;\n            background-color: #f9fafc;\n        }\n\n        & .text-slide-enter,\n        & .text-slide-leave-active {\n            opacity: 0;\n            transform: translateX(10px);\n        }\n\n        .online-edit-btn {\n            line-height: 44px;\n            position: absolute;\n            top: 0;\n            right: 0;\n            font-size: 14px;\n            padding-right: 20px;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo-block.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./demo-block.vue?vue&type=template&id=3c06f5ee&\"\nimport script from \"./demo-block.vue?vue&type=script&lang=js&\"\nexport * from \"./demo-block.vue?vue&type=script&lang=js&\"\nimport style0 from \"./demo-block.vue?vue&type=style&index=0&id=3c06f5ee&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.label.length && _vm.id.length)?_c('div',{staticClass:\"anchor-container\"},[_c('div',{staticClass:\"content\"},[_c('a',{staticClass:\"anchor-link\",attrs:{\"id\":_vm.id,\"label\":_vm.label,\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.goAnchor()}}},[_c('i',{staticClass:\"icon iconfont icon-ai-link\",staticStyle:{\"font-size\":\"15px\"}})]),_c('div',{staticClass:\"anchor-label\"},[_c('h3',[_vm._v(\" \"+_vm._s(_vm.label)+\" \"),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isEdit),expression:\"isEdit\"}],staticClass:\"iconfont icon-edit\",attrs:{\"title\":_vm.eidtDemoTitle},on:{\"click\":function($event){$event.stopPropagation();return _vm.eidt($event)}}})])]),_vm._t(\"default\")],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div v-if=\"label.length && id.length\" class=\"anchor-container\">\n        <div class=\"content\">\n            <a\n                :id=\"id\"\n                class=\"anchor-link\"\n                :label=\"label\"\n                href=\"javascript:void(0)\"\n                @click.stop=\"goAnchor()\"\n            >\n                <i style=\"font-size: 15px\" class=\"icon iconfont icon-ai-link\" />\n            </a>\n            <div class=\"anchor-label\">\n                <h3>\n                    {{ label }}\n                    <i\n                        v-show=\"isEdit\"\n                        :title=\"eidtDemoTitle\"\n                        class=\"iconfont icon-edit\"\n                        @click.stop=\"eidt\"\n                    />\n                </h3>\n            </div>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { slugify } from \"transliteration\";\nimport { goTobyAnchorId } from \"../utils/index\";\nimport locale from \"./locale\";\nimport I18nMixins from \"./mixins/i18n-mixins\";\n\nexport default {\n    mixins: [I18nMixins],\n    props: {\n        label: {\n            type: String,\n            default: \"\",\n        },\n        // allow edit on github or gitlab etc.\n        isEdit: {\n            type: Boolean,\n            default: true,\n        },\n        // isEdit=true 时生效\n        fileName: {\n            type: String,\n            default: \"\",\n        },\n    },\n    data() {\n        return {\n            id: \"\",\n        };\n    },\n    computed: {\n        eidtDemoTitle() {\n            return locale[this.currentDocLang][\"eidtDemoTitle\"];\n        },\n    },\n    methods: {\n        goAnchor() {\n            goTobyAnchorId(this, this.id);\n        },\n        // edit on github or gitlab etc.\n        eidt() {\n            if (this.isEdit) {\n                const fileName = this.fileName;\n\n                let result = \"\";\n\n                let routerUrl = window.location.href.split(\"/doc/\")[1];\n\n                if (routerUrl) {\n                    routerUrl = routerUrl.split(\"?\")[0];\n\n                    const routerUrlDetail = routerUrl.split(\"/\");\n\n                    if (routerUrlDetail.length === 1) {\n                        // scene 1 : /#/en/doc/qa\n                        result = fileName;\n                    } else if (routerUrlDetail[0] === \"base\") {\n                        // scene 2 : /#/en/doc/base/loading\n                        result = `ve-${routerUrlDetail[1]}/${fileName}`;\n                    } else if (routerUrlDetail[0] === \"table\") {\n                        // scene 3 : /#/en/doc/table/header-fixed\n                        result = `ve-table/${routerUrlDetail[1]}/${fileName}`;\n                    }\n\n                    if (result) {\n                        result =\n                            locale[this.currentDocLang][\"eidtDemoUrlPrefix\"] +\n                            result;\n                        window.open(result, \"_blank\");\n                    }\n                }\n            }\n        },\n    },\n    created() {\n        if (this.label) {\n            this.id = slugify(this.label);\n        }\n    },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.anchor-container {\n    .content {\n        &:hover {\n            .anchor-link {\n                opacity: 0.5;\n            }\n        }\n\n        .anchor-link {\n            margin-left: -20px;\n            margin-right: 5px;\n            opacity: 0;\n            font-weight: bold;\n        }\n\n        .anchor-label {\n            display: inline-block;\n            .icon-edit {\n                margin-left: 5px;\n                color: #ddd;\n                cursor: pointer;\n                &:hover {\n                    color: #333;\n                }\n            }\n        }\n    }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./anchor.vue?vue&type=template&id=72d05200&scoped=true&\"\nimport script from \"./anchor.vue?vue&type=script&lang=js&\"\nexport * from \"./anchor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./anchor.vue?vue&type=style&index=0&id=72d05200&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"72d05200\",\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport { merge, cloneDeep } from \"lodash\";\nimport defaultLang from \"vue-easytable/packages/src/locale/lang/en-US\";\n\nconst { defineReactive } = Vue.util;\nconst proto = Vue.prototype;\n\nproto.$veTableMessages = proto.$veTableMessages || {};\n\ndefineReactive(\n    proto,\n    \"$veTableMessages\",\n    cloneDeep({\n        lang: defaultLang,\n    }),\n);\n\nexport default {\n    getMessage() {\n        return proto.$veTableMessages.lang;\n    },\n    use(lang) {\n        this.update(lang);\n    },\n    update(lang = {}) {\n        merge(proto.$veTableMessages.lang, lang);\n    },\n};\n","import locale from \"vue-easytable/packages/ve-locale\";\nimport { isFunction } from \"../utils/index\";\n\n/*\n * @createI18N\n * @desc create i18n\n * @param {string} compName\n * @return {array<function>}\n */\nexport function createI18N(compName) {\n    return function (path, ...args) {\n        let result = \"\";\n\n        const messages = locale.getMessage();\n\n        if (messages[compName]) {\n            const message = messages[compName][path];\n            result = isFunction(message) ? message(...args) : message;\n        } else {\n            console.error(\n                `can't find ${compName} in ${JSON.stringify(messages)}`,\n            );\n        }\n\n        return result;\n    };\n}\n","import { createI18N } from \"../locale/index\";\n\n/*\n * @createLocale\n * @desc create namespace by comp name\n * @param {string} compName\n * @return {function}\n */\nexport function createLocale(compName) {\n    return createI18N(compName);\n}\n\n/*\n * @isEmptyArray\n * @desc  is empty array\n * @param {array} arr\n */\nexport function isEmptyArray(arr) {\n    return !(Array.isArray(arr) && arr.length > 0);\n}\n\n/*\n * @isEmptyValue\n * @desc  is empty value\n * @param {array} arr\n */\nexport function isEmptyValue(value) {\n    return !(value !== \"\" && value !== undefined && value !== null);\n}\n\n/*\n * @isDefined\n * @desc is defined\n * @param {any} val\n */\nexport function isDefined(val) {\n    return val !== undefined && val !== null;\n}\n\n/*\n * @isObject\n * @desc is object\n * @param {any} val\n */\nexport function isObject(val) {\n    return val !== null && typeof val === \"object\";\n}\n\n/*\n * @isFunction\n * @desc is function\n * @param {any} val\n */\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n\n/*\n * @isBoolean\n * @desc is boolean\n * @param {any} val\n */\nexport function isBoolean(val) {\n    return typeof val === \"boolean\";\n}\n\n/*\n * @isNumber\n * @desc is number\n * @param {any} val\n */\nexport function isNumber(val) {\n    return typeof val === \"number\";\n}\n\n/*\n * @isTrue\n * @desc is equal true\n * @param {any} val\n */\nexport function isTrue(val) {\n    return isBoolean(val) && val;\n}\n\n/*\n * @isFalse\n * @desc is equal false\n * @param {any} val\n */\nexport function isFalse(val) {\n    return isBoolean(val) && !val;\n}\n\n/*\n * @getValByUnit\n * @desc  get value by unit\n * @param {number|string} width - 宽度\n */\nexport function getValByUnit(width) {\n    return typeof width === \"number\" ? width + \"px\" : width;\n}\n\n/*\n * @getParentCompByName\n * @desc  get parent comp by name\n * @param {object} context\n * @param {string} name - parent comp name\n */\nexport function getParentCompByName(context, name) {\n    let parent = context.$parent;\n\n    while (parent) {\n        if (parent.$options.name !== name) {\n            parent = parent.$parent;\n        } else {\n            return parent;\n        }\n    }\n\n    return null;\n}\n\n/*\n * @getChildCompsByName\n * @desc  get child comps by name\n * @param {object} context\n * @param {string} name - child comp name\n */\nexport function getChildCompsByName(context, name) {\n    let result = [];\n\n    let childrens = context.$children;\n\n    while (childrens && childrens.length > 0) {\n        childrens.forEach((child) => {\n            childrens = child.$children ? child.$children : null;\n\n            if (child.$options.name === name) {\n                result.push(child);\n            }\n        });\n    }\n\n    return result;\n}\n\n/*\n * @scrollTo\n * @desc element scrollTo https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollTo\n * @param {element} el - element\n * @param {object} option - scroll option\n */\nexport function scrollTo(el, option) {\n    if (isFunction(el.scrollTo)) {\n        el.scrollTo(option);\n    } else {\n        const { top, left } = option;\n        el.scrollTop = top;\n        el.scrollLeft = left;\n    }\n}\n","// prefix\nexport const PREFIX_CLS = \"ve-checkbox-\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    // on checked change\n    ON_CHECKED_CHANGE: \"on-checked-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_CHECKBOX: \"VeCheckbox\",\n    VE_CHECKBOX_GROUP: \"VeCheckboxGroup\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import { getParentCompByName } from \"../../src/utils\";\nimport { clsName } from \"./util\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_CHECKBOX,\n    props: {\n        // 当前checkbox 选中状态,实现 v-model\n        value: {\n            type: [String, Number, Boolean],\n            default: null,\n        },\n        label: {\n            type: [String],\n            default: null,\n        },\n        // is disabled checked\n        disabled: Boolean,\n        // partial selection effect\n        indeterminate: Boolean,\n        // 是否是可控组件\n        isControlled: {\n            type: Boolean,\n            default: false,\n        },\n        // isControlled 为true 时生效\n        isSelected: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    data() {\n        return {\n            // 当前checkbox 选中状态\n            model: this.value,\n            checkboxGroup: {},\n        };\n    },\n\n    computed: {\n        checkboxClass() {\n            return [\n                clsName(\"content\"),\n                {\n                    [clsName(\"checked\")]: this.internalIsSelected,\n                    [clsName(\"disabled\")]: this.disabled,\n                    [clsName(\"indeterminate\")]: this.indeterminate,\n                },\n            ];\n        },\n\n        // 是否横向显示还是纵向显示\n        checkboxStyle() {\n            return {\n                display:\n                    this.checkboxGroup && this.checkboxGroup.isVerticalShow\n                        ? \"block\"\n                        : \"inline-block\",\n            };\n        },\n        // 是否选中\n        internalIsSelected() {\n            return this.isControlled ? this.isSelected : this.model;\n        },\n    },\n\n    watch: {\n        value() {\n            this.updateModelBySingle();\n        },\n    },\n\n    methods: {\n        // checkbox change\n        checkboxChange(event) {\n            if (this.disabled) {\n                return false;\n            }\n            const isChecked = event.target.checked;\n\n            if (!this.isControlled) {\n                this.$emit(\"input\", isChecked);\n            }\n            this.$emit(EMIT_EVENTS.ON_CHECKED_CHANGE, isChecked);\n\n            if (this.isCheckBoxGroup()) {\n                //update parent comp:checkbox-group\n                this.checkboxGroup.updateModel(this.label, isChecked);\n            }\n        },\n\n        // is checkbox group\n        isCheckBoxGroup() {\n            this.checkboxGroup = getParentCompByName(\n                this,\n                COMPS_NAME.VE_CHECKBOX_GROUP,\n            );\n            return this.checkboxGroup ? true : false;\n        },\n\n        // get label content\n        getLabelContent() {\n            const { label, $slots } = this;\n\n            return label ? label : $slots.default;\n        },\n\n        initModel() {\n            if (this.isCheckBoxGroup()) {\n                let checkboxGroup = this.checkboxGroup;\n                if (\n                    Array.isArray(checkboxGroup.value) &&\n                    checkboxGroup.value.length > 0\n                ) {\n                    if (checkboxGroup.value.indexOf(this.label) > -1) {\n                        this.model = true;\n                    }\n                }\n            } else {\n                this.model = this.value;\n            }\n        },\n\n        // 通过单选更新 model\n        updateModelBySingle() {\n            if (!this.disabled) {\n                this.model = this.value;\n            }\n        },\n\n        // 父组件调用更新 model\n        updateModelByGroup(checkBoxGroup) {\n            if (checkBoxGroup.indexOf(this.label) > -1) {\n                if (!this.disabled) {\n                    this.model = true;\n                }\n            } else {\n                if (!this.disabled) {\n                    this.model = false;\n                }\n            }\n        },\n    },\n\n    created() {\n        this.initModel();\n    },\n    render() {\n        const {\n            checkboxStyle,\n            label,\n            checkboxClass,\n            checkboxChange,\n            getLabelContent,\n            internalIsSelected,\n        } = this;\n\n        return (\n            <label class={\"ve-checkbox\"} style={checkboxStyle}>\n                <span class={checkboxClass}>\n                    <input\n                        checked={internalIsSelected}\n                        class={clsName(\"input\")}\n                        type=\"checkbox\"\n                        value={label}\n                        on-change={checkboxChange}\n                    />\n\n                    <span class={clsName(\"inner\")}></span>\n                </span>\n                <span class={clsName(\"label\")}>{getLabelContent()}</span>\n            </label>\n        );\n    },\n};\n","import VeCheckbox from \"./src/index\";\n\nVeCheckbox.install = function (Vue) {\n    Vue.component(VeCheckbox.name, VeCheckbox);\n};\n\nexport default VeCheckbox;\n","// prefix\nexport const PREFIX_CLS = \"ve-checkbox-group-\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    // on checked change\n    ON_CHECKED_CHANGE: \"on-checked-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_CHECKBOX: \"VeCheckbox\",\n    VE_CHECKBOX_GROUP: \"VeCheckboxGroup\",\n};\n","import { getChildCompsByName } from \"../../src/utils\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_CHECKBOX_GROUP,\n    props: {\n        value: {\n            type: Array,\n            default() {\n                return [];\n            },\n        },\n        // 是否垂直排列显示（当时checkbox组时生效）\n        isVerticalShow: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    watch: {\n        // 更新子组件选中状态\n        value(newVal) {\n            let children = getChildCompsByName(this, COMPS_NAME.VE_CHECKBOX);\n\n            if (children.length > 0) {\n                children.forEach((child) => {\n                    child.updateModelByGroup(newVal);\n                });\n            }\n        },\n    },\n\n    methods: {\n        updateModel(label, checkedVal) {\n            let index = this.value.indexOf(label);\n            if (index > -1) {\n                if (!checkedVal) {\n                    this.value.splice(index, 1);\n                }\n            } else {\n                if (checkedVal) {\n                    this.value.push(label);\n                }\n            }\n\n            this.$emit(\"input\", this.value);\n            this.$emit(EMIT_EVENTS.ON_CHECKED_CHANGE, this.value);\n        },\n    },\n    render() {\n        return <div class=\"ve-checkbox-group\">{this.$slots.default}</div>;\n    },\n};\n","import VeCheckboxGroup from \"./src/index\";\n\nVeCheckboxGroup.install = function (Vue) {\n    Vue.component(VeCheckboxGroup.name, VeCheckboxGroup);\n};\n\nexport default VeCheckboxGroup;\n","// prefix\nexport const PREFIX_CLS = \"ve-contextmenu-\";\n\n// comps name\nexport const COMPS_NAME = {\n    VE_CONTEXTMENU: \"VeContextmenu\",\n};\n\n// emit events\nexport const EMIT_EVENTS = {\n    ON_NODE_CLICK: \"on-node-click\",\n};\n\n// init data\nexport const INIT_DATA = {\n    // PARENT_ID: 0,\n    PARENT_DEEP: -1,\n};\n\n// contextmenu types\nexport const CONTEXTMENU_NODE_TYPES = {\n    // Separator\n    SEPARATOR: \"SEPARATOR\",\n};\n\n// instance methods\nexport const INSTANCE_METHODS = {\n    HIDE_CONTEXTMENU: \"hideContextmenu\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","// key codes\nexport const KEY_CODES = {\n    BACK_SPACE: 8,\n    TAB: 9,\n    ENTER: 13,\n    SHIFT: 16,\n    SPACE: 32,\n\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n\n    DELETE: 46,\n\n    F2: 113,\n};\n\n// icon name\nexport const ICON_NAMES = {\n    FILTER: \"filter\",\n\n    DOUBLE_RIGHT_ARROW: \"double-right-arrow\",\n    DOUBLE_LEFT_ARROW: \"double-left-arrow\",\n\n    TOP_ARROW: \"top-arrow\",\n    RIGHT_ARROW: \"right-arrow\",\n    BOTTOM_ARROW: \"bottom-arrow\",\n    LEFT_ARROW: \"left-arrow\",\n\n    SORT_TOP_ARROW: \"sort-top-arrow\",\n    SORT_BOTTOM_ARROW: \"sort-bottom-arrow\",\n\n    SEARCH: \"search\",\n};\n\n// mouse event key type\nexport const MOUSE_EVENT_CLICK_TYPE = {\n    LEFT_MOUSE: 1,\n    MIDDLE_MOUSE: 2,\n    RIGHT_MOUSE: 2,\n};\n","// prefix\nexport const PREFIX_CLS = \"ve-icon-\";\n\n// emit events\nexport const EMIT_EVENTS = {};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_ICON: \"VeIcon\",\n};\n","import { ICON_NAMES } from \"../../src/utils/constant\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_ICON,\n\n    props: {\n        // icon name\n        name: {\n            type: String,\n            required: true,\n        },\n        color: {\n            type: String,\n            default: null,\n        },\n        size: {\n            type: [Number, String],\n            default: \"\",\n        },\n    },\n\n    computed: {\n        // icon style\n        iconStyle() {\n            const { color, size } = this;\n\n            let result = {\n                color,\n                \"font-size\": getValByUnit(size),\n            };\n\n            return result;\n        },\n\n        // icon name\n        iconClass() {\n            const { name } = this;\n\n            if (!Object.values(ICON_NAMES).includes(name)) {\n                console.error(`${name} is not found in ${COMPS_NAME.VE_ICON}.`);\n            }\n            return `iconfont-vet icon-vet-${name}`;\n        },\n    },\n\n    render() {\n        const { iconStyle, iconClass } = this;\n        return <i style={iconStyle} class={[\"ve-icon\", iconClass]} />;\n    },\n};\n","import VeIcon from \"./src/index\";\n\nVeIcon.install = function (Vue) {\n    Vue.component(VeIcon.name, VeIcon);\n};\n\nexport default VeIcon;\n","/*\nfork from:\nhttps://github.com/ElemeFE/element\n*/\n\nconst trim = function (string) {\n    return (string || \"\").replace(/^[\\s\\uFEFF]+|[\\s\\uFEFF]+$/g, \"\");\n};\n\n// add class\nexport function addClass(el, cls) {\n    if (!el) return;\n    var curClass = el.className;\n    var classes = (cls || \"\").split(\" \");\n\n    for (var i = 0, j = classes.length; i < j; i++) {\n        var clsName = classes[i];\n        if (!clsName) continue;\n\n        if (el.classList) {\n            el.classList.add(clsName);\n        } else if (!hasClass(el, clsName)) {\n            curClass += \" \" + clsName;\n        }\n    }\n    if (!el.classList) {\n        el.className = curClass;\n    }\n}\n\n// remove class\nexport function removeClass(el, cls) {\n    if (!el || !cls) return;\n    var classes = cls.split(\" \");\n    var curClass = \" \" + el.className + \" \";\n\n    for (var i = 0, j = classes.length; i < j; i++) {\n        var clsName = classes[i];\n        if (!clsName) continue;\n\n        if (el.classList) {\n            el.classList.remove(clsName);\n        } else if (hasClass(el, clsName)) {\n            curClass = curClass.replace(\" \" + clsName + \" \", \" \");\n        }\n    }\n    if (!el.classList) {\n        el.className = trim(curClass);\n    }\n}\n\n// has class\nexport function hasClass(el, cls) {\n    if (!el || !cls) return false;\n    if (cls.indexOf(\" \") !== -1)\n        throw new Error(\"className should not contain space.\");\n    if (el.classList) {\n        return el.classList.contains(cls);\n    } else {\n        return (\" \" + el.className + \" \").indexOf(\" \" + cls + \" \") > -1;\n    }\n}\n\n/*获取当前元素的偏移（相对于整个document）\n *   offsetTop：元素最顶端距离文档顶端的距离，包含滚动条\n *   offsetleft：元素最左侧距离文档左侧的距离，包含滚动条\n *   left：元素最左侧距离文档左侧的距离，不包含滚动条\n *   top:元素最顶端距离文档顶端的距离，不包含滚动条\n *   right:元素最右侧距离文档右侧的距离，不包含滚动条\n *   bottom：元素最底端距离文档底端的距离，不包含滚动条\n *   right2：元素最左侧距离文档右侧的距离，不包含滚动条\n *   bottom2：元素最底端距离文档最底部的距离，不包含滚动条\n * */\nexport function getViewportOffset(triggerEl) {\n    var doc = document.documentElement,\n        box =\n            typeof triggerEl.getBoundingClientRect !== \"undefined\"\n                ? triggerEl.getBoundingClientRect()\n                : 0,\n        scrollLeft =\n            (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\n        scrollTop =\n            (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0),\n        offsetLeft = box.left + window.pageXOffset,\n        offsetTop = box.top + window.pageYOffset;\n\n    var left = offsetLeft - scrollLeft,\n        top = offsetTop - scrollTop;\n\n    return {\n        offsetTop,\n        offsetLeft,\n        left,\n        top,\n        right: window.document.documentElement.clientWidth - box.width - left,\n        bottom: window.document.documentElement.clientHeight - box.height - top,\n        right2: window.document.documentElement.clientWidth - left,\n        bottom2: window.document.documentElement.clientHeight - top,\n    };\n}\n\n/*获取当前元素的偏移(相对于外层容器)\n *   offsetTop：元素最顶端距离文档顶端的距离，包含滚动条\n *   offsetleft：元素最左侧距离文档左侧的距离，包含滚动条\n *   left：元素最左侧距离文档左侧的距离，不包含滚动条\n *   top:元素最顶端距离文档顶端的距离，不包含滚动条\n *   right:元素最右侧距离文档右侧的距离，不包含滚动条\n *   bottom：元素最底端距离文档底端的距离，不包含滚动条\n *   right2：元素最左侧距离文档右侧的距离，不包含滚动条\n *   bottom2：元素最底端距离文档最底部的距离，不包含滚动条\n * */\nexport function getViewportOffsetWithinContainer(triggerEl, containerEl) {\n    const {\n        offsetTop: tElOffsetTop,\n        offsetLeft: tElOffsetLeft,\n        left: tElLef,\n        top: tElTop,\n        right: tElRight,\n        bottom: tElBottom,\n        right2: tElRight2,\n        bottom2: tElBottom2,\n    } = getViewportOffset(triggerEl);\n\n    const {\n        offsetTop: cElOffsetTop,\n        offsetLeft: cElOffsetLeft,\n        left: cElLef,\n        top: cElTop,\n        right: cElRight,\n        bottom: cElBottom,\n        right2: cElRight2,\n        bottom2: cElBottom2,\n    } = getViewportOffset(containerEl);\n\n    return {\n        offsetTop: tElOffsetTop - cElOffsetTop,\n        offsetLeft: tElOffsetLeft - cElOffsetLeft,\n        left: tElLef - cElLef,\n        top: tElTop - cElTop,\n        right: tElRight - cElRight,\n        bottom: tElBottom - cElBottom,\n        right2: tElRight2 - cElRight2,\n        bottom2: tElBottom2 - cElBottom2,\n    };\n}\n\n/*获取鼠标相对于文档的坐标\n *   left：鼠标点击位置距离文档左侧的距离，包含滚动条\n *   top: 鼠标点击位置距离文档顶端的距离，包含滚动条\n *   right:鼠标点击位置距离文档右侧的距离，不包含滚动条\n *   bottom：鼠标点击位置距离文档底端的距离，不包含滚动条\n * */\nexport function getMousePosition(event) {\n    var x = 0,\n        y = 0,\n        doc = document.documentElement,\n        body = document.body;\n    if (!event) event = window.event;\n    if (window.pageYoffset) {\n        //pageYoffset是Netscape特有\n        x = window.pageXOffset;\n        y = window.pageYOffset;\n    } else {\n        x =\n            ((doc && doc.scrollLeft) || (body && body.scrollLeft) || 0) -\n            ((doc && doc.clientLeft) || (body && body.clientLeft) || 0);\n        y =\n            ((doc && doc.scrollTop) || (body && body.scrollTop) || 0) -\n            ((doc && doc.clientTop) || (body && body.clientTop) || 0);\n    }\n    x += event.clientX;\n    y += event.clientY;\n\n    let right = doc.clientWidth - event.clientX;\n    let bottom = doc.clientHeight - event.clientY;\n\n    return { left: x, top: y, right, bottom };\n}\n\n/**\n * Returns caret position in text input.\n *\n * @author https://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea\n * @param {HTMLElement} el An element to check.\n * @returns {number}\n */\nexport function getCaretPosition(el) {\n    const rootDocument = document;\n\n    if (el.selectionStart) {\n        return el.selectionStart;\n    } else if (rootDocument.selection) {\n        // IE8\n        el.focus();\n\n        const r = rootDocument.selection.createRange();\n\n        if (r === null) {\n            return 0;\n        }\n        const re = el.createTextRange();\n        const rc = re.duplicate();\n\n        re.moveToBookmark(r.getBookmark());\n        rc.setEndPoint(\"EndToStart\", re);\n\n        return rc.text.length;\n    }\n\n    return 0;\n}\n\n/**\n * Sets caret position in text input.\n *\n * @author http://blog.vishalon.net/index.php/javascript-getting-and-setting-caret-position-in-textarea/\n * @param {Element} element An element to process.\n * @param {number} pos The selection start position.\n * @param {number} endPos The selection end position.\n */\nexport function setCaretPosition(element, pos, endPos) {\n    if (endPos === void 0) {\n        endPos = pos;\n    }\n    if (element.setSelectionRange) {\n        element.focus();\n\n        try {\n            element.setSelectionRange(pos, endPos);\n        } catch (err) {\n            const elementParent = element.parentNode;\n            const parentDisplayValue = elementParent.style.display;\n\n            elementParent.style.display = \"block\";\n            element.setSelectionRange(pos, endPos);\n            elementParent.style.display = parentDisplayValue;\n        }\n    }\n}\n","/**\n * Generate a non duplicate ID\n */\nexport function getRandomId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n}\n","/*\nevents outside\ndesc:绑定元素触发的事件不在指定事件中，将会触发。此指令可替代 clickoutside\n\n--------------------vue 模板用法如下：-----------------------------------\n<tempate>\n    <button v-events-outside=\"{\n        events:[\"mousedown\",\"mouseover\"],\n        callback:(e)=>{} // \n    }\">删除</button>\n</tempate>\n\n--------------------vue jsx 用法如下：-----------------------------------\n<script>\n    export default{\n        render(){\n                const props = {\n                        directives: [\n                                        {\n                                            name: \"events-outside\",\n                                            value: {\n                                                events: [\"mousedown\",\"mouseover\"],\n                                                callback: (e) => {\n                                                    //\n                                                },\n                                            },\n                                        }\n                                    ]\n                    };\n\n            return (\n                <div>\n                    <button {...props}>删除</button>\n                </div>\n            )\n        }\n    }\n</script>\n\n*/\n\nexport default {\n    bind: function (el, binding, vNode) {\n        const { events, callback } = binding.value;\n\n        if (\n            Array.isArray(events) &&\n            events.length &&\n            typeof callback === \"function\"\n        ) {\n            const handler = (e) => {\n                if (!el.contains(e.target) && el !== e.target) {\n                    callback(e);\n                } else {\n                    return false;\n                }\n            };\n\n            el.__eventsOutside__ = handler;\n\n            events.forEach((eventName) => {\n                document.addEventListener(eventName, handler, true);\n            });\n        } else {\n            const compName = vNode.context.name;\n            console.error(\n                `[events-outside] Please provided 'events' and 'callback' in ${compName}`,\n            );\n        }\n    },\n\n    unbind: function (el, binding, vNode) {\n        const { events } = binding.value;\n        events.forEach((eventName) => {\n            document.removeEventListener(eventName, el.__eventsOutside__, true);\n        });\n        el.__eventsOutside__ = null;\n    },\n};\n","import { COMPS_NAME } from \"./util/constant\";\nimport { clsName } from \"./util/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../src/utils/constant\";\nimport { getMousePosition, getViewportOffset } from \"../../src/utils/dom\";\nimport {\n    INIT_DATA,\n    EMIT_EVENTS,\n    CONTEXTMENU_NODE_TYPES,\n    INSTANCE_METHODS,\n} from \"./util/constant\";\nimport { getRandomId } from \"../../src/utils/random\";\nimport { debounce, cloneDeep } from \"lodash\";\nimport eventsOutside from \"../../src/directives/events-outside\";\n\nexport default {\n    name: COMPS_NAME.VE_CONTEXTMENU,\n    directives: {\n        \"events-outside\": eventsOutside,\n    },\n    props: {\n        /*\n         options(contextmenu)\n            [\n                {\n                    \n                    id: 1,\n                    label: \"菜单1\",\n                    disabled:true\n                },\n                {\n                    id: 2,\n                    label: \"菜单2\",\n                    children: [\n                        {\n                            id: \"2-1\",\n                            label: \"菜单2-1\",\n                        },\n                        {\n                            id: \"2-2\",\n                            label: \"菜单2-2\",\n                        },\n                    ],\n                },\n            ]\n        */\n        options: {\n            type: Array,\n            required: true,\n        },\n        /*\n        event target\n        contextmenu event will register on it\n        */\n        eventTarget: {\n            type: [String, HTMLElement],\n            required: true,\n        },\n    },\n    data() {\n        return {\n            /* \n            internal options:\n            [\n                {\n                    id: 1,\n                    deep: 0,\n                    hasChildren: false,\n                    label: \"菜单1\",\n                },\n                {\n                    id: 2,\n                    label: \"菜单2\",\n                    deep: 0,\n                    hasChildren: true,\n                    children: [\n                        {\n                            id: \"2-1\",\n                            deep: 1,\n                            hasChildren: false,\n                            label: \"菜单2-1\",\n                        },\n                        {\n                            id: \"2-2\",\n                            deep: 1,\n                            hasChildren: false,\n                            label: \"菜单2-2\",\n                        },\n                    ],\n                },\n            ]\n            */\n            internalOptions: [],\n\n            /*\n            panels option\n            {\n                    id: 1,\n                    menus: [\n                        {\n                            id: \"\",\n                            deep: 0,\n                            label: \"菜单1\",\n                            hasChildren: true,\n                        },\n                        {\n                            id: \"\",\n                            deep: 0,\n                            label: \"菜单2\",\n                        },\n                    ],\n                },\n                {\n                    id: 2,\n                    menus: [\n                        {\n                            id: \"\",\n                            deep: 1,\n                            label: \"菜单1\",\n                            hasChildren: true,\n                        },\n                        {\n                            id: \"\",\n                            deep: 1,\n                            label: \"菜单2\",\n                        },\n                    ],\n                },\n            */\n            panelOptions: [],\n            // event target element\n            eventTargetEl: \"\",\n            // root contextmenu id\n            rootContextmenuId: \"\",\n            /*\n            is children panels clicked\n            如果点击了则不关闭 panels\n            */\n            isChildrenPanelsClicked: false,\n            /*\n            is panel right direction\n            决定了子 panel 默认展示方向\n            */\n            isPanelRightDirection: true,\n            /*\n            is panels remove\n            防止hover后菜单被移除，仍然显示子集菜单的问题\n            */\n            isPanelsEmptyed: true,\n        };\n    },\n\n    computed: {\n        // active menus ids\n        activeMenuIds() {\n            const { panelOptions } = this;\n\n            return panelOptions.map((x) => x.parentId);\n        },\n    },\n\n    watch: {\n        options: {\n            handler: function (val) {\n                if (Array.isArray(val) && val.length > 0) {\n                    /* \n                    如果配置项修改,则重新销毁并创建\n                    */\n                    this.removeOrEmptyPanels(true);\n                    this.rootContextmenuId = this.getRandomIdWithPrefix();\n                    this.createInternalOptions();\n                    this.createPanelOptions({ options: this.internalOptions });\n                    this.resetContextmenu();\n                    this.addRootContextmenuPanelToBody();\n                }\n            },\n            immediate: true,\n        },\n        eventTarget: {\n            handler: function (val) {\n                if (val) {\n                    this.registerContextmenuEvent();\n                }\n            },\n            immediate: true,\n        },\n    },\n\n    methods: {\n        // get random id\n        getRandomIdWithPrefix() {\n            return clsName(getRandomId());\n        },\n\n        // has children\n        hasChildren(option) {\n            return Array.isArray(option.children) && option.children.length;\n        },\n\n        /*\n        get panel option by menu id\n        */\n        getPanelOptionByMenuId(options, menuId) {\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].id === menuId) {\n                    return options[i].children;\n                }\n\n                if (options[i].children) {\n                    const panelOption = this.getPanelOptionByMenuId(\n                        options[i].children,\n                        menuId,\n                    );\n                    if (panelOption) return panelOption;\n                }\n            }\n        },\n\n        // get parent contextmenu panel element\n        getParentContextmenuPanelEl(contextmenuPanelId) {\n            let result;\n\n            const { panelOptions } = this;\n\n            const panelIndex = panelOptions.findIndex(\n                (x) => x.parentId === contextmenuPanelId,\n            );\n            if (panelIndex > 0) {\n                // preview panel's panelId\n                const parentPanelId = panelOptions[panelIndex - 1].parentId;\n                result = document.querySelector(`#${parentPanelId}`);\n            }\n            return result;\n        },\n\n        // create panel by hover\n        createPanelByHover({ event, menu }) {\n            const { internalOptions, panelOptions } = this;\n\n            // 如果被移除则不创建\n            if (this.isPanelsEmptyed) {\n                return false;\n            }\n\n            // has already exists\n            if (panelOptions.findIndex((x) => x.parentId === menu.id) > -1) {\n                return false;\n            }\n\n            /*\n            移除 panel 深度大于等于当前悬浮菜单的。从后往前删除\n            remove panels\n            */\n            const deletePanelDeeps = panelOptions\n                .filter((x) => x.parentDeep >= menu.deep)\n                .map((x) => x.parentDeep)\n                .reverse();\n\n            if (deletePanelDeeps.length) {\n                for (let i = deletePanelDeeps.length - 1; i >= 0; i--) {\n                    const delIndex = panelOptions.findIndex(\n                        (x) => x.parentDeep === deletePanelDeeps[i],\n                    );\n                    if (delIndex > -1) {\n                        this.panelOptions.splice(delIndex, 1);\n                    }\n                }\n            }\n\n            const panelOption = this.getPanelOptionByMenuId(\n                internalOptions,\n                menu.id,\n            );\n\n            if (panelOption) {\n                this.createPanelOptions({\n                    options: panelOption,\n                    currentMenu: menu,\n                });\n\n                this.$nextTick(() => {\n                    this.addContextmenuPanelToBody({\n                        contextmenuId: menu.id,\n                    });\n\n                    this.showContextmenuPanel({\n                        event,\n                        contextmenuId: menu.id,\n                    });\n                });\n            }\n        },\n\n        // create panels option\n        createPanelOptions({ options, currentMenu }) {\n            const { hasChildren, rootContextmenuId } = this;\n\n            if (Array.isArray(options)) {\n                //\n                let menus = options.map((option) => {\n                    return {\n                        hasChildren: hasChildren(option),\n                        ...option,\n                    };\n                });\n\n                this.panelOptions.push({\n                    parentId: currentMenu ? currentMenu.id : rootContextmenuId,\n                    parentDeep: currentMenu\n                        ? currentMenu.deep\n                        : INIT_DATA.PARENT_DEEP,\n                    menus: menus,\n                });\n            }\n        },\n\n        // create internal options recursion\n        createInternalOptionsRecursion(options, deep = 0) {\n            options.id = this.getRandomIdWithPrefix();\n            options.deep = deep;\n            deep++;\n            if (Array.isArray(options.children)) {\n                options.children.map((option) => {\n                    return this.createInternalOptionsRecursion(option, deep);\n                });\n            }\n\n            return options;\n        },\n\n        // create internal options\n        createInternalOptions() {\n            this.internalOptions = cloneDeep(this.options).map((option) => {\n                return this.createInternalOptionsRecursion(option);\n            });\n        },\n\n        // show root contextmenu panel\n        showRootContextmenuPanel(event) {\n            event.preventDefault();\n            const { rootContextmenuId } = this;\n\n            if (rootContextmenuId) {\n                // refresh contextmenu\n                this.resetContextmenu();\n                this.showContextmenuPanel({\n                    event,\n                    contextmenuId: rootContextmenuId,\n                    isRootContextmenu: true,\n                });\n                this.isPanelsEmptyed = false;\n            }\n        },\n\n        // show contextmenu panel\n        showContextmenuPanel({ event, contextmenuId, isRootContextmenu }) {\n            const { getParentContextmenuPanelEl } = this;\n\n            let contextmenuPanelEl = document.querySelector(\n                `#${contextmenuId}`,\n            );\n\n            if (contextmenuPanelEl) {\n                // remove first\n                contextmenuPanelEl.innerHTML = \"\";\n\n                contextmenuPanelEl.appendChild(this.$refs[contextmenuId]);\n\n                contextmenuPanelEl.style.position = \"absolute\";\n                contextmenuPanelEl.classList.add(clsName(\"popper\"));\n\n                const { width: currentPanelWidth, height: currentPanelHeight } =\n                    contextmenuPanelEl.getBoundingClientRect();\n                if (isRootContextmenu) {\n                    const {\n                        left: clickLeft,\n                        top: clickTop,\n                        right: clickRight,\n                        bottom: clickBottom,\n                    } = getMousePosition(event);\n\n                    let panelX = 0;\n                    let panelY = 0;\n\n                    // 右方宽度够显示\n                    if (clickRight >= currentPanelWidth) {\n                        panelX = clickLeft;\n                        this.isPanelRightDirection = true;\n                    }\n                    // 右方宽度不够显示在鼠标点击左方\n                    else {\n                        panelX = clickLeft - currentPanelWidth;\n                        this.isPanelRightDirection = false;\n                    }\n\n                    // 下方高度够显示\n                    if (clickBottom >= currentPanelHeight) {\n                        panelY = clickTop;\n                    }\n                    // 下方高度不够显示在鼠标点击上方\n                    else {\n                        panelY = clickTop - currentPanelHeight;\n                    }\n\n                    contextmenuPanelEl.style.left = panelX + \"px\";\n                    contextmenuPanelEl.style.top = panelY + \"px\";\n                } else {\n                    const parentContextmenuPanelEl =\n                        getParentContextmenuPanelEl(contextmenuId);\n\n                    if (parentContextmenuPanelEl) {\n                        const {\n                            left: parentPanelLeft,\n                            right: parentPanelRight,\n                        } = getViewportOffset(parentContextmenuPanelEl);\n\n                        const { top: clickTop, bottom: clickBottom } =\n                            getMousePosition(event);\n\n                        const { width: parentPanelWidth } =\n                            parentContextmenuPanelEl.getBoundingClientRect();\n\n                        let panelX = 0;\n                        let panelY = 0;\n\n                        // 如果默认展示在右方向\n                        if (this.isPanelRightDirection) {\n                            // 右方宽度够显示\n                            if (parentPanelRight >= currentPanelWidth) {\n                                panelX = parentPanelLeft + parentPanelWidth;\n                            }\n                            // 右方宽度不够显示在鼠标点击左方\n                            else {\n                                panelX = parentPanelLeft - parentPanelWidth;\n                            }\n                        }\n                        // 如果默认展示在左方向\n                        else {\n                            // 左方宽度够显示\n                            if (parentPanelLeft >= currentPanelWidth) {\n                                panelX = parentPanelLeft - parentPanelWidth;\n                            }\n                            // 左方宽度不够显示在鼠标点击右方\n                            else {\n                                panelX = parentPanelLeft + parentPanelWidth;\n                            }\n                        }\n\n                        // 下方高度够显示\n                        if (clickBottom >= currentPanelHeight) {\n                            panelY = clickTop;\n                        }\n                        // 下方高度不够显示在鼠标点击上方\n                        else {\n                            panelY = clickTop - currentPanelHeight;\n                        }\n\n                        contextmenuPanelEl.style.left = panelX + \"px\";\n                        contextmenuPanelEl.style.top = panelY + \"px\";\n                    }\n                }\n            }\n        },\n\n        // empty contextmenu panels\n        emptyContextmenuPanels() {\n            /*\n            wait for children panel clicked by setTimeout\n            如果点击的是非 root panel 不关闭\n            */\n            setTimeout(() => {\n                if (this.isChildrenPanelsClicked) {\n                    this.isChildrenPanelsClicked = false;\n                } else {\n                    this.removeOrEmptyPanels();\n                    this.isPanelsEmptyed = true;\n                }\n            });\n        },\n\n        // remove or empty panels\n        removeOrEmptyPanels(isRemove) {\n            const { panelOptions } = this;\n\n            panelOptions.forEach((panelOption) => {\n                let contextmenuPanelEl = document.querySelector(\n                    `#${panelOption.parentId}`,\n                );\n                if (contextmenuPanelEl) {\n                    if (isRemove) {\n                        contextmenuPanelEl.remove();\n                    } else {\n                        contextmenuPanelEl.innerHTML = \"\";\n                    }\n                }\n            });\n        },\n\n        // reset contextmeny\n        resetContextmenu() {\n            this.panelOptions = [];\n            this.createPanelOptions({ options: this.internalOptions });\n        },\n\n        // add context menu panel to body\n        addContextmenuPanelToBody({ contextmenuId }) {\n            let contextmenuPanelEl = document.querySelector(\n                `#${contextmenuId}`,\n            );\n\n            if (contextmenuPanelEl) {\n                return false;\n            } else {\n                let containerEl = document.createElement(\"div\");\n\n                containerEl.setAttribute(\"id\", contextmenuId);\n\n                document.body.appendChild(containerEl);\n            }\n        },\n\n        // add root contextmenu panel to body\n        addRootContextmenuPanelToBody() {\n            if (this.rootContextmenuId) {\n                this.addContextmenuPanelToBody({\n                    contextmenuId: this.rootContextmenuId,\n                });\n            }\n        },\n\n        // register contextmenu event\n        registerContextmenuEvent() {\n            const { eventTarget } = this;\n\n            if (typeof eventTarget === \"string\" && eventTarget.length > 0) {\n                this.eventTargetEl = document.querySelector(eventTarget);\n            } else {\n                this.eventTargetEl = eventTarget;\n            }\n\n            if (this.eventTargetEl) {\n                // contextmenu is on the current element\n                this.eventTargetEl.addEventListener(\n                    \"contextmenu\",\n                    this.showRootContextmenuPanel,\n                );\n            }\n        },\n\n        // unregister contextmen event\n        removeContextmenuEvent() {\n            if (this.eventTargetEl) {\n                this.eventTargetEl.removeEventListener(\n                    \"contextmenu\",\n                    this.showRootContextmenuPanel,\n                );\n            }\n        },\n\n        // hide contextmenu\n        [INSTANCE_METHODS.HIDE_CONTEXTMENU]() {\n            this.emptyContextmenuPanels();\n        },\n    },\n\n    created() {\n        // bug fixed #467\n        this.debounceCreatePanelByHover = debounce(\n            this.createPanelByHover,\n            300,\n        );\n    },\n\n    mounted() {\n        this.addRootContextmenuPanelToBody();\n    },\n\n    destroyed() {\n        this.removeContextmenuEvent();\n        this.removeOrEmptyPanels(true);\n    },\n\n    render() {\n        const {\n            panelOptions,\n            activeMenuIds,\n            hasChildren,\n            emptyContextmenuPanels,\n            debounceCreatePanelByHover,\n        } = this;\n\n        const contextmenuProps = {\n            class: [\"ve-contextmenu\"],\n            style: {\n                display: \"none\",\n            },\n        };\n\n        return (\n            <div {...contextmenuProps}>\n                {panelOptions.map((panelOption, panelIndex) => {\n                    const contextmenuPanelProps = {\n                        ref: panelOption.parentId,\n                        class: {\n                            [clsName(\"panel\")]: true,\n                        },\n                        directives: [\n                            {\n                                name: \"events-outside\",\n                                value: {\n                                    events: [\"click\"],\n                                    callback: (e) => {\n                                        // only for root panel\n                                        if (panelIndex === 0) {\n                                            emptyContextmenuPanels();\n                                        }\n                                    },\n                                },\n                            },\n                        ],\n                        on: {\n                            click: () => {\n                                if (panelIndex !== 0) {\n                                    this.isChildrenPanelsClicked = true;\n                                }\n                            },\n                            contextmenu: (e) => {\n                                e.preventDefault();\n                            },\n                        },\n                    };\n                    return (\n                        <div {...contextmenuPanelProps}>\n                            <ul class={clsName(\"list\")}>\n                                {panelOption.menus.map((menu) => {\n                                    let contextmenuNodeProps;\n\n                                    if (\n                                        menu.type !==\n                                        CONTEXTMENU_NODE_TYPES.SEPARATOR\n                                    ) {\n                                        contextmenuNodeProps = {\n                                            class: {\n                                                [clsName(\"node\")]: true,\n                                                [clsName(\"node-active\")]:\n                                                    activeMenuIds.includes(\n                                                        menu.id,\n                                                    ),\n                                                [clsName(\"node-disabled\")]:\n                                                    menu.disabled,\n                                            },\n                                            on: {\n                                                mouseover: (event) => {\n                                                    // disable\n                                                    if (!menu.disabled) {\n                                                        debounceCreatePanelByHover(\n                                                            {\n                                                                event,\n                                                                menu,\n                                                            },\n                                                        );\n                                                    }\n                                                },\n                                                click: () => {\n                                                    if (\n                                                        !menu.disabled &&\n                                                        !hasChildren(menu)\n                                                    ) {\n                                                        this.$emit(\n                                                            EMIT_EVENTS.ON_NODE_CLICK,\n                                                            menu.type,\n                                                        );\n                                                        setTimeout(() => {\n                                                            emptyContextmenuPanels();\n                                                        }, 50);\n                                                    }\n                                                },\n                                            },\n                                        };\n                                    }\n                                    // separator\n                                    else {\n                                        //\n                                        contextmenuNodeProps = {\n                                            class: {\n                                                [clsName(\n                                                    \"node-separator\",\n                                                )]: true,\n                                            },\n                                        };\n                                    }\n\n                                    if (\n                                        menu.type !==\n                                        CONTEXTMENU_NODE_TYPES.SEPARATOR\n                                    ) {\n                                        return (\n                                            <li {...contextmenuNodeProps}>\n                                                <span\n                                                    class={clsName(\n                                                        \"node-label\",\n                                                    )}\n                                                >\n                                                    {menu.label}\n                                                </span>\n                                                {menu.hasChildren && (\n                                                    <VeIcon\n                                                        class={clsName(\n                                                            \"node-icon-postfix\",\n                                                        )}\n                                                        name={\n                                                            ICON_NAMES.RIGHT_ARROW\n                                                        }\n                                                    />\n                                                )}\n                                            </li>\n                                        );\n                                    } else {\n                                        return (\n                                            <li {...contextmenuNodeProps}></li>\n                                        );\n                                    }\n                                })}\n                            </ul>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    },\n};\n","import VeContextmenu from \"./src/index.jsx\";\n\nVeContextmenu.install = function (Vue) {\n    Vue.component(VeContextmenu.name, VeContextmenu);\n};\n\nexport default VeContextmenu;\n","export default {\n    bind: function (el, binding, vNode) {\n        if (typeof binding.value !== \"function\") {\n            let msg = `in [clickoutside] directives, provided expression '${binding.expression}' is not a function `;\n\n            const compName = vNode.context.name;\n\n            if (compName) {\n                msg += `in ${compName}`;\n            }\n            console.error(msg);\n        }\n\n        var handler = (e) => {\n            if (!el.contains(e.target) && el !== e.target) {\n                binding.value(e);\n            } else {\n                return false;\n            }\n        };\n\n        el.__clickOutSide__ = handler;\n\n        document.addEventListener(\"click\", handler, true);\n    },\n\n    unbind: function (el) {\n        document.removeEventListener(\"click\", el.__clickOutSide__, true);\n        el.__clickOutSide__ = null;\n    },\n};\n","// prefix\nexport const PREFIX_CLS = \"ve-radio-\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    // on radio change\n    ON_RADIO_CHANGE: \"on-radio-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_RADIO: \"VeRadio\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import { clsName } from \"./util\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_RADIO,\n    props: {\n        // 当前checkbox 选中状态,实现 v-model\n        value: {\n            type: [String, Number, Boolean],\n            default: null,\n        },\n        label: {\n            type: String,\n            default: null,\n        },\n        // is disabled checked\n        disabled: Boolean,\n        // 是否是可控组件\n        isControlled: {\n            type: Boolean,\n            default: false,\n        },\n        // isControlled 为true 时生效\n        isSelected: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    data() {\n        return {\n            // 当前checkbox 选中状态\n            model: this.value,\n        };\n    },\n\n    computed: {\n        radioClass() {\n            return [\n                clsName(\"container\"),\n                {\n                    [clsName(\"checked\")]: this.internalIsSelected,\n                    [clsName(\"disabled\")]: this.disabled,\n                },\n            ];\n        },\n\n        // 是否选中\n        internalIsSelected() {\n            return this.isControlled ? this.isSelected : this.model;\n        },\n    },\n\n    watch: {\n        value() {\n            this.updateModelBySingle();\n        },\n    },\n\n    methods: {\n        // checked change\n        checkedChange(event) {\n            if (this.disabled) {\n                return false;\n            }\n            const isChecked = event.target.checked;\n\n            if (!this.isControlled) {\n                this.$emit(\"input\", isChecked);\n            }\n            this.$emit(EMIT_EVENTS.ON_RADIO_CHANGE, isChecked);\n        },\n\n        // get label content\n        getLabelContent() {\n            const { label, $slots } = this;\n\n            return label ? label : $slots.default;\n        },\n\n        initModel() {\n            this.model = this.value;\n        },\n\n        // 通过单选更新 model\n        updateModelBySingle() {\n            if (!this.disabled) {\n                this.model = this.value;\n            }\n        },\n    },\n\n    created() {\n        this.initModel();\n    },\n    render() {\n        const {\n            label,\n            radioClass,\n            checkedChange,\n            getLabelContent,\n            internalIsSelected,\n        } = this;\n\n        return (\n            <label class={\"ve-radio\"}>\n                <span class={radioClass}>\n                    <input\n                        checked={internalIsSelected}\n                        class={clsName(\"input\")}\n                        type=\"radio\"\n                        value={label}\n                        on-change={checkedChange}\n                    />\n\n                    <span class={clsName(\"inner\")}></span>\n                </span>\n                <span class={clsName(\"label\")}>{getLabelContent()}</span>\n            </label>\n        );\n    },\n};\n","import VeRadio from \"./src/index\";\n\nVeRadio.install = function (Vue) {\n    Vue.component(VeRadio.name, VeRadio);\n};\n\nexport default VeRadio;\n","// prefix\nexport const PREFIX_CLS = \"ve-dropdown-\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    FILTER_RESET: \"on-filter-reset\",\n    FILTER_CONFIRM: \"on-filter-confirm\",\n    VISIBLE_CHANGE: \"on-dropdown-visible-change\",\n    ITEM_SELECT_CHANGE: \"on-item-select-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_DROPDOWN: \"VeDropdown\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import clickoutside from \"../../src/directives/clickoutside.js\";\nimport VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\nimport VeRadio from \"vue-easytable/packages/ve-radio\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\nimport { clsName } from \"./util/index\";\nimport { isFunction, isBoolean } from \"../../src/utils\";\nimport { getRandomId } from \"../../src/utils/random\";\nimport {\n    getViewportOffset,\n    getViewportOffsetWithinContainer,\n} from \"../../src/utils/dom\";\n\nexport default {\n    name: COMPS_NAME.VE_DROPDOWN,\n    directives: {\n        \"click-outside\": clickoutside,\n    },\n    props: {\n        // 如果是select 组件将特殊处理\n        isSelect: {\n            type: Boolean,\n            default: false,\n        },\n        showOperation: {\n            type: Boolean,\n            default: false,\n        },\n\n        width: {\n            type: Number,\n            default: 90,\n        },\n\n        // select的最大宽度(超出隐藏)\n        maxWidth: {\n            type: Number,\n            default: 0,\n        },\n        // max height\n        maxHeight: {\n            type: Number,\n            default: 1000,\n        },\n\n        // 如果为true 会包含 checkbox\n        isMultiple: {\n            type: Boolean,\n            default: false,\n        },\n\n        // 用户传入v-model 的值 [{value/label/selected}]\n        value: {\n            type: [Array],\n            default: null,\n        },\n\n        // 文本居中方式 left|center|right\n        textAlign: {\n            type: String,\n            default: \"left\",\n        },\n\n        // 是否支持输入input\n        isInput: {\n            type: Boolean,\n            default: false,\n        },\n        // confirm filter text\n        confirmFilterText: {\n            type: String,\n            default: \"\",\n        },\n        // confirm filter text\n        resetFilterText: {\n            type: String,\n            default: \"\",\n        },\n        // hide by single selection item click\n        hideByItemClick: {\n            type: Boolean,\n            default: false,\n        },\n        // is show radio when single selection\n        showRadio: {\n            type: Boolean,\n            default: false,\n        },\n        // 当 isControlled=true ,visible 生效\n        visible: {\n            type: Boolean,\n            default: false,\n        },\n        // is controlled\n        isControlled: {\n            type: Boolean,\n            default: false,\n        },\n        // is custom content\n        isCustomContent: {\n            type: Boolean,\n            default: false,\n        },\n        // instance between dropdown items and trigger element\n        defaultInstance: {\n            type: Number,\n            default: 5,\n        },\n        // popper append to element\n        popperAppendTo: {\n            type: [String, HTMLElement],\n            default: function () {\n                return document.body;\n            },\n        },\n        /*\n        before visible change\n        如果返回false 则阻止显示或者关闭\n        */\n        beforeVisibleChange: {\n            type: Function,\n            default: null,\n        },\n    },\n    data() {\n        return {\n            internalVisible: false,\n            internalOptions: [],\n            inputValue: \"\",\n            // 是否显示触发器被点击了（被点击将忽略 clickOutside 事件）\n            isDropdownShowTriggerClicked: false,\n            // root id\n            rootId: \"\",\n            // dropdown items panel id\n            dropdownItemsPanelId: \"\",\n            // 弹出被添加到的目标元素\n            popperAppendToEl: null,\n            // 弹出被添加到的目标元素标签名称\n            appendToElTagName: null,\n        };\n    },\n    computed: {\n        // is dropdown visible\n        isDropdownVisible() {\n            return this.isControlled ? this.visible : this.internalVisible;\n        },\n\n        // 获取最大宽度(不设置则是无穷大)\n        getMaxWidth() {\n            var result = Infinity,\n                maxWidth = this.maxWidth,\n                width = this.width;\n\n            if (maxWidth && maxWidth > 0 && maxWidth > width) {\n                result = maxWidth;\n            }\n\n            return result;\n        },\n        // selected labels\n        selectedLabels() {\n            return this.internalOptions\n                .filter((x) => x.selected)\n                .map((x) => {\n                    if (x.selected) {\n                        return x.label;\n                    }\n                });\n        },\n        // operation buttons class\n        operationFilterClass() {\n            let result = null;\n            result = {\n                [clsName(\"filter-disable\")]: this.selectedLabels.length === 0,\n            };\n\n            return result;\n        },\n        // dropdown items class\n        dropdownItemsClass() {\n            return {\n                [clsName(\"dd\")]: true,\n                [clsName(\"dd-show\")]: this.isDropdownVisible,\n            };\n        },\n    },\n    watch: {\n        value: function () {\n            this.init();\n        },\n        visible: {\n            handler(visible) {\n                const { isControlled, showDropDown, hideDropDown } = this;\n                // deal after mounted hook\n                setTimeout(() => {\n                    if (isControlled) {\n                        if (visible) {\n                            showDropDown();\n                        } else {\n                            hideDropDown();\n                        }\n                    }\n                });\n            },\n            immediate: true,\n        },\n    },\n    methods: {\n        // 初始化\n        init() {\n            this.internalOptions = Object.assign([], this.value);\n\n            if (this.isInput) {\n                this.setInputValue();\n            }\n        },\n\n        // operation filter confirm\n        confirm() {\n            // 使用户传入的v-model 生效\n            this.$emit(\"input\", this.internalOptions);\n            this.$emit(EMIT_EVENTS.FILTER_CONFIRM, this.internalOptions);\n            this.hideDropDown();\n        },\n\n        // operation filter reset\n        reset() {\n            if (this.internalOptions.some((x) => x.selected)) {\n                this.internalOptions.map((x) => {\n                    if (x.selected) {\n                        x.selected = false;\n                    }\n                    return x;\n                });\n\n                // 使用户传入的v-model 生效\n                this.$emit(\"input\", this.internalOptions);\n\n                this.$emit(EMIT_EVENTS.FILTER_RESET, this.internalOptions);\n            }\n\n            this.hideDropDown();\n        },\n\n        // show dropdown\n        showDropDown() {\n            const { rootId, dropdownItemsPanelId } = this;\n\n            const nextVisible = true;\n\n            const allowChange = this.beforeVisibleChangeCallback(nextVisible);\n            if (isBoolean(allowChange) && !allowChange) {\n                return false;\n            }\n\n            let rootEl = document.querySelector(`#${rootId}`);\n\n            if (rootEl) {\n                // remove first\n                rootEl.innerHTML = \"\";\n                rootEl.appendChild(this.$refs[dropdownItemsPanelId]);\n\n                rootEl.style.position = \"absolute\";\n                rootEl.classList.add(clsName(\"popper\"));\n\n                this.changDropdownPanelPosition();\n            }\n\n            this.internalVisible = true;\n\n            this.$emit(EMIT_EVENTS.VISIBLE_CHANGE, nextVisible);\n        },\n\n        // hide dropdown\n        hideDropDown() {\n            const nextVisible = false;\n\n            const allowChange = this.beforeVisibleChangeCallback(nextVisible);\n            if (isBoolean(allowChange) && !allowChange) {\n                return false;\n            }\n\n            this.$emit(EMIT_EVENTS.VISIBLE_CHANGE, nextVisible);\n\n            setTimeout(() => {\n                this.internalVisible = false;\n                this.removeOrEmptyRootPanel();\n            }, 150);\n        },\n\n        // before visible change callback\n        beforeVisibleChangeCallback(nextVisible) {\n            const { beforeVisibleChange, isDropdownVisible } = this;\n\n            if (\n                nextVisible !== isDropdownVisible &&\n                isFunction(beforeVisibleChange)\n            ) {\n                // next visible\n                return beforeVisibleChange({\n                    nextVisible,\n                });\n            }\n        },\n\n        // remove or emoty root panel\n        removeOrEmptyRootPanel() {\n            const { rootId } = this;\n\n            let rootEl = document.querySelector(`#${rootId}`);\n            if (rootEl) {\n                rootEl.innerHTML = \"\";\n            }\n        },\n\n        // change dropdown panel position\n        changDropdownPanelPosition() {\n            const {\n                defaultInstance,\n                rootId,\n                popperAppendToEl,\n                appendToElTagName,\n            } = this;\n\n            let rootEl = document.querySelector(`#${rootId}`);\n\n            if (rootEl) {\n                const { width: currentPanelWidth, height: currentPanelHeight } =\n                    rootEl.getBoundingClientRect();\n\n                const triggerEl = this.$el.querySelector(\".ve-dropdown-dt\");\n                const { height: triggerElHeight } =\n                    triggerEl.getBoundingClientRect();\n\n                if (!popperAppendToEl) {\n                    return false;\n                }\n\n                // is append to body\n                const isAppendToBody = appendToElTagName === \"BODY\";\n\n                const {\n                    offsetLeft: triggerElLeft,\n                    offsetTop: triggerElTop,\n                    right: triggerElRight,\n                    bottom: triggerElBottom,\n                } = isAppendToBody\n                    ? getViewportOffset(triggerEl)\n                    : getViewportOffsetWithinContainer(\n                          triggerEl,\n                          popperAppendToEl,\n                      );\n\n                let panelX = 0;\n                let panelY = 0;\n\n                // 如果不是添加到body 需要考虑外层容器滚动调的影响\n                let scrollLeft = 0;\n                let scrollTop = 0;\n                if (!isAppendToBody) {\n                    scrollLeft = popperAppendToEl.scrollLeft;\n                    scrollTop = popperAppendToEl.scrollTop;\n                }\n\n                // 右方宽度够显示\n                if (triggerElRight >= currentPanelWidth) {\n                    panelX = triggerElLeft + scrollLeft;\n                }\n                // 右方宽度不够显示在鼠标点击左方\n                else {\n                    panelX = triggerElLeft - currentPanelWidth + scrollLeft;\n                }\n\n                // 下方高度够显示\n                if (triggerElBottom >= currentPanelHeight) {\n                    panelY =\n                        triggerElTop +\n                        triggerElHeight +\n                        defaultInstance +\n                        scrollTop;\n                }\n                // 下方高度不够显示在鼠标点击上方\n                else {\n                    panelY =\n                        triggerElTop -\n                        currentPanelHeight -\n                        defaultInstance +\n                        scrollTop;\n                }\n\n                rootEl.style.left = panelX + \"px\";\n                rootEl.style.top = panelY + \"px\";\n            }\n        },\n\n        // 设置文本框的值\n        setInputValue() {\n            var result, labels;\n\n            labels = this.selectedLabels;\n            if (Array.isArray(labels) && labels.length > 0) {\n                result = labels.join();\n            }\n\n            this.inputValue = result;\n        },\n\n        // dropdown panel click\n        dropdownPanelClick() {\n            this.isDropdownShowTriggerClicked = true;\n            this.dropdownShowToggle();\n        },\n\n        // dropdown show toggle\n        dropdownShowToggle() {\n            if (this.isDropdownVisible) {\n                this.hideDropDown();\n            } else {\n                this.showDropDown();\n            }\n        },\n\n        // single select option click\n        singleSelectOptionClick(e, item) {\n            this.internalOptions = this.internalOptions.map((x) => {\n                if (item.label === x.label) {\n                    x.selected = true;\n                } else {\n                    x.selected = false;\n                }\n                return x;\n            });\n\n            if (this.hideByItemClick) {\n                this.hideDropDown();\n            }\n\n            if (this.isInput) {\n                this.setInputValue();\n            }\n\n            // 使用户传入的v-model 生效\n            this.$emit(\"input\", this.internalOptions);\n\n            this.$emit(EMIT_EVENTS.ITEM_SELECT_CHANGE, this.internalOptions);\n        },\n\n        // 获取样式名称\n        getTextAlignClass() {\n            return clsName(`items-li-a-${this.textAlign}`);\n        },\n\n        // dropdown click outSide\n        dropdownClickOutside() {\n            /*\n            是否显示触发器被点击了（被点击将忽略 clickOutside 事件）\n            */\n            setTimeout(() => {\n                if (this.isDropdownShowTriggerClicked) {\n                    this.isDropdownShowTriggerClicked = false;\n                } else {\n                    this.hideDropDown();\n                }\n            });\n        },\n\n        // checbox 受控属性管理\n        checkedChangeControl(item, isChecked) {\n            this.internalOptions = this.internalOptions.map((i) => {\n                if (i.label === item.label) {\n                    i.selected = isChecked;\n                }\n                return i;\n            });\n\n            this.$emit(EMIT_EVENTS.ITEM_SELECT_CHANGE, this.internalOptions);\n        },\n\n        // get random id\n        getRandomIdWithPrefix() {\n            return clsName(getRandomId());\n        },\n\n        /*\n        add root element to element\n        如果不指定则添加到 body\n        */\n        addRootElementToElement() {\n            const { popperAppendTo } = this;\n\n            this.rootId = this.getRandomIdWithPrefix();\n            this.dropdownItemsPanelId = this.getRandomIdWithPrefix();\n\n            let rootEl = document.querySelector(`#${this.rootId}`);\n\n            if (rootEl) {\n                return false;\n            } else {\n                // fixed unit test error: [Vue warn]: Error in v-on handler: \"TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'.\"\n                this.$nextTick(() => {\n                    let containerEl = document.createElement(\"div\");\n\n                    containerEl.setAttribute(\"id\", this.rootId);\n\n                    if (\n                        typeof popperAppendTo === \"string\" &&\n                        popperAppendTo.length > 0\n                    ) {\n                        this.popperAppendToEl =\n                            document.querySelector(popperAppendTo);\n                    } else {\n                        this.popperAppendToEl = popperAppendTo;\n                    }\n\n                    this.appendToElTagName = this.popperAppendToEl.tagName;\n\n                    this.popperAppendToEl.appendChild(containerEl);\n                });\n            }\n        },\n    },\n\n    created() {\n        this.init();\n    },\n    mounted() {\n        this.addRootElementToElement();\n\n        this.$nextTick(() => {\n            const targetEl =\n                this.appendToElTagName === \"BODY\"\n                    ? document\n                    : this.popperAppendToEl;\n            targetEl.addEventListener(\n                \"scroll\",\n                this.changDropdownPanelPosition,\n            );\n        });\n        window.addEventListener(\"resize\", this.changDropdownPanelPosition);\n    },\n\n    destroyed() {\n        this.removeOrEmptyRootPanel();\n\n        this.$nextTick(() => {\n            const targetEl =\n                this.appendToElTagName === \"BODY\"\n                    ? document\n                    : this.popperAppendToEl;\n            targetEl.removeEventListener(\n                \"scroll\",\n                this.changDropdownPanelPosition,\n            );\n        });\n        window.removeEventListener(\"resize\", this.changDropdownPanelPosition);\n    },\n\n    render() {\n        const {\n            isMultiple,\n            getTextAlignClass,\n            internalOptions,\n            isSelect,\n            width,\n            maxHeight,\n            dropdownPanelClick,\n            getMaxWidth,\n            reset,\n            singleSelectOptionClick,\n            showOperation,\n            isCustomContent,\n            dropdownItemsClass,\n            dropdownItemsPanelId,\n        } = this;\n\n        let content = \"\";\n\n        if (isMultiple) {\n            content = internalOptions.map((item, index) => {\n                const checkboxProps = {\n                    key: item.label,\n                    props: {\n                        isControlled: true,\n                        label: item.label,\n                        showLine: item.showLine,\n                        isSelected: item.selected,\n                    },\n                    on: {\n                        \"on-checked-change\": (isChecked) =>\n                            this.checkedChangeControl(item, isChecked),\n                    },\n                };\n\n                return (\n                    <li\n                        key={index}\n                        class={[\n                            clsName(\"items-multiple\"),\n                            clsName(\"items-li\"),\n                            getTextAlignClass(),\n                        ]}\n                    >\n                        <VeCheckbox {...checkboxProps} />\n                    </li>\n                );\n            });\n        } else {\n            content = internalOptions.map((item, index) => {\n                const radioProps = {\n                    props: {\n                        isControlled: true,\n                        isSelected: item.selected,\n                    },\n                    on: {\n                        \"on-radio-change\": () => {},\n                    },\n                };\n\n                return (\n                    <li\n                        key={index}\n                        class={[\n                            clsName(\"items-li\"),\n                            item.selected ? \"active\" : \"\",\n                        ]}\n                        on-click={(e) => singleSelectOptionClick(e, item)}\n                    >\n                        <a\n                            class={[clsName(\"items-li-a\"), getTextAlignClass()]}\n                            href=\"javascript:void(0);\"\n                        >\n                            {this.showRadio ? (\n                                <VeRadio {...radioProps}>{item.label}</VeRadio>\n                            ) : (\n                                item.label\n                            )}\n                        </a>\n                    </li>\n                );\n            });\n        }\n\n        const dropdownProps = {\n            class: [\"ve-dropdown\"],\n        };\n\n        const dropdownItemsProps = {\n            ref: dropdownItemsPanelId,\n            class: dropdownItemsClass,\n            directives: [\n                {\n                    name: \"click-outside\",\n                    value: this.dropdownClickOutside,\n                },\n            ],\n        };\n\n        return (\n            <dl {...dropdownProps}>\n                <dt class=\"ve-dropdown-dt\" on-click={dropdownPanelClick}>\n                    <a\n                        class={[isSelect ? clsName(\"dt-selected\") : \"\"]}\n                        style={{ width: width + \"px\" }}\n                    >\n                        {this.$slots.default}\n                    </a>\n                </dt>\n                <div style={{ display: \"none\" }}>\n                    <dd {...dropdownItemsProps}>\n                        <ul\n                            class={clsName(\"items\")}\n                            style={{\n                                \"min-width\": width + \"px\",\n                                \"max-width\": getMaxWidth + \"px\",\n                            }}\n                        >\n                            {/* custome content */}\n                            {isCustomContent && this.$slots[\"custom-content\"]}\n                            {/* not custom content */}\n                            {!isCustomContent && (\n                                <div>\n                                    <div\n                                        style={{\n                                            \"max-height\": maxHeight + \"px\",\n                                        }}\n                                        class={clsName(\"items-warpper\")}\n                                    >\n                                        {content}\n                                    </div>\n                                    {showOperation && (\n                                        <li class={clsName(\"operation\")}>\n                                            <a\n                                                class={[\n                                                    clsName(\"operation-item\"),\n                                                    this.operationFilterClass,\n                                                ]}\n                                                href=\"javascript:void(0)\"\n                                                on-click={reset}\n                                            >\n                                                {this.resetFilterText}\n                                            </a>\n                                            <a\n                                                class={clsName(\n                                                    \"operation-item\",\n                                                )}\n                                                href=\"javascript:void(0)\"\n                                                on-click={this.confirm}\n                                            >\n                                                {this.confirmFilterText}\n                                            </a>\n                                        </li>\n                                    )}\n                                </div>\n                            )}\n                        </ul>\n                    </dd>\n                </div>\n            </dl>\n        );\n    },\n};\n","import VeDropdown from \"./src/index.jsx\";\n\nVeDropdown.install = function (Vue) {\n    Vue.component(VeDropdown.name, VeDropdown);\n};\n\nexport default VeDropdown;\n","// prefix\nexport const PREFIX_CLS = \"ve-loading-\";\n\n// emit events\nexport const EMIT_EVENTS = {};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_LOADING: \"VeLoading\",\n    VE_LOADING_PLANE: \"VeLoadingPlane\",\n    /* VE_LOADING_CHASE: \"VeLoadingChase\", */\n    VE_LOADING_BOUNCE: \"VeLoadingBounce\",\n    VE_LOADING_WAVE: \"VeLoadingWave\",\n    VE_LOADING_PULSE: \"VeLoadingPulse\",\n    VE_LOADING_FLOW: \"VeLoadingFlow\",\n    /* VE_LOADING_SWING: \"VeLoadingSwing\", */\n    /*  VE_LOADING_CIRCLE: \"VeLoadingCircle\",\n    VE_LOADING_CIRCLE_FADE: \"VeLoadingCircleFade\", */\n    VE_LOADING_GRID: \"VeLoadingGrid\",\n    VE_LOADING_FOLD: \"VeLoadingFold\",\n};\n\n// spin name\nexport const SPIN_NAMES = {\n    PLANE: \"plane\",\n    GRID: \"grid\",\n    WAVE: \"wave\",\n    FLOW: \"flow\",\n    BOUNCE: \"bounce\",\n    PULSE: \"pulse\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_PLANE,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { color, width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n                \"background-color\": color,\n            };\n\n            return result;\n        },\n    },\n    render() {\n        return <div style={this.spinStyle} class={clsName(\"plane\")} />;\n    },\n};\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_BOUNCE,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n            };\n\n            return result;\n        },\n        itemStyle() {\n            const { color } = this;\n\n            return {\n                \"background-color\": color,\n            };\n        },\n    },\n    render() {\n        const { spinStyle, itemStyle } = this;\n        return (\n            <div style={spinStyle} class={clsName(\"bounce\")}>\n                <div style={itemStyle} class={clsName(\"bounce-dot\")}></div>\n                <div style={itemStyle} class={clsName(\"bounce-dot\")}></div>\n            </div>\n        );\n    },\n};\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_WAVE,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n            };\n\n            return result;\n        },\n        itemStyle() {\n            const { color } = this;\n\n            return {\n                \"background-color\": color,\n            };\n        },\n    },\n    render() {\n        const { spinStyle, itemStyle } = this;\n        return (\n            <div style={spinStyle} class={clsName(\"wave\")}>\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\n                <div style={itemStyle} class={clsName(\"wave-rect\")}></div>\n            </div>\n        );\n    },\n};\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_PULSE,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { color, width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n                \"background-color\": color,\n            };\n\n            return result;\n        },\n    },\n    render() {\n        return <div style={this.spinStyle} class={clsName(\"pulse\")} />;\n    },\n};\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_FLOW,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n            };\n\n            return result;\n        },\n        itemStyle() {\n            const { color } = this;\n\n            return {\n                \"background-color\": color,\n            };\n        },\n    },\n    render() {\n        const { spinStyle, itemStyle } = this;\n        return (\n            <div style={spinStyle} class={clsName(\"flow\")}>\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\n                <div style={itemStyle} class={clsName(\"flow-dot\")}></div>\n            </div>\n        );\n    },\n};\n","import { clsName } from \"./util\";\nimport { COMPS_NAME } from \"./util/constant\";\nimport { getValByUnit } from \"../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING_GRID,\n    props: {\n        color: {\n            type: String,\n            required: true,\n        },\n        width: {\n            type: [Number, String],\n            required: true,\n        },\n        height: {\n            type: [Number, String],\n            required: true,\n        },\n    },\n    computed: {\n        // spin style\n        spinStyle() {\n            const { width, height } = this;\n\n            let result = {\n                width: getValByUnit(width),\n                height: getValByUnit(height),\n            };\n\n            return result;\n        },\n        itemStyle() {\n            const { color } = this;\n\n            return {\n                \"background-color\": color,\n            };\n        },\n    },\n    render() {\n        const { spinStyle, itemStyle } = this;\n        return (\n            <div style={spinStyle} class={clsName(\"grid\")}>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n                <div style={itemStyle} class={clsName(\"grid-cube\")}></div>\n            </div>\n        );\n    },\n};\n","/* thanks for  https://github.com/tobiasahlin/SpinKit*/\n\nimport { clsName } from \"./util\";\nimport { COMPS_NAME } from \"../src/util/constant\";\nimport Plane from \"./plane\";\nimport Bounce from \"./bounce\";\nimport Wave from \"./wave\";\nimport Pulse from \"./pulse\";\nimport Flow from \"./flow\";\nimport Grid from \"./grid\";\n\nexport default {\n    name: COMPS_NAME.VE_LOADING,\n    components: { Plane, Bounce, Wave, Pulse, Flow, Grid },\n    computed: {\n        // loading class\n        loadingClass() {\n            const { visible, fullscreen } = this;\n            return {\n                [clsName(\"overlay\")]: true,\n                [clsName(\"fixed\")]: fullscreen,\n                [clsName(\"hide\")]: !visible,\n            };\n        },\n\n        // loading style\n        loadingStyle() {\n            const { overlayBackgroundColor } = this;\n\n            return {\n                \"background-color\": overlayBackgroundColor,\n            };\n        },\n    },\n\n    render() {\n        const { width, height, color } = this;\n\n        const spinProps = {\n            props: {\n                width,\n                height,\n                color,\n            },\n        };\n\n        return (\n            <div\n                style={this.loadingStyle}\n                class={[\"ve-loading\", this.loadingClass]}\n            >\n                <div class={clsName(\"spin-container\")}>\n                    <div class={clsName(\"spin\")}>\n                        <this.name {...spinProps}></this.name>\n                    </div>\n                    <div style={{ color: color }} class={clsName(\"spin-tip\")}>\n                        {this.tip}\n                    </div>\n                </div>\n            </div>\n        );\n    },\n};\n","import Vue from \"vue\";\nimport VeLoading from \"./loading.jsx\";\nimport { addClass, removeClass } from \"../../src/utils/dom\";\nimport { clsName } from \"./util\";\nimport { SPIN_NAMES, COMPS_NAME } from \"../src/util/constant\";\n\n// default options\nconst defaultOptions = {\n    name: \"plane\",\n    visible: false,\n    color: \"#1890ff\",\n    overlayBackgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    width: 40,\n    height: 40,\n    tip: \"\",\n    fullscreen: false,\n    target: \"\",\n    lock: false,\n    // parent “__parent__”会被忽略\n    parent__: null,\n};\n\n// parent relative class\nconst PARENT_RELATIVE_CLASS = clsName(\"parent-relative\");\n// parent lock class\nconst PARENT_LOCK_CLASS = clsName(\"parent-lock\");\n\nconst LoadingConstructor = Vue.extend(VeLoading);\n\n// show\nLoadingConstructor.prototype.show = function () {\n    Vue.nextTick(() => {\n        if (this.lock) {\n            addClass(this.parent__, PARENT_LOCK_CLASS);\n        }\n        this.visible = true;\n    });\n};\n\n// close\nLoadingConstructor.prototype.close = function () {\n    Vue.nextTick(() => {\n        if (this.lock) {\n            removeClass(this.parent__, PARENT_LOCK_CLASS);\n        }\n        this.visible = false;\n    });\n};\n\n// destroy\nLoadingConstructor.prototype.destroy = function () {\n    removeClass(this.parent__, PARENT_RELATIVE_CLASS);\n    removeClass(this.parent__, PARENT_LOCK_CLASS);\n\n    if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el);\n    }\n    this.$destroy();\n    this.visible = false;\n};\n\n// create instance\nfunction createInstance(options = {}) {\n    return new LoadingConstructor({\n        el: document.createElement(\"div\"),\n        data: options,\n    });\n}\n\n// check spin name\nfunction checkSpinName(name) {\n    if (!Object.values(SPIN_NAMES).includes(name)) {\n        console.error(`${name} is not found in ${COMPS_NAME.VE_LOADING}.`);\n    }\n}\n\n// Loading instance\nfunction Loading(options = {}) {\n    options = Object.assign({}, defaultOptions, options);\n\n    if (typeof options.target === \"string\" && options.target.length > 0) {\n        options.target = document.querySelector(options.target);\n    }\n    options.target = options.target || document.body;\n\n    checkSpinName(options.name);\n\n    if (options.target !== document.body) {\n        options.fullscreen = false;\n    } else {\n        options.fullscreen = true;\n    }\n\n    let loadingInstance = createInstance(options);\n\n    // set parent\n    options.parent__ = options.fullscreen ? document.body : options.target;\n\n    addClass(options.parent__, PARENT_RELATIVE_CLASS);\n\n    options.parent__.appendChild(loadingInstance.$el);\n\n    return loadingInstance;\n}\n\nexport default Loading;\n","import Vue from \"vue\";\nimport VeLoading from \"./src/index.js\";\n\nVeLoading.install = function (Vue) {\n    Vue.prototype.$veLoading = VeLoading;\n};\n\nexport default VeLoading;\n","// prefix\nexport const PREFIX_CLS = \"ve-pagination-\";\n\n// locale comp name\nexport const LOCALE_COMP_NAME = \"pagination\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    PAGE_NUMBER_CHANGE: \"on-page-number-change\",\n    PAGE_SIZE_CHANGE: \"on-page-size-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_PAGINATION: \"VePagination\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { clsName } from \"./util\";\nimport { LOCALE_COMP_NAME } from \"./util/constant\";\nimport { createLocale } from \"../../src/utils/index\";\nimport { ICON_NAMES } from \"../../src/utils/constant\";\nconst t = createLocale(LOCALE_COMP_NAME);\n\nexport default {\n    props: {\n        pageCount: {\n            type: Number,\n            required: true,\n        },\n        pageIndex: {\n            type: Number,\n            required: true,\n        },\n        pagingCount: {\n            type: Number,\n            required: true,\n        },\n    },\n    computed: {\n        numOffset() {\n            return Math.floor((this.pagingCount + 2) / 2) - 1;\n        },\n\n        showJumpPrev() {\n            if (this.pageCount > this.pagingCount + 2) {\n                if (this.pageIndex > this.pagingCount) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        showJumpNext() {\n            if (this.pageCount > this.pagingCount + 2) {\n                //if (this.pageIndex < this.pageCount - this.numOffset) {\n                if (this.pageIndex <= this.pageCount - this.pagingCount) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        // 当前要显示的数字按钮集合\n        pagingCounts() {\n            let startNum,\n                result = [],\n                showJumpPrev = this.showJumpPrev,\n                showJumpNext = this.showJumpNext;\n\n            if (showJumpPrev && !showJumpNext) {\n                startNum = this.pageCount - this.pagingCount;\n                for (let i = startNum; i < this.pageCount; i++) {\n                    result.push(i);\n                }\n            } else if (!showJumpPrev && showJumpNext) {\n                for (let i = 2; i < this.pagingCount + 2; i++) {\n                    result.push(i);\n                }\n            } else if (showJumpPrev && showJumpNext) {\n                for (\n                    let i = this.pageIndex - this.numOffset;\n                    i <= this.pageIndex + this.numOffset;\n                    i++\n                ) {\n                    result.push(i);\n                }\n            } else {\n                for (let i = 2; i < this.pageCount; i++) {\n                    result.push(i);\n                }\n            }\n\n            return result;\n        },\n    },\n    methods: {\n        jumpPage(pageIndex) {\n            this.$emit(\"jumpPageHandler\", pageIndex);\n        },\n    },\n    render() {\n        const {\n            pageIndex,\n            jumpPage,\n            showJumpPrev,\n            pagingCount,\n            pagingCounts,\n            showJumpNext,\n            pageCount,\n        } = this;\n\n        return (\n            <span class={clsName(\"pager\")}>\n                <li\n                    class={[\n                        pageIndex === 1 ? clsName(\"li-active\") : \"\",\n                        clsName(\"li\"),\n                    ]}\n                    on-click={() => jumpPage(1)}\n                >\n                    <a>1</a>\n                </li>\n\n                {showJumpPrev && (\n                    <li\n                        class={[\n                            pageIndex === 1 ? \"disabled\" : \"\",\n                            clsName(\"li\"),\n                            clsName(\"jump-prev\"),\n                        ]}\n                        title={t(\"prev5\", pagingCount)}\n                        on-click={() => jumpPage(pageIndex - pagingCount)}\n                    >\n                        <a>\n                            <VeIcon name={ICON_NAMES.DOUBLE_LEFT_ARROW} />\n                        </a>\n                    </li>\n                )}\n                {pagingCounts.map((number, index) => {\n                    return (\n                        <li\n                            key={index}\n                            class={[\n                                number === pageIndex\n                                    ? clsName(\"li-active\")\n                                    : \"\",\n                                clsName(\"li\"),\n                            ]}\n                            on-click={() => jumpPage(number)}\n                        >\n                            <a>{number}</a>\n                        </li>\n                    );\n                })}\n\n                {showJumpNext && (\n                    <li\n                        class={[clsName(\"li\"), clsName(\"jump-next\")]}\n                        title={t(\"next5\", pagingCount)}\n                        on-click={() => jumpPage(pageIndex + pagingCount)}\n                    >\n                        <a>\n                            <VeIcon name={ICON_NAMES.DOUBLE_RIGHT_ARROW} />\n                        </a>\n                    </li>\n                )}\n\n                {pageCount > 1 && (\n                    <li\n                        class={[\n                            pageIndex === pageCount ? clsName(\"li-active\") : \"\",\n                            clsName(\"li\"),\n                        ]}\n                        on-click={() => jumpPage(pageCount)}\n                    >\n                        <a>{pageCount}</a>\n                    </li>\n                )}\n            </span>\n        );\n    },\n};\n","// prefix\nexport const PREFIX_CLS = \"ve-select-\";\n\n// emit events\nexport const EMIT_EVENTS = {\n    // on select change\n    SELECT_CHANGE: \"on-select-change\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_SELECT: \"VeSelect\",\n};\n","import { PREFIX_CLS } from \"./constant\";\n\n/*\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"./util/constant\";\nimport { clsName } from \"./util/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../src/utils/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_SELECT,\n    props: {\n        width: {\n            type: Number,\n            default: 90,\n        },\n\n        // select的最大宽度(超出隐藏)\n        maxWidth: {\n            type: Number,\n            default: 0,\n        },\n\n        // 如果为true 会包含 checkbox\n        isMultiple: {\n            type: Boolean,\n            default: false,\n        },\n\n        // 用户传入v-model 的值 [{value/label/selected}]\n        value: {\n            type: Array,\n            default: null,\n        },\n\n        // 占位符\n        placeholder: {\n            type: String,\n            default: \"请选择\",\n            validator: function (value) {\n                return value.length > 0;\n            },\n        },\n\n        // 文本居中方式 left|center|right\n        textAlign: {\n            type: String,\n            default: \"left\",\n        },\n\n        // 是否支持输入input\n        isInput: {\n            type: Boolean,\n            default: false,\n        },\n        // popper append to element\n        popperAppendTo: {\n            type: [String, HTMLElement],\n            default: function () {\n                return document.body;\n            },\n        },\n    },\n    data() {\n        return {\n            visible: false,\n\n            internalOptions: [],\n\n            inputValue: \"\",\n            // dorpdown visible\n            dropdownVisible: false,\n        };\n    },\n    computed: {\n        // icon class\n        iconClass() {\n            return {\n                [clsName(\"show\")]: this.dropdownVisible,\n                [clsName(\"toggle-icon\")]: true,\n            };\n        },\n    },\n    watch: {\n        value: function () {\n            this.init();\n        },\n    },\n    methods: {\n        // 初始化\n        init() {\n            this.internalOptions = Object.assign([], this.value);\n        },\n\n        // 显示选中的信息\n        showSelectInfo() {\n            var result, labels;\n\n            labels = this.selectedLabels();\n            if (Array.isArray(labels) && labels.length > 0) {\n                result = labels.join();\n            } else {\n                result = this.placeholder;\n            }\n\n            return result;\n        },\n\n        // 当前选中项的label\n        selectedLabels() {\n            return this.internalOptions\n                .filter((x) => x.selected)\n                .map((x) => {\n                    if (x.selected) {\n                        return x.label;\n                    }\n                });\n        },\n\n        // dropdown change event\n        dropdownChange() {\n            // 使用户传入的v-model 生效\n            this.$emit(\"input\", this.internalOptions);\n            this.$emit(EMIT_EVENTS.SELECT_CHANGE, this.internalOptions);\n        },\n    },\n\n    created() {\n        this.init();\n    },\n    render() {\n        const { isInput } = this;\n\n        const props = {\n            class: \"ve-select\",\n            props: {\n                isSelect: true,\n                width: this.width,\n                maxWidth: this.maxWidth,\n                isMultiple: this.isMultiple,\n                textAlign: this.textAlign,\n                isInput: this.isInput,\n                // v-model\n                value: this.internalOptions,\n                hideByItemClick: true,\n                popperAppendTo: this.popperAppendTo,\n            },\n            style: {\n                width: this.width,\n            },\n            on: {\n                //change: this.dropdownChange,\n                // v-model\n                input: (val) => {\n                    this.internalOptions = val;\n                    this.dropdownChange();\n                },\n                // dropdown visible change\n                \"dropdown-visible-change\": (visible) => {\n                    this.dropdownVisible = visible;\n                },\n            },\n        };\n\n        let content = \"\";\n        if (isInput) {\n            content = (\n                <input\n                    class={clsName(\"input\")}\n                    placeholder={this.placeholder}\n                    type=\"text\"\n                    v-model={this.inputValue}\n                />\n            );\n        } else {\n            content = (\n                <span class={clsName(\"selected-span\")}>\n                    {this.showSelectInfo()}\n                </span>\n            );\n        }\n\n        return (\n            <VeDropdown {...props}>\n                <span>\n                    {content}\n                    <VeIcon\n                        name={ICON_NAMES.BOTTOM_ARROW}\n                        class={this.iconClass}\n                    />\n                    {/* <i class={[this.iconClass]}></i> */}\n                </span>\n            </VeDropdown>\n        );\n    },\n};\n","import VeSelect from \"./src/index.jsx\";\n\nVeSelect.install = function (Vue) {\n    Vue.component(VeSelect.name, VeSelect);\n};\n\nexport default VeSelect;\n","import Pager from \"./pager.jsx\";\nimport VeSelect from \"vue-easytable/packages/ve-select\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { COMPS_NAME, EMIT_EVENTS, LOCALE_COMP_NAME } from \"./util/constant\";\nimport { clsName } from \"./util\";\nimport { createLocale } from \"../../src/utils/index\";\nimport { ICON_NAMES } from \"../../src/utils/constant\";\n\nconst t = createLocale(LOCALE_COMP_NAME);\n\nexport default {\n    name: COMPS_NAME.VE_PAGINATION,\n\n    components: {\n        Total: {\n            render() {\n                return (\n                    <span class={clsName(\"total\")}>\n                        {t(\"total\", this.$parent.total)}\n                    </span>\n                );\n            },\n        },\n\n        Prev: {\n            render() {\n                return (\n                    <li\n                        on-click={this.$parent.prevPage}\n                        class={[\n                            this.$parent.newPageIndex === 1\n                                ? clsName(\"disabled\")\n                                : \"\",\n                            clsName(\"li\"),\n                            clsName(\"prev\"),\n                        ]}\n                    >\n                        <a>\n                            <VeIcon name={ICON_NAMES.LEFT_ARROW} />\n                        </a>\n                    </li>\n                );\n            },\n        },\n\n        Pager,\n\n        Next: {\n            render() {\n                return (\n                    <li\n                        on-click={this.$parent.nextPage}\n                        class={[\n                            this.$parent.newPageIndex === this.$parent.pageCount\n                                ? clsName(\"disabled\")\n                                : \"\",\n                            clsName(\"li\"),\n                            clsName(\"next\"),\n                        ]}\n                    >\n                        <a>\n                            <VeIcon name={ICON_NAMES.RIGHT_ARROW} />\n                        </a>\n                    </li>\n                );\n            },\n        },\n\n        Sizer: {\n            render() {\n                return (\n                    <VeSelect\n                        class={clsName(\"select\")}\n                        value={this.$parent.newPageSizeOption}\n                        popperAppendTo={this.$parent.popperAppendTo}\n                        on-input={this.handleChange}\n                        //v-model={this.$parent.newPageSizeOption}\n                    />\n                );\n            },\n\n            methods: {\n                handleChange(items) {\n                    if (Array.isArray(items) && items.length > 0) {\n                        let item = items.find((x) => x.selected);\n                        if (item) {\n                            this.$parent.pageSizeChangeHandler(item.value);\n                        }\n                    }\n                },\n            },\n        },\n\n        Jumper: {\n            methods: {\n                jumperEnter(event) {\n                    if (event.keyCode !== 13) return;\n\n                    var val = this.$parent.getValidNum(event.target.value);\n                    // bug fixed #483\n                    event.target.value = val;\n                    this.$parent.jumpPageHandler(val);\n                },\n            },\n            render() {\n                return (\n                    <span class={clsName(\"goto\")}>\n                        &nbsp;{t(\"goto\")}&nbsp;\n                        <input\n                            class={clsName(\"goto-input\")}\n                            domProps-value={this.$parent.newPageIndex}\n                            on-keyup={this.jumperEnter}\n                            type=\"input\"\n                        />\n                        &nbsp;{t(\"page\")}&nbsp;\n                    </span>\n                );\n            },\n        },\n    },\n    props: {\n        layout: {\n            type: Array,\n            default() {\n                return [\"total\", \"prev\", \"pager\", \"next\", \"sizer\", \"jumper\"];\n            },\n        },\n\n        // 总条数\n        total: {\n            type: Number,\n            required: true,\n        },\n\n        // 当前页\n        pageIndex: {\n            type: Number,\n            default: 1,\n        },\n\n        // 最多显示几个数字按钮\n        pagingCount: {\n            type: Number,\n            default: 5,\n        },\n\n        // 每页大小\n        pageSize: {\n            type: Number,\n            default: 10,\n        },\n\n        // 每页大小下拉配置\n        pageSizeOption: {\n            type: Array,\n            default: function () {\n                return [10, 20, 30];\n            },\n        },\n        // popper append to element\n        popperAppendTo: {\n            type: [String, HTMLElement],\n            default: function () {\n                return document.body;\n            },\n        },\n    },\n    data() {\n        return {\n            newPageIndex:\n                this.pageIndex && this.pageIndex > 0\n                    ? parseInt(this.pageIndex)\n                    : 1,\n\n            newPageSize: this.pageSize,\n        };\n    },\n\n    computed: {\n        pageCount() {\n            return Math.ceil(this.total / this.newPageSize);\n        },\n        newPageSizeOption() {\n            return this.pageSizeOption.map((x) => {\n                var temp = {};\n\n                temp.value = x;\n                temp.label = x + t(\"itemsPerPage\");\n                if (this.newPageSize == x) {\n                    temp.selected = true;\n                }\n\n                return temp;\n            });\n        },\n    },\n    watch: {\n        pageIndex: function (newVal) {\n            this.newPageIndex = newVal;\n        },\n\n        pageSize: function (newVal) {\n            this.newPageSize = newVal;\n        },\n    },\n\n    methods: {\n        getValidNum(value) {\n            let result = 1;\n\n            value = parseInt(value, 10);\n\n            if (isNaN(value) || value < 1) {\n                result = 1;\n            } else {\n                if (value < 1) {\n                    result = 1;\n                } else if (value > this.pageCount) {\n                    result = this.pageCount;\n                } else {\n                    result = value;\n                }\n            }\n            return result;\n        },\n\n        jumpPageHandler(newPageIndex) {\n            this.newPageIndex = newPageIndex;\n            this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\n        },\n\n        // 上一页\n        prevPage() {\n            if (this.newPageIndex > 1) {\n                this.newPageIndex = this.newPageIndex - 1;\n                this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\n            }\n        },\n\n        // 下一页\n        nextPage() {\n            if (this.newPageIndex < this.pageCount) {\n                this.newPageIndex = this.newPageIndex + 1;\n                this.$emit(EMIT_EVENTS.PAGE_NUMBER_CHANGE, this.newPageIndex);\n            }\n        },\n\n        // 改变页面大小\n        pageSizeChangeHandler() {\n            let item = this.newPageSizeOption.find((x) => x.selected);\n\n            if (item) {\n                this.newPageSize = item.value;\n                this.newPageIndex = 1;\n                this.$emit(EMIT_EVENTS.PAGE_SIZE_CHANGE, this.newPageSize);\n            }\n        },\n\n        // 回到初始页码\n        goBackPageIndex() {\n            this.newPageIndex =\n                this.pageIndex && this.pageIndex > 0\n                    ? parseInt(this.pageIndex)\n                    : 1;\n        },\n\n        // 还原每页大小\n        goBackPageSize() {\n            if (this.pageSize > 0) {\n                this.newPageSize = this.pageSize;\n            }\n        },\n    },\n    render() {\n        let template = <ul class=\"ve-pagination\"></ul>;\n\n        var comps = {\n            //'total','prev','pager','next','sizer','jumper'\n            total: <total></total>,\n            prev: <prev></prev>,\n            pager: (\n                <pager\n                    pageCount={this.pageCount}\n                    pageIndex={this.newPageIndex}\n                    pagingCount={this.pagingCount}\n                    onJumpPageHandler={this.jumpPageHandler}\n                ></pager>\n            ),\n            next: <next></next>,\n            sizer: <sizer></sizer>,\n            jumper: <jumper onJumpPageHandler={this.jumpPageHandler}></jumper>,\n        };\n\n        // https://github.com/ElemeFE/element/issues/10033\n        // https://github.com/ElemeFE/element/issues/9587\n        template.children = template.children || [];\n\n        this.layout.forEach((item) => {\n            template.children.push(comps[item]);\n        });\n\n        return template;\n    },\n};\n","import VePagination from \"./src/index.jsx\";\n\nVePagination.install = function (Vue) {\n    Vue.component(VePagination.name, VePagination);\n};\n\nexport default VePagination;\n","// prefix\nexport const PREFIX_CLS = \"ve-table-\";\n\n// locale comp name\nexport const LOCALE_COMP_NAME = \"table\";\n\n// column types\nexport const COLUMN_TYPES = {\n    // expand row\n    EXPAND: \"expand\",\n    // checkbox\n    CHECKBOX: \"checkbox\",\n    // radio\n    RADIO: \"radio\",\n};\n\n// column fixed type\nexport const COLUMN_FIXED_TYPE = {\n    LEFT: \"left\",\n    RIGHT: \"right\",\n};\n\n// expand row trigger types\nexport const EXPAND_TRIGGER_TYPES = {\n    // trigger by click icon\n    ICON: \"icon\",\n    // trigger by click cell(td)\n    CELL: \"cell\",\n    // trigger by click row\n    ROW: \"row\",\n};\n\n// cell selection direction\nexport const CELL_SELECTION_DIRECTION = {\n    UP: \"up\",\n    RIGHT: \"right\",\n    DOWN: \"down\",\n    LEFT: \"left\",\n};\n\n// autofilling direction\nexport const AUTOFILLING_DIRECTION = {\n    UP: \"up\",\n    RIGHT: \"right\",\n    DOWN: \"down\",\n    LEFT: \"left\",\n};\n\n// current cell selection types\nexport const CURRENT_CELL_SELECTION_TYPES = {\n    SINGLE: \"single\",\n    RANGE: \"range\",\n};\n\n// emit events\nexport const EMIT_EVENTS = {\n    // body-cell-width-change\n    BODY_CELL_WIDTH_CHANGE: \"on-body-cell-width-change\",\n    // header-row-height-change\n    HEADER_ROW_HEIGHT_CHANGE: \"on-header-row-height-change\",\n    // footer-row-height-change\n    FOOTER_ROW_HEIGHT_CHANGE: \"on-footer-row-height-change\",\n    // body-row-height-change\n    BODY_ROW_HEIGHT_CHANGE: \"on-body-row-height-change\",\n    // body row click\n    BODY_ROW_CLICK: \"on-body-row-click\",\n    // body cell click\n    BODY_CELL_CLICK: \"on-body-cell-click\",\n    // body cell mouseover\n    BODY_CELL_MOUSEOVER: \"on-body-cell-mouseover\",\n    // body cell mousedown\n    BODY_CELL_MOUSEDOWN: \"on-body-cell-mousedown\",\n    // body cell mousemove\n    BODY_CELL_MOUSEMOVE: \"on-body-cell-mousemove\",\n    // body cell mouseup\n    BODY_CELL_MOUSEUP: \"on-body-cell-mouseup\",\n    // body cell double click\n    BODY_CELL_DOUBLE_CLICK: \"on-body-cell-double-click\",\n    // body cell contextmenu\n    BODY_CELL_CONTEXTMENU: \"on-body-cell-contextmenu\",\n    // expand row change\n    EXPAND_ROW_CHANGE: \"on-expand-row-change\",\n    // checkbox selected row change\n    CHECKBOX_SELECTED_ROW_CHANGE: \"on-checkbox-selected-row-change\",\n    // checkbox selected all change\n    CHECKBOX_SELECTED_ALL_CHANGE: \"on-checkbox-selected-all-change\",\n    // checkbox selected all ino\n    CHECKBOX_SELECTED_ALL_INFO: \"on-checkbox-selected-all-info\",\n    // radio selected row change\n    RADIO_SELECTED_ROW_CHANGE: \"on-radio-selected-row-change\",\n    // sort change\n    SORT_CHANGE: \"on-sort-change\",\n    // on-cell-selection-key-change\n    CELL_SELECTION_KEY_CHANGE: \"on-cell-selection-key-change\",\n    // on-cell-selection-range-data-change\n    CELL_SELECTION_RANGE_DATA_CHANGE: \"on-cell-selection-range-data-change\",\n    // header filter confirm\n    HEADER_FILTER_CONFIRM: \"on-filter-confirm\",\n    // header filter reset\n    HEADER_FILTER_RESET: \"on-filter-reset\",\n    // header cell click\n    HEADER_CELL_CLICK: \"on-header-cell-click\",\n    // header cell contextmenu\n    HEADER_CELL_CONTEXTMENU: \"on-header-cell-contextmenu\",\n    // header cell mousedown\n    HEADER_CELL_MOUSEDOWN: \"on-header-cell-mousedown\",\n    // header cell mouseover\n    HEADER_CELL_MOUSEOVER: \"on-header-cell-mouseover\",\n    // header cell mousemove\n    HEADER_CELL_MOUSEMOVE: \"on-header-cell-mousemove\",\n    // header cell mouseleave\n    HEADER_CELL_MOUSELEAVE: \"on-header-cell-mouseleave\",\n    // highlight row change\n    HIGHLIGHT_ROW_CHANGE: \"on-highlight-row-change\",\n\n    // edit input clicked\n    EDIT_INPUT_CLICK: \"on-edit-input-click\",\n    // edit input blur\n    EDIT_INPUT_BLUR: \"on-edit-input-blur\",\n    // edit input value change\n    EDIT_INPUT_VALUE_CHANGE: \"on-edit-input-value-change\",\n    // edit input copy\n    EDIT_INPUT_COPY: \"on-edit-input-copy\",\n    // edit input paste\n    EDIT_INPUT_PASTE: \"on-edit-input-paste\",\n    // edit input cut\n    EDIT_INPUT_CUT: \"on-edit-input-cut\",\n\n    // selection corner mousedown\n    SELECTION_CORNER_MOUSEDOWN: \"selection-corner-mousedown\",\n    // selection corner mouseup\n    SELECTION_CORNER_MOUSEUP: \"selection-corner-mouseup\",\n    // autofilling direction change\n    AUTOFILLING_DIRECTION_CHANGE: \"autofilling-direction-change\",\n};\n\n// hooks name\nexport const HOOKS_NAME = {\n    //table container scroll\n    TABLE_CONTAINER_SCROLL: \"table-container-scroll\",\n    // table-container-mouseup\n    TABLE_CONTAINER_MOUSEUP: \"table-container-mouseup\",\n    // table-container-mousemove\n    //TABLE_CONTAINER_MOUSEMOVE: \"table-container-mousemove\",\n    // table size change\n    TABLE_SIZE_CHANGE: \"table-size-change\",\n    // table td width change\n    TABLE_CELL_WIDTH_CHANGE: \"table-cell-width-change\",\n    /*\n    clipboard cell value change\n    可能导致单元格高度变化，需要重新修改区域选择的定位信息\n    */\n    CLIPBOARD_CELL_VALUE_CHANGE: \"clipboard-cell-value-change\",\n    // header cell mousedown\n    //HEADER_CELL_MOUSEDOWN: \"header-cell-mousedown\",\n    // header cell mousemove\n    HEADER_CELL_MOUSEMOVE: \"header-cell-mousemove\",\n    // body cell mousemove\n    BODY_CELL_MOUSEMOVE: \"body-cell-mousemove\",\n};\n\n// comps name\nexport const COMPS_NAME = {\n    VE_TABLE: \"VeTable\",\n\n    VE_TABLE_THADER: \"VeTableHeader\",\n    VE_TABLE_THADER_TR: \"VeTableHeaderTr\",\n    VE_TABLE_THADER_Th: \"VeTableHeaderTh\",\n    VE_TABLE_HEADER_CHECKBOX_CONTENT: \"VeTableHeaderCheckboxContent\",\n    VE_TABLE_HEADER_FILTER_CONTENT: \"VeTableHeaderFilterContent\",\n    VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT: \"VeTableHeaderFilterCustomContent\",\n\n    VE_TABLE_BODY: \"VeTableBody\",\n    VE_TABLE_BODY_TR: \"VeTableBodyTr\",\n    VE_TABLE_BODY_TR_SCROLLING: \"VeTableBodyTrScrolling\",\n    VE_TABLE_BODY_CHECKBOX_CONTENT: \"VeTableBodyCheckboxContent\",\n    VE_TABLE_BODY_RADIO_CONTENT: \"VeTableBodyRadioContent\",\n    VE_TABLE_BODY_TD: \"VeTableBodyTd\",\n\n    VE_TABLE_COLGROUP: \"VeTableColgroup\",\n    VE_TABLE_FOOTER: \"VeTableFooter\",\n\n    VE_TABLE_EXPAND_TR: \"VeTableExpandTr\",\n    VE_TABLE_EXPAND_TR_ICON: \"VeTableExpandTrIcon\",\n\n    VE_TABLE_EDIT_INPUT: \"VeTableEditInput\",\n\n    VE_TABLE_SELECTION: \"VeTableSelection\",\n\n    VE_TABLE_COLUMN_RESISZER: \"VeTableColumnResizer\",\n};\n\n// comps custom attrs\nexport const COMPS_CUSTOM_ATTRS = {\n    // body row key\n    BODY_ROW_KEY: \"row-key\",\n    // body column key\n    BODY_COLUMN_KEY: \"col-key\",\n};\n\n// instance methods\nexport const INSTANCE_METHODS = {\n    // scroll to pixels\n    SCROLL_TO: \"scrollTo\",\n    // scroll to rowKey\n    SCROLL_TO_ROW_KEY: \"scrollToRowKey\",\n    // scroll to colKey\n    SCROLL_TO_COL_KEY: \"scrollToColKey\",\n    // start editing cell\n    START_EDITING_CELL: \"startEditingCell\",\n    // stop editing cell\n    STOP_EDITING_CELL: \"stopEditingCell\",\n    // set highlight row\n    SET_HIGHLIGHT_ROW: \"setHighlightRow\",\n    // set cell selection\n    SET_CELL_SELECTION: \"setCellSelection\",\n    // set range cell selection\n    SET_RANGE_CELL_SELECTION: \"setRangeCellSelection\",\n    // get range cell selection\n    GET_RANGE_CELL_SELECTION: \"getRangeCellSelection\",\n    // set all cell selection\n    SET_ALL_CELL_SELECTION: \"setAllCellSelection\",\n    // hide columns by keys\n    HIDE_COLUMNS_BY_KEYS: \"hideColumnsByKeys\",\n    // show columns by keys\n    SHOW_COLUMNS_BY_KEYS: \"showColumnsByKeys\",\n};\n\n// contextmenu types\nexport const CONTEXTMENU_TYPES = {\n    HEADER_CONTEXTMENU: \"headerContextmenu\",\n    BODY_CONTEXTMENU: \"bodyContextmenu\",\n};\n\n// contextmenu node types\nexport const CONTEXTMENU_NODE_TYPES = {\n    // separator\n    SEPARATOR: \"SEPARATOR\",\n    // cut\n    CUT: \"CUT\",\n    // copy\n    COPY: \"COPY\",\n    // paste todo\n    //PASTE: \"PASTE\",\n    // insert row above\n    INSERT_ROW_ABOVE: \"INSERT_ROW_ABOVE\",\n    // insert row below\n    INSERT_ROW_BELOW: \"INSERT_ROW_BELOW\",\n    // remove row\n    REMOVE_ROW: \"REMOVE_ROW\",\n    // empty row\n    EMPTY_ROW: \"EMPTY_ROW\",\n    // remove column\n    //REMOVE_COLUMN: \"REMOVE_COLUMN\",\n    // empty column\n    EMPTY_COLUMN: \"EMPTY_COLUMN\",\n    // hide column\n    //HIDE_COLUMN: \"HIDE_COLUMN\",\n    // empty cell\n    EMPTY_CELL: \"EMPTY_CELL\",\n    // left fixed column to\n    LEFT_FIXED_COLUMN_TO: \"LEFT_FIXED_COLUMN_TO\",\n    // cancel left fixed column to\n    CANCEL_LEFT_FIXED_COLUMN_TO: \"CANCEL_LEFT_FIXED_COLUMN_TO\",\n    // right fixed column to\n    RIGHT_FIXED_COLUMN_TO: \"RIGHT_FIXED_COLUMN_TO\",\n    // cancel right fixed column to\n    CANCEL_RIGHT_FIXED_COLUMN_TO: \"CANCEL_RIGHT_FIXED_COLUMN_TO\",\n};\n","import {\n    PREFIX_CLS,\n    CONTEXTMENU_NODE_TYPES,\n    COLUMN_FIXED_TYPE,\n    AUTOFILLING_DIRECTION,\n} from \"./constant\";\nimport { MOUSE_EVENT_CLICK_TYPE } from \"../../../src/utils/constant\";\nimport {\n    isEmptyValue,\n    isEmptyArray,\n    isFunction,\n} from \"../../../src/utils/index\";\nimport { getRandomId } from \"../../../src/utils/random\";\n\n/**\n * @clsName\n * @desc  get class name\n * @param {string} cls - class\n */\nexport function clsName(cls) {\n    return PREFIX_CLS + cls;\n}\n\n/**\n * @getRowKey\n * @desc  get row key\n * @param {Object} rowData - rowData\n * @param {string} rowKeyFieldName - row key field name\n */\nexport function getRowKey(rowData, rowKeyFieldName) {\n    let result = null;\n\n    if (rowData && rowKeyFieldName) {\n        result = rowData[rowKeyFieldName];\n    }\n    return result;\n}\n\n/**\n * @getColumnByColkey\n * @desc  get column by col key\n * @param {string} colKey - column key\n */\nexport function getColumnByColkey(colKey, colgroups) {\n    if (colKey) {\n        return colgroups.find((x) => x.key === colKey);\n    }\n    return null;\n}\n\n/**\n * @isLastColumnByColKey\n * @desc is last column by column key\n * @param {string} colKey - column key\n */\nexport function isLastColumnByColKey(colKey, colgroups) {\n    if (!isEmptyValue(colKey) && !isEmptyArray(colgroups)) {\n        return colgroups[colgroups.length - 1].key === colKey;\n    }\n    return false;\n}\n\n/**\n * @isOperationColumn\n * @desc is operation column\n * @param {string} colKey - column key\n * @param {arrat<object>} colgroups - column key\n */\nexport function isOperationColumn(colKey, colgroups) {\n    if (!isEmptyValue(colKey) && !isEmptyArray(colgroups)) {\n        const firstCol = colgroups[0];\n        if (firstCol.key === colKey && firstCol.operationColumn) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @isLastRowByRowKey\n * @desc is last row by row key\n * @param {string} rowKey - row key\n */\nexport function isLastRowByRowKey(rowKey, allRowKeys) {\n    if (!isEmptyValue(rowKey) && !isEmptyArray(allRowKeys)) {\n        return allRowKeys[allRowKeys.length - 1] === rowKey;\n    }\n    return false;\n}\n\n/**\n * @getDomResizeObserverCompKey\n * @desc  get dom resize observer comp key\n * @param {Any} originalKey - original key\n * @param {Number} columnsOptionResetTime - columns option change time\n */\nexport function getDomResizeObserverCompKey(\n    originalKey,\n    columnsOptionResetTime,\n) {\n    let result = originalKey;\n\n    if (result || result == 0) {\n        result = originalKey + \"@\" + columnsOptionResetTime;\n    }\n\n    return result;\n}\n\n/**\n * @recursiveRemoveColumnByKey\n * @desc recursive remove column key\n * @param {object} columns - deep clone column\n * @param {any} key - column key\n */\nexport function recursiveRemoveColumnByKey(columns, key) {\n    return columns.filter((item) => {\n        if (\"children\" in item) {\n            item.children = recursiveRemoveColumnByKey(item.children, key);\n        }\n        return item.key !== key;\n    });\n}\n\n/**\n * @getFixedTotalWidthByColumnKey\n * @desc  get fixed total width by column key\n * @param {object} colgroups - columns info\n * @param {any} colKey - column key\n * @param {string} fixed - left|right\n */\nexport function getFixedTotalWidthByColumnKey({ colgroups, colKey, fixed }) {\n    const currentIndex = colgroups.findIndex((x) => x.key === colKey);\n\n    let result = 0;\n\n    if (fixed === COLUMN_FIXED_TYPE.LEFT) {\n        // 只计算左列固定的\n        result = colgroups.reduce((total, currentVal, index) => {\n            return index < currentIndex &&\n                currentVal.fixed == COLUMN_FIXED_TYPE.LEFT\n                ? currentVal._realTimeWidth + total\n                : total;\n        }, 0);\n    } else if (fixed === COLUMN_FIXED_TYPE.RIGHT) {\n        // 只计算右列固定的\n        result = colgroups.reduce((total, currentVal, index) => {\n            return index > currentIndex &&\n                currentVal.fixed == COLUMN_FIXED_TYPE.RIGHT\n                ? currentVal._realTimeWidth + total\n                : total;\n        }, 0);\n    }\n\n    return result;\n}\n\n/**\n * @getNotFixedTotalWidthByColumnKey\n * @desc  get not fixed total width by column key\n * @param {object} colgroups - 列信息\n * @param {any} colKey - column key\n * @param {string} direction - left|right\n */\nexport function getNotFixedTotalWidthByColumnKey({ colgroups, colKey, fixed }) {\n    const currentIndex = colgroups.findIndex((x) => x.key === colKey);\n\n    let result = 0;\n\n    if (fixed === COLUMN_FIXED_TYPE.LEFT) {\n        // 只计算左侧非固定列\n        result = colgroups.reduce((total, currentVal, index) => {\n            return index < currentIndex && !currentVal.fixed\n                ? currentVal._realTimeWidth + total\n                : total;\n        }, 0);\n    } else if (fixed === COLUMN_FIXED_TYPE.RIGHT) {\n        // 只计算右侧非固定列\n        result = colgroups.reduce((total, currentVal, index) => {\n            return index > currentIndex && !currentVal.fixed\n                ? currentVal._realTimeWidth + total\n                : total;\n        }, 0);\n    }\n\n    return result;\n}\n\n/**\n * @getTotalWidthByColKeys\n * @desc get total width by collumn keys\n * @param {array<T>} colKeys\n * @param {array<object>} colgroups\n * @return {number} width\n */\nexport function getTotalWidthByColKeys({ colKeys, colgroups }) {\n    let result = colgroups.reduce((total, currentVal, index) => {\n        return colKeys.indexOf(currentVal.key) > -1\n            ? currentVal._realTimeWidth + total\n            : total;\n    }, 0);\n\n    return result;\n}\n\n/**\n * @initGroupColumns\n * @desc  int group columns\n * @param {array} cloneColumns - clone columns\n * @return {\n   isGroupHeader,\n   colgroups,\n   groupColumns\n}\n */\nexport function initGroupColumns(cloneColumns) {\n    let colgroups = [];\n    let groupColumns = [];\n\n    // set column level\n    let maxLevel = 1;\n    const setColumnLevel = (column, parent) => {\n        if (parent) {\n            column._level = parent._level + 1;\n            if (maxLevel < column._level) {\n                maxLevel = column._level;\n            }\n        }\n        if (column.children) {\n            column.children.forEach((item) => {\n                item.fixed = column.fixed;\n                setColumnLevel(item, column);\n            });\n        }\n    };\n    cloneColumns.forEach((column) => {\n        column._level = 1;\n        setColumnLevel(column);\n    });\n\n    // set colspan and rowspan and keys\n    const setColspanAndRowspanAndKeys = (column) => {\n        if (column.children) {\n            let keys = \"\";\n            let colspan = 0;\n            column.children.forEach((item) => {\n                setColspanAndRowspanAndKeys(item);\n\n                colspan += item._colspan;\n                keys += item._keys.endsWith(\"|\")\n                    ? item._keys\n                    : item._keys + \"|\";\n            });\n            column._keys = keys;\n            column._colspan = colspan;\n            column._rowspan = 1;\n        } else {\n            column._keys = column.key;\n            column._colspan = 1;\n            column._rowspan = maxLevel - column._level + 1;\n        }\n    };\n\n    cloneColumns.forEach((column) => {\n        setColspanAndRowspanAndKeys(column);\n    });\n\n    // init groupColumns\n    for (let i = 0; i < maxLevel; i++) {\n        groupColumns.push([]);\n    }\n    // set colgroups and groupColumns\n    const setColgroupsAndGroupColumns = (column) => {\n        // column has children || column key is not empty\n        if (!isEmptyArray(column.children) || !isEmptyValue(column.key)) {\n            // set groupColumns\n            const { ...groupColumn } = column;\n            groupColumns[column._level - 1].push(groupColumn);\n\n            if (column.children) {\n                column.children.forEach((item) => {\n                    setColgroupsAndGroupColumns(item);\n                });\n            } else {\n                // set colgroups\n                const { ...colgroup } = column;\n                colgroup._realTimeWidth = colgroup.width;\n                colgroups.push(colgroup);\n            }\n        }\n    };\n\n    cloneColumns.forEach((column) => {\n        setColgroupsAndGroupColumns(column);\n    });\n\n    return {\n        // set is group header\n        isGroupHeader: maxLevel > 1,\n        // set colgroups\n        colgroups,\n        // set groupColumns\n        groupColumns,\n    };\n}\n\n// get header contextmenu option collection\nexport function getHeaderContextmenuOptionCollection(t) {\n    return [\n        {\n            type: CONTEXTMENU_NODE_TYPES.SEPARATOR,\n        },\n        {\n            label: t(\"cut\"),\n            type: CONTEXTMENU_NODE_TYPES.CUT,\n        },\n        {\n            label: t(\"copy\"),\n            type: CONTEXTMENU_NODE_TYPES.COPY,\n        },\n        // {\n        //     label: t(\"paste\"),\n        //     type: CONTEXTMENU_NODE_TYPES.PASTE,\n        // },\n        {\n            label: t(\"removeColumn\"),\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN,\n        },\n        {\n            label: t(\"emptyColumn\"),\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN,\n        },\n        {\n            label: t(\"hideColumn\"),\n            type: CONTEXTMENU_NODE_TYPES.HIDE_COLUMN,\n        },\n        {\n            label: t(\"leftFixedColumnTo\"),\n            type: CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO,\n        },\n        {\n            label: t(\"cancelLeftFixedColumnTo\"),\n            type: CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO,\n        },\n        {\n            label: t(\"rightFixedColumnTo\"),\n            type: CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO,\n        },\n        {\n            label: t(\"cancelRightFixedColumnTo\"),\n            type: CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO,\n        },\n    ];\n}\n\n// get body contextmenu option collection\nexport function getBodyContextmenuOptionCollection(t) {\n    return [\n        {\n            type: CONTEXTMENU_NODE_TYPES.SEPARATOR,\n        },\n        {\n            label: t(\"cut\"),\n            type: CONTEXTMENU_NODE_TYPES.CUT,\n        },\n        {\n            label: t(\"copy\"),\n            type: CONTEXTMENU_NODE_TYPES.COPY,\n        },\n        // {\n        //     label: t(\"paste\"),\n        //     type: CONTEXTMENU_NODE_TYPES.PASTE,\n        // },\n        {\n            label: t(\"insertRowAbove\"),\n            type: CONTEXTMENU_NODE_TYPES.INSERT_ROW_ABOVE,\n        },\n        {\n            label: t(\"insertRowBelow\"),\n            type: CONTEXTMENU_NODE_TYPES.INSERT_ROW_BELOW,\n        },\n        {\n            label: t(\"removeRow\"),\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_ROW,\n        },\n        {\n            label: t(\"emptyRow\"),\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_ROW,\n        },\n        {\n            label: t(\"removeColumn\"),\n            type: CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN,\n        },\n        {\n            label: t(\"emptyCell\"),\n            type: CONTEXTMENU_NODE_TYPES.EMPTY_CELL,\n        },\n    ];\n}\n\n/***\n * @setHeaderContextmenuOptions\n * @desc set header contextmenu options\n * @param {array<object>} column\n * @param {array<object>} contextmenuHeaderOption\n * @param {object} cellSelectionRangeData\n * @param {array<object>} colgroups\n * @param {object} headerIndicatorColKeys\n * @param {boolean} enableHeaderContextmenu\n * @param {boolean} t locale\n * @return headerContextmenuOptions\n */\nexport function setHeaderContextmenuOptions({\n    column,\n    contextmenuHeaderOption,\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n    headerIndicatorColKeys,\n    enableHeaderContextmenu,\n    t,\n}) {\n    let result = [];\n\n    if (enableHeaderContextmenu) {\n        let selectionRangeKeys = getSelectionRangeKeys({\n            cellSelectionRangeData,\n        });\n\n        let selectionRangeIndexes = getSelectionRangeIndexes({\n            cellSelectionRangeData,\n            colgroups,\n            allRowKeys,\n        });\n\n        const isOperationCol = isOperationColumn(column.key, colgroups);\n\n        const colCount =\n            selectionRangeIndexes.endColIndex -\n            selectionRangeIndexes.startColIndex +\n            1;\n\n        const { contextmenus, beforeShow } = contextmenuHeaderOption;\n\n        const isWholeColSelection = !isEmptyValue(\n            headerIndicatorColKeys.startColKey,\n        );\n\n        const leftFixedColKeys = getColKeysByFixedType({\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\n            colgroups,\n            isExcludeOperationColumn: true,\n        });\n\n        const rightFixedColKeys = getColKeysByFixedType({\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\n            colgroups,\n            isExcludeOperationColumn: true,\n        });\n\n        if (isFunction(beforeShow)) {\n            beforeShow({\n                isWholeColSelection,\n                selectionRangeKeys,\n                selectionRangeIndexes,\n            });\n        }\n\n        const headerContextmenuOptionCollection =\n            getHeaderContextmenuOptionCollection(t);\n\n        contextmenus.forEach((contextmenu) => {\n            const contentmenuCollectionItem =\n                headerContextmenuOptionCollection.find(\n                    (x) => x.type === contextmenu.type,\n                );\n            if (contentmenuCollectionItem) {\n                let isContinue = true;\n                // empty column. 选中整列时支持\n                if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN\n                ) {\n                    if (isWholeColSelection) {\n                        contentmenuCollectionItem.label =\n                            contentmenuCollectionItem.label.replace(\n                                \"$1\",\n                                colCount,\n                            );\n                    } else {\n                        isContinue = false;\n                    }\n                }\n                // left fixed column to\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO\n                ) {\n                    //\n                    if (isOperationCol) {\n                        contentmenuCollectionItem.disabled = true;\n                    }\n                }\n                // calcel left fixed column to\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO\n                ) {\n                    if (leftFixedColKeys.length < 1) {\n                        contentmenuCollectionItem.disabled = true;\n                    }\n                }\n                // right fixed column to\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO\n                ) {\n                    //\n                    if (isOperationCol) {\n                        contentmenuCollectionItem.disabled = true;\n                    }\n                }\n                // calcel right fixed column to\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO\n                ) {\n                    if (rightFixedColKeys.length < 1) {\n                        contentmenuCollectionItem.disabled = true;\n                    }\n                }\n\n                if (isContinue) {\n                    result.push(contentmenuCollectionItem);\n                }\n            } else {\n                result.push(contextmenu);\n            }\n        });\n    }\n\n    return result;\n}\n\n/***\n * @setHeaderContextmenuOptions\n * @desc set header contextmenu options\n * @param {array<object>} column\n * @param {array<object>} contextmenuBodyOption\n * @param {object} cellSelectionRangeData\n * @param {array<object>} colgroups\n * @param {object} bodyIndicatorRowKeys\n * @param {boolean} enableHeaderContextmenu\n * @param {boolean} t locale\n * @return headerContextmenuOptions\n */\nexport function setBodyContextmenuOptions({\n    enableBodyContextmenu,\n    contextmenuBodyOption,\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n    bodyIndicatorRowKeys,\n    t,\n}) {\n    let result = [];\n    if (enableBodyContextmenu) {\n        let selectionRangeKeys = getSelectionRangeKeys({\n            cellSelectionRangeData,\n        });\n\n        let selectionRangeIndexes = getSelectionRangeIndexes({\n            cellSelectionRangeData,\n            colgroups,\n            allRowKeys,\n        });\n\n        const rowCount =\n            selectionRangeIndexes.endRowIndex -\n            selectionRangeIndexes.startRowIndex +\n            1;\n        const colCount =\n            selectionRangeIndexes.endColIndex -\n            selectionRangeIndexes.startColIndex +\n            1;\n\n        const { contextmenus, beforeShow } = contextmenuBodyOption;\n\n        const isWholeRowSelection = !isEmptyValue(\n            bodyIndicatorRowKeys.startRowKey,\n        );\n        if (isFunction(beforeShow)) {\n            beforeShow({\n                isWholeRowSelection,\n                selectionRangeKeys,\n                selectionRangeIndexes,\n            });\n        }\n\n        const bodyContextmenuOptionCollection =\n            getBodyContextmenuOptionCollection(t);\n\n        contextmenus.forEach((contextmenu) => {\n            const contentmenuCollectionItem =\n                bodyContextmenuOptionCollection.find(\n                    (x) => x.type === contextmenu.type,\n                );\n            if (contentmenuCollectionItem) {\n                let isContinue = true;\n\n                // remove row\n                if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.REMOVE_ROW\n                ) {\n                    contentmenuCollectionItem.label =\n                        contentmenuCollectionItem.label.replace(\"$1\", rowCount);\n                }\n                // empty row. 选中整行时支持\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.EMPTY_ROW\n                ) {\n                    if (isWholeRowSelection) {\n                        contentmenuCollectionItem.label =\n                            contentmenuCollectionItem.label.replace(\n                                \"$1\",\n                                rowCount,\n                            );\n                    } else {\n                        isContinue = false;\n                    }\n                }\n                // empty cell.没选中整行时支持\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.EMPTY_CELL\n                ) {\n                    isContinue = !isWholeRowSelection;\n                }\n                // remove column.没选中整行时支持\n                else if (\n                    contentmenuCollectionItem.type ===\n                    CONTEXTMENU_NODE_TYPES.REMOVE_COLUMN\n                ) {\n                    if (isWholeRowSelection) {\n                        isContinue = false;\n                    } else {\n                        contentmenuCollectionItem.label =\n                            contentmenuCollectionItem.label.replace(\n                                \"$1\",\n                                colCount,\n                            );\n                    }\n                }\n\n                if (isContinue) {\n                    result.push(contentmenuCollectionItem);\n                }\n            } else {\n                result.push(contextmenu);\n            }\n        });\n    }\n    return result;\n}\n\n// create empty row data\nexport function createEmptyRowData({ colgroups, rowKeyFieldName }) {\n    let rowData = {\n        [rowKeyFieldName]: getRandomId(),\n    };\n\n    colgroups.forEach((column) => {\n        if (column.field) {\n            rowData[column.field] = \"\";\n        }\n    });\n\n    return rowData;\n}\n\n//  empty row data\n// export function emptyRowData({ rowData, rowKeyFieldName }) {\n//     Object.keys(rowData).forEach((key) => {\n//         if (key !== rowKeyFieldName) {\n//             rowData[key] = \"\";\n//         }\n//     });\n\n//     return rowData;\n// }\n\n// is contextmenu panel clicked\nexport function isContextmenuPanelClicked(event) {\n    let result = false;\n    const contextmenuPanelEls = document.querySelectorAll(\n        \".ve-contextmenu-popper\",\n    );\n    [].forEach.call(contextmenuPanelEls, function (el) {\n        if (el.contains(event.target)) {\n            result = true;\n        }\n    });\n\n    return result;\n}\n\n/**\n * @getColKeysByHeaderColumn\n * @desc\n * @param {object} headerColumnItem\n * @param {any} colKey2\n * @return Array<colKeys>\n */\nexport function getColKeysByHeaderColumn({ headerColumnItem }) {\n    let result = null;\n\n    const { _keys } = headerColumnItem;\n\n    result = _keys.split(\"|\");\n    if (result.length > 1) {\n        result = result.slice(0, result.length - 1);\n    }\n\n    return result;\n}\n\n/**\n * @getColKeysByRangeColKeys\n * @desc  get col keys by range col keys\n * @param {any} colKey1\n * @param {any} colKey2\n * @return Array<colKeys>\n */\nexport function getColKeysByRangeColKeys({ colKey1, colKey2, colgroups }) {\n    let result = null;\n\n    const index1 = colgroups.findIndex((x) => x.key === colKey1);\n    const index2 = colgroups.findIndex((x) => x.key === colKey2);\n\n    if (index1 !== -1 && index1 !== -1) {\n        const beginIndex = index1 < index2 ? index1 : index2;\n        const endIndex = index1 < index2 ? index2 : index1;\n        result = colgroups.slice(beginIndex, endIndex + 1).map((x) => x.key);\n    }\n\n    return result;\n}\n\n/**\n * @getColKeysByFixedTypeWithinColKeys\n * @desc  get col keys by fixed type\n * @param {array<T>} colKeys\n * @param {string} fixedType - fixed type\n * @param {array<object>} colgroups\n * @return {array} colKeys\n */\nexport function getColKeysByFixedTypeWithinColKeys({\n    colKeys,\n    fixedType,\n    colgroups,\n}) {\n    let result = null;\n\n    if (Array.isArray(colKeys)) {\n        result = colgroups\n            .filter((x) => colKeys.indexOf(x.key) > -1 && x.fixed === fixedType)\n            .map((x) => x.key);\n    }\n\n    return result;\n}\n\n/**\n * @getColKeysByFixedType\n * @desc get col keys by fixed type\n * @param {string} fixedType - fixed type\n * @param {array<object>} colgroups\n * * @param {boolean} isExcludeOperationColumn\n * @return colKey\n */\nexport function getColKeysByFixedType({\n    fixedType,\n    colgroups,\n    isExcludeOperationColumn,\n}) {\n    let result = null;\n\n    result = colgroups\n        .filter((x) => {\n            const condition = x.fixed === fixedType;\n\n            // 排除操作列\n            if (isExcludeOperationColumn) {\n                return condition && !x.operationColumn;\n            }\n\n            return condition;\n        })\n        .map((x) => x.key);\n    return result;\n}\n\n/**\n * @getRowKeysByRangeRowKeys\n * @desc get row keys by range row keys\n * @param {any} topRowKey - top row key\n * @param {any} bottomRowKey - bottom row key\n * @return Array<colKeys>\n */\nexport function getRowKeysByRangeRowKeys({\n    topRowKey,\n    bottomRowKey,\n    allRowKeys,\n}) {\n    let result = null;\n\n    const beginIndex = allRowKeys.findIndex((x) => x === topRowKey);\n    const endIndex = allRowKeys.findIndex((x) => x === bottomRowKey);\n\n    if (beginIndex !== -1 && endIndex !== -1) {\n        result = allRowKeys.slice(beginIndex, endIndex + 1);\n    }\n\n    return result;\n}\n\n/**\n * @isCellInSelectionRange\n * @desc is cell in selection range\n * @param {object} cellData - cell data\n * @param {object} cellSelectionRangeData\n * @param {array<object>} colgroups\n * @param {array<object>} allRowKeys\n * @return {Array<colKeys>}\n */\nexport function isCellInSelectionRange({\n    cellData,\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    const colKeys = getColKeysByRangeColKeys({\n        colKey1: leftColKey,\n        colKey2: rightColKey,\n        colgroups,\n    });\n    const rowKeys = getRowKeysByRangeRowKeys({\n        topRowKey,\n        bottomRowKey,\n        allRowKeys,\n    });\n\n    if (\n        colKeys.indexOf(cellData.colKey) > -1 &&\n        rowKeys.indexOf(cellData.rowKey) > -1\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @isClearSelectionByBodyCellRightClick\n * @desc is clear selection by body cell click\n * @param {number} mouseEventClickType\n * @param {object} cellData - cell data\n * @param {object} cellSelectionRangeData\n * @param {array<object>} colgroups\n * @param {array<object>} allRowKeys\n * @return {bool}\n */\nexport function isClearSelectionByBodyCellRightClick({\n    mouseEventClickType,\n    cellData,\n    cellSelectionData,\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    let result = true;\n    if (mouseEventClickType === MOUSE_EVENT_CLICK_TYPE.RIGHT_MOUSE) {\n        const { normalEndCell } = cellSelectionData;\n        if (normalEndCell.rowIndex > -1) {\n            result = !isCellInSelectionRange({\n                cellData,\n                cellSelectionRangeData,\n                colgroups,\n                allRowKeys,\n            });\n        }\n    }\n    return result;\n}\n\n/**\n * @getSelectionRangeKeys\n * @desc get selection range keys\n * @param {object} cellSelectionRangeData\n * @return Array<colKeys>\n */\nexport function getSelectionRangeKeys({ cellSelectionRangeData }) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n    return {\n        startColKey: leftColKey,\n        endColKey: rightColKey,\n        startRowKey: topRowKey,\n        endRowKey: bottomRowKey,\n    };\n}\n\n/**\n * @getSelectionRangeIndexes\n * @desc get selection range indexes\n * @param {object} cellSelectionRangeData\n * @param {array<object>} colgroups\n * @param {array<object>} allRowKeys\n * @return Array<colKeys>\n */\nexport function getSelectionRangeIndexes({\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n    return {\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\n        startRowIndex: allRowKeys.indexOf(topRowKey),\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\n    };\n}\n\n/**\n * @getSelectionRangeData\n * @desc get selection range data\n * @param {object} cellSelectionRangeData\n * @param {string} resultType \"normal\": contains key/value ; \"flat\":only contains value\n * @param {array<object>} tableData\n * @param {array<object>} colgroups\n * @param {array<object>} allRowKeys\n * @return Array<colKeys>\n */\nexport function getSelectionRangeData({\n    cellSelectionRangeData,\n    resultType = \"normal\",\n    tableData,\n    colgroups,\n    allRowKeys,\n}) {\n    let result = null;\n\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    const startColIndex = colgroups.findIndex((x) => x.key === leftColKey);\n    const endColIndex = colgroups.findIndex((x) => x.key === rightColKey);\n    const startRowIndex = allRowKeys.indexOf(topRowKey);\n    const endRowIndex = allRowKeys.indexOf(bottomRowKey);\n\n    const fieldNames = colgroups\n        .slice(startColIndex, endColIndex + 1)\n        .map((x) => x.field);\n\n    if (resultType === \"normal\") {\n        result = tableData\n            .slice(startRowIndex, endRowIndex + 1)\n            .map((rowData) => {\n                let newRow = {};\n\n                fieldNames.forEach((fieldName) => {\n                    newRow[fieldName] = rowData[fieldName] ?? \"\";\n                });\n\n                return newRow;\n            });\n    } else {\n        result = tableData\n            .slice(startRowIndex, endRowIndex + 1)\n            .map((rowData) => {\n                let newRow = [];\n\n                fieldNames.forEach((fieldName) => {\n                    newRow.push(rowData[fieldName] ?? \"\");\n                });\n\n                return newRow;\n            });\n    }\n\n    return result;\n}\n\n/**\n * @isExistFixedColKey\n * @desc is exist given fixed col key\n * @param {string} fixedType - fixed type\n * @param {array<T>} colKeys\n * @param {array<object>} colgroups\n * @return bool\n */\nexport function isExistGivenFixedColKey({ fixedType, colKeys, colgroups }) {\n    let result = false;\n    if (Array.isArray(colKeys)) {\n        result = colgroups.some((x) => {\n            return colKeys.indexOf(x.key) > -1 && x.fixed === fixedType;\n        });\n    }\n    return result;\n}\n\n/**\n * @isExistNotFixedColKey\n * @desc is exist not fixed col key\n * @param {array<T>} colKeys\n * @param {array<object>} colgroups\n * @return bool\n */\nexport function isExistNotFixedColKey({ colKeys, colgroups }) {\n    let result = false;\n    if (Array.isArray(colKeys)) {\n        result = colgroups.filter(\n            (x) => !x.fixed && colKeys.indexOf(x.key) > -1,\n        ).length;\n    }\n    return result;\n}\n\n/**\n * @getLeftmostOrRightmostColKey\n * @desc get leftmost or rightmost column key\n * @param {string} type\n * @param {array<object>} colgroups\n * @param {array<any>} colKeys\n * @return colKey\n */\nfunction getLeftmostOrRightmostColKey({ type, colgroups, colKeys }) {\n    let result = null;\n\n    if (Array.isArray(colKeys) && colKeys.length) {\n        let mostObj = {\n            colKey: null,\n            colIndex: null,\n        };\n        colKeys.forEach((colKey) => {\n            const colIndex = colgroups.findIndex((x) => x.key === colKey);\n\n            if (colIndex === -1) {\n                console.error(\n                    `getLeftmostOrRightmostColKey error:: can't find colKey:${colKey}`,\n                );\n                return false;\n            }\n\n            if (isEmptyValue(mostObj.colKey)) {\n                mostObj = {\n                    colKey,\n                    colIndex: colIndex,\n                };\n            } else {\n                if (type === \"leftmost\") {\n                    if (colIndex < mostObj.colIndex) {\n                        mostObj = {\n                            colKey,\n                            colIndex: colIndex,\n                        };\n                    }\n                } else if (type === \"rightmost\") {\n                    if (colIndex > mostObj.colIndex) {\n                        mostObj = {\n                            colKey,\n                            colIndex: colIndex,\n                        };\n                    }\n                }\n            }\n        });\n\n        result = mostObj.colKey;\n    }\n\n    return result;\n}\n\n/**\n * @getLeftmostColKey\n * @desc get leftmost column key\n * @param {array<object>} colgroups\n * @param {array<any>} colKeys\n * @return colKey\n */\nexport function getLeftmostColKey({ colgroups, colKeys }) {\n    return getLeftmostOrRightmostColKey({\n        type: \"leftmost\",\n        colgroups,\n        colKeys,\n    });\n}\n\n/**\n * @getRightmostColKey\n * @desc get rightmost column key\n * @param {array<object>} colgroups\n * @param {array<any>} colKeys\n * @return colKey\n */\nexport function getRightmostColKey({ colgroups, colKeys }) {\n    return getLeftmostOrRightmostColKey({\n        type: \"rightmost\",\n        colgroups,\n        colKeys,\n    });\n}\n\n/**\n * @getPreviewColKey\n * @desc get preview column key\n * @param {array<object>} colgroups\n * @param {any} currentColKey\n * @return colKey\n */\nexport function getPreviewColKey({ colgroups, currentColKey }) {\n    let result = null;\n\n    if (!isEmptyValue(currentColKey)) {\n        const index = colgroups.findIndex((x) => x.key === currentColKey);\n        if (index === 0) {\n            result = currentColKey;\n        } else if (index > 0) {\n            result = colgroups[index - 1].key;\n        }\n    }\n    return result;\n}\n\n/**\n * @getNextColKey\n * @desc get next column key\n * @param {array<object>} colgroups\n * @param {any} currentColKey\n * @return colKey\n */\nexport function getNextColKey({ colgroups, currentColKey }) {\n    let result = null;\n\n    if (!isEmptyValue(currentColKey)) {\n        const index = colgroups.findIndex((x) => x.key === currentColKey);\n        if (index === colgroups.length - 1) {\n            result = currentColKey;\n        } else if (index < colgroups.length - 1) {\n            result = colgroups[index + 1].key;\n        }\n    }\n    return result;\n}\n\n/***\n * @cellAutofill\n * @desc cell auto fill\n * @param {bool} isReplaceData\n * @param {array<object>} tableData\n * @param {array<any>} allRowKeys\n * @param {array<object>} colgroups\n * @param {string} direction\n * @param {string} rowKeyFieldName\n * @param {object} nextCurrentCell next current cell\n * @param {object} nextNormalEndCell next normal end cell\n * @return autofillChangeDatas\n */\nexport function cellAutofill({\n    isReplaceData,\n    tableData,\n    allRowKeys,\n    colgroups,\n    direction,\n    rowKeyFieldName,\n    cellSelectionRangeData,\n    nextCurrentCell,\n    nextNormalEndCell,\n}) {\n    let cellSelectionTableData = [];\n\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    // source selection range\n    let sourceSelectionRangeIndexes = {\n        startRowIndex: -1,\n        endRowIndex: -1,\n        startColIndex: -1,\n        endColIndex: -1,\n    };\n    // target selection range\n    let targetSelectionRangeIndexes = {\n        startRowIndex: -1,\n        endRowIndex: -1,\n        startColIndex: -1,\n        endColIndex: -1,\n    };\n\n    sourceSelectionRangeIndexes.startRowIndex = allRowKeys.indexOf(topRowKey);\n    sourceSelectionRangeIndexes.endRowIndex = allRowKeys.indexOf(bottomRowKey);\n    sourceSelectionRangeIndexes.startColIndex = colgroups.findIndex(\n        (x) => x.key === leftColKey,\n    );\n    sourceSelectionRangeIndexes.endColIndex = colgroups.findIndex(\n        (x) => x.key === rightColKey,\n    );\n\n    cellSelectionTableData = tableData.slice(\n        sourceSelectionRangeIndexes.startRowIndex,\n        sourceSelectionRangeIndexes.endRowIndex + 1,\n    );\n\n    if (direction === AUTOFILLING_DIRECTION.UP) {\n        //\n        targetSelectionRangeIndexes.startRowIndex = allRowKeys.indexOf(\n            nextCurrentCell.rowKey,\n        );\n        targetSelectionRangeIndexes.endRowIndex =\n            sourceSelectionRangeIndexes.startRowIndex - 1;\n        targetSelectionRangeIndexes.startColIndex =\n            sourceSelectionRangeIndexes.startColIndex;\n        targetSelectionRangeIndexes.endColIndex =\n            sourceSelectionRangeIndexes.endColIndex;\n\n        if (isReplaceData) {\n            let cellSelectionTableDataRowIndex =\n                cellSelectionTableData.length - 1;\n            for (\n                let rowIndex = targetSelectionRangeIndexes.endRowIndex;\n                rowIndex >= targetSelectionRangeIndexes.startRowIndex;\n                rowIndex--\n            ) {\n                for (\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\n                    colIndex++\n                ) {\n                    const fieldName = colgroups[colIndex].field;\n\n                    // repeat autofill cell selection data\n                    if (cellSelectionTableDataRowIndex < 0) {\n                        cellSelectionTableDataRowIndex =\n                            cellSelectionTableData.length - 1;\n                    }\n                    tableData[rowIndex][fieldName] =\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\n                            fieldName\n                        ];\n                }\n\n                --cellSelectionTableDataRowIndex;\n            }\n        }\n    } else if (direction === AUTOFILLING_DIRECTION.DOWN) {\n        //\n        targetSelectionRangeIndexes.startRowIndex =\n            sourceSelectionRangeIndexes.endRowIndex + 1;\n        targetSelectionRangeIndexes.endRowIndex = allRowKeys.indexOf(\n            nextNormalEndCell.rowKey,\n        );\n        targetSelectionRangeIndexes.startColIndex =\n            sourceSelectionRangeIndexes.startColIndex;\n        targetSelectionRangeIndexes.endColIndex =\n            sourceSelectionRangeIndexes.endColIndex;\n\n        if (isReplaceData) {\n            let cellSelectionTableDataRowIndex = 0;\n            for (\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\n                rowIndex++\n            ) {\n                for (\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\n                    colIndex++\n                ) {\n                    const fieldName = colgroups[colIndex].field;\n\n                    // repeat autofill cell selection data\n                    if (\n                        cellSelectionTableDataRowIndex >\n                        cellSelectionTableData.length - 1\n                    ) {\n                        cellSelectionTableDataRowIndex = 0;\n                    }\n                    tableData[rowIndex][fieldName] =\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\n                            fieldName\n                        ];\n                }\n\n                ++cellSelectionTableDataRowIndex;\n            }\n        }\n    } else if (direction === AUTOFILLING_DIRECTION.LEFT) {\n        //\n        targetSelectionRangeIndexes.startRowIndex =\n            sourceSelectionRangeIndexes.startRowIndex;\n        targetSelectionRangeIndexes.endRowIndex =\n            sourceSelectionRangeIndexes.endRowIndex;\n        targetSelectionRangeIndexes.startColIndex = colgroups.findIndex(\n            (x) => x.key === nextCurrentCell.colKey,\n        );\n        targetSelectionRangeIndexes.endColIndex =\n            sourceSelectionRangeIndexes.startColIndex - 1;\n\n        if (isReplaceData) {\n            let cellSelectionTableDataRowIndex = 0;\n            for (\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\n                rowIndex++\n            ) {\n                let cellSelectionTableDataColIndex =\n                    sourceSelectionRangeIndexes.endColIndex;\n\n                for (\n                    let colIndex = targetSelectionRangeIndexes.endColIndex;\n                    colIndex >= targetSelectionRangeIndexes.startColIndex;\n                    colIndex--\n                ) {\n                    const fieldName = colgroups[colIndex].field;\n\n                    // repeat autofill cell selection data\n                    if (\n                        cellSelectionTableDataColIndex <\n                        sourceSelectionRangeIndexes.startColIndex\n                    ) {\n                        cellSelectionTableDataColIndex =\n                            sourceSelectionRangeIndexes.endColIndex;\n                    }\n\n                    tableData[rowIndex][fieldName] =\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\n                            colgroups[cellSelectionTableDataColIndex].field\n                        ];\n                    --cellSelectionTableDataColIndex;\n                }\n                ++cellSelectionTableDataRowIndex;\n            }\n        }\n    } else if (direction === AUTOFILLING_DIRECTION.RIGHT) {\n        //\n        targetSelectionRangeIndexes.startRowIndex =\n            sourceSelectionRangeIndexes.startRowIndex;\n        targetSelectionRangeIndexes.endRowIndex =\n            sourceSelectionRangeIndexes.endRowIndex;\n        targetSelectionRangeIndexes.startColIndex =\n            sourceSelectionRangeIndexes.endColIndex + 1;\n        targetSelectionRangeIndexes.endColIndex = colgroups.findIndex(\n            (x) => x.key === nextNormalEndCell.colKey,\n        );\n\n        if (isReplaceData) {\n            let cellSelectionTableDataRowIndex = 0;\n            for (\n                let rowIndex = targetSelectionRangeIndexes.startRowIndex;\n                rowIndex <= targetSelectionRangeIndexes.endRowIndex;\n                rowIndex++\n            ) {\n                let cellSelectionTableDataColIndex =\n                    sourceSelectionRangeIndexes.startColIndex;\n\n                for (\n                    let colIndex = targetSelectionRangeIndexes.startColIndex;\n                    colIndex <= targetSelectionRangeIndexes.endColIndex;\n                    colIndex++\n                ) {\n                    const fieldName = colgroups[colIndex].field;\n\n                    // repeat autofill cell selection data\n                    if (\n                        cellSelectionTableDataColIndex >\n                        sourceSelectionRangeIndexes.startColIndex +\n                            (sourceSelectionRangeIndexes.endColIndex -\n                                sourceSelectionRangeIndexes.startColIndex)\n                    ) {\n                        cellSelectionTableDataColIndex =\n                            sourceSelectionRangeIndexes.startColIndex;\n                    }\n\n                    tableData[rowIndex][fieldName] =\n                        cellSelectionTableData[cellSelectionTableDataRowIndex][\n                            colgroups[cellSelectionTableDataColIndex].field\n                        ];\n                    ++cellSelectionTableDataColIndex;\n                }\n                ++cellSelectionTableDataRowIndex;\n            }\n        }\n    }\n\n    let response = {\n        direction,\n        sourceSelectionRangeIndexes,\n        targetSelectionRangeIndexes,\n        sourceSelectionData: [],\n        targetSelectionData: [],\n    };\n\n    const sourceFieldNames = colgroups\n        .slice(\n            sourceSelectionRangeIndexes.startColIndex,\n            sourceSelectionRangeIndexes.endColIndex + 1,\n        )\n        .map((x) => x.field);\n    response.sourceSelectionData = tableData\n        .slice(\n            sourceSelectionRangeIndexes.startRowIndex,\n            sourceSelectionRangeIndexes.endRowIndex + 1,\n        )\n        .map((rowData) => {\n            let newData = {\n                [rowKeyFieldName]: rowData[rowKeyFieldName],\n            };\n            sourceFieldNames.forEach((fieldName) => {\n                newData[fieldName] = rowData[fieldName];\n            });\n            return newData;\n        });\n\n    const targetFieldNames = colgroups\n        .slice(\n            targetSelectionRangeIndexes.startColIndex,\n            targetSelectionRangeIndexes.endColIndex + 1,\n        )\n        .map((x) => x.field);\n    response.targetSelectionData = tableData\n        .slice(\n            targetSelectionRangeIndexes.startRowIndex,\n            targetSelectionRangeIndexes.endRowIndex + 1,\n        )\n        .map((rowData) => {\n            let newData = {\n                [rowKeyFieldName]: rowData[rowKeyFieldName],\n            };\n            targetFieldNames.forEach((fieldName) => {\n                newData[fieldName] = rowData[fieldName];\n            });\n            return newData;\n        });\n\n    return response;\n}\n\n/***\n * @setColumnFixed\n * @desc set column fixed\n * @param {array<object>} cloneColumns\n * @param {object} cellSelectionRangeData\n * @param {string} fixedType COLUMN_FIXED_TYPE\n * @param {array<object>} colgroups\n * @param {bool} enableColumnResize\n * @return cloneColumns\n */\nexport function setColumnFixed({\n    cloneColumns,\n    cellSelectionRangeData,\n    fixedType,\n    colgroups,\n    enableColumnResize,\n}) {\n    let result = cloneColumns;\n\n    const { leftColKey, rightColKey } = cellSelectionRangeData;\n\n    let colKey;\n\n    if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\n        colKey = rightColKey;\n    } else if (COLUMN_FIXED_TYPE.RIGHT === fixedType) {\n        colKey = leftColKey;\n    }\n\n    // find col index from cloneColumns\n    const fixedColIndex = cloneColumns.findIndex((colItem) => {\n        if (colItem._level === 1 && colItem.key === colKey) {\n            return true;\n        } else {\n            const colKeys = getColKeysByHeaderColumn({\n                headerColumnItem: colItem,\n            });\n            if (colKeys.indexOf(colKey) > -1) {\n                return true;\n            }\n        }\n    });\n\n    if (fixedColIndex > -1) {\n        // 不允许改变原有固定列方向\n        const oldFixedType = cloneColumns[fixedColIndex].fixed;\n        if (!isEmptyValue(oldFixedType) && oldFixedType !== fixedType) {\n            return false;\n        }\n\n        result = cloneColumns.map((colItem, index) => {\n            // 清除所有固定\n            if (colItem.fixed === fixedType) {\n                colItem.fixed = \"\";\n            }\n\n            // 允许列自适应 && 不是多列表头\n            if (\n                enableColumnResize &&\n                !(Array.isArray(colItem.children) && colItem.children.length)\n            ) {\n                const _colItem = colgroups.find(\n                    (x) => x.key === colItem.key && !isEmptyValue(x.key),\n                );\n                if (_colItem) {\n                    colItem.width = _colItem._columnResizeWidth;\n                }\n            }\n\n            if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\n                // 不允许左冻结最后一列\n                if (index <= fixedColIndex && index < cloneColumns.length) {\n                    colItem.fixed = fixedType;\n                }\n            } else {\n                // 不允许右冻结第一列\n                if (index >= fixedColIndex && index > 0) {\n                    colItem.fixed = fixedType;\n                }\n            }\n            return colItem;\n        });\n    }\n\n    return result;\n}\n\n/***\n * @cancelColumnFixed\n * @desc cancel column fixed\n * @param {array<object>} cloneColumns\n * @param {array<object>} colgroups\n * @param {string} fixedType COLUMN_FIXED_TYPE\n * @param {bool} enableColumnResize\n * @return cloneColumns\n */\nexport function cancelColumnFixed({\n    cloneColumns,\n    colgroups,\n    fixedType,\n    enableColumnResize,\n}) {\n    return cloneColumns.map((colItem) => {\n        // 允许列自适应 && 不是多列表头\n        if (\n            enableColumnResize &&\n            !(Array.isArray(colItem.children) && colItem.children.length)\n        ) {\n            const _colItem = colgroups.find(\n                (x) => x.key === colItem.key && !isEmptyValue(x.key),\n            );\n            if (_colItem) {\n                colItem.width = _colItem._columnResizeWidth;\n            }\n        }\n\n        if (COLUMN_FIXED_TYPE.LEFT === fixedType) {\n            if (\n                colItem.fixed === fixedType &&\n                !isOperationColumn(colItem.key, colgroups)\n            ) {\n                colItem.fixed = \"\";\n            }\n        } else {\n            if (colItem.fixed === fixedType) {\n                colItem.fixed = \"\";\n            }\n        }\n        return colItem;\n    });\n}\n","const regUniversalNewLine = /^(\\r\\n|\\n\\r|\\r|\\n)/;\nconst regNextCellNoQuotes = /^[^\\t\\r\\n]+/;\nconst regNextEmptyCell = /^\\t/;\n\n/**\n * @decodeSpreadsheetStr\n * @desc Decode spreadsheet string into array.  refer from http://github.com/warpech/sheetclip/\n * @param {string} str The string to parse.\n * @returns {array}\n */\nexport function decodeSpreadsheetStr(str) {\n    let arr = [[\"\"]];\n\n    if (str.length === 0) {\n        return arr;\n    }\n\n    let column = 0;\n    let row = 0;\n    let lastLength;\n\n    while (str.length > 0) {\n        if (lastLength === str.length) {\n            // In the case If in last cycle we didn't match anything, we have to leave the infinite loop\n            break;\n        }\n\n        lastLength = str.length;\n\n        if (str.match(regNextEmptyCell)) {\n            str = str.replace(regNextEmptyCell, \"\");\n\n            column += 1;\n            arr[row][column] = \"\";\n        } else if (str.match(regUniversalNewLine)) {\n            str = str.replace(regUniversalNewLine, \"\");\n            column = 0;\n            row += 1;\n\n            arr[row] = [\"\"];\n        } else {\n            let nextCell = \"\";\n\n            if (str.startsWith('\"')) {\n                let quoteNo = 0;\n                let isStillCell = true;\n\n                while (isStillCell) {\n                    const nextChar = str.slice(0, 1);\n\n                    if (nextChar === '\"') {\n                        quoteNo += 1;\n                    }\n\n                    nextCell += nextChar;\n\n                    str = str.slice(1);\n\n                    if (\n                        str.length === 0 ||\n                        (str.match(/^[\\t\\r\\n]/) && quoteNo % 2 === 0)\n                    ) {\n                        isStillCell = false;\n                    }\n                }\n\n                nextCell = nextCell\n                    .replace(/^\"/, \"\")\n                    .replace(/\"$/, \"\")\n                    .replace(/[\"]*/g, (match) =>\n                        new Array(Math.floor(match.length / 2))\n                            .fill('\"')\n                            .join(\"\"),\n                    );\n            } else {\n                const matchedText = str.match(regNextCellNoQuotes);\n\n                nextCell = matchedText ? matchedText[0] : \"\";\n                str = str.slice(nextCell.length);\n            }\n\n            arr[row][column] = nextCell;\n        }\n    }\n    // 去除 excel 最后一个多余的换行数据\n    if (Array.isArray(arr) && arr.length > 1) {\n        if (arr[arr.length - 1].length === 1 && arr[arr.length - 1][0] === \"\") {\n            arr = arr.slice(0, arr.length - 1);\n        }\n    }\n\n    return arr;\n}\n\n/**\n * @decodeSpreadsheetStr\n * @desc encode array to spreadsheet string.  refer from http://github.com/warpech/sheetclip/\n * @param {array} str The string to parse.\n * @returns {string}\n */\nexport function encodeToSpreadsheetStr(arr) {\n    let r;\n    let rLen;\n    let c;\n    let cLen;\n    let str = \"\";\n    let val;\n\n    for (r = 0, rLen = arr.length; r < rLen; r += 1) {\n        cLen = arr[r].length;\n\n        for (c = 0; c < cLen; c += 1) {\n            if (c > 0) {\n                str += \"\\t\";\n            }\n            val = arr[r][c];\n\n            if (typeof val === \"string\") {\n                if (val.indexOf(\"\\n\") > -1) {\n                    str += `\"${val.replace(/\"/g, '\"\"')}\"`;\n                } else {\n                    str += val;\n                }\n            } else if (val === null || val === void 0) {\n                // void 0 resolves to undefined\n                str += \"\";\n            } else {\n                str += val;\n            }\n        }\n\n        if (r !== rLen - 1) {\n            str += \"\\n\";\n        }\n    }\n\n    return str;\n}\n\n/**\n * @onBeforeCopy\n * @desc on before copy\n * @param {Event} event\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\n */\nexport function onBeforeCopy({\n    cellSelectionRangeData,\n    selectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    const selectionRangeIndexes = {\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\n        startRowIndex: allRowKeys.indexOf(topRowKey),\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\n    };\n\n    const selectionRangeKeys = {\n        startColKey: leftColKey,\n        endColKey: rightColKey,\n        startRowKey: topRowKey,\n        endRowKey: bottomRowKey,\n    };\n\n    const response = {\n        selectionRangeIndexes,\n        selectionRangeKeys,\n        data: selectionRangeData,\n    };\n\n    return response;\n}\n\n/**\n * @onAfterCopy\n * @desc on after copy\n * @param {Event} event\n * @return\n */\nexport function onAfterCopy({ event, selectionRangeData }) {\n    const spreadsheetStr = encodeToSpreadsheetStr(selectionRangeData);\n\n    if (event.clipboardData) {\n        event.clipboardData.setData(\"text/plain\", spreadsheetStr);\n    }\n    // IE browser\n    else if (window.clipboardData) {\n        window.clipboardData.setData(\"Text\", spreadsheetStr);\n    }\n}\n\n/**\n * @onBeforePaste\n * @desc on before paste\n * @param {Event} event\n * @return\n */\nexport function onBeforePaste({\n    event,\n    cellSelectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    let pastedData;\n\n    if (event.clipboardData) {\n        pastedData = event.clipboardData.getData(\"text/plain\");\n    }\n    // IE browser\n    else if (window.clipboardData) {\n        pastedData = window.clipboardData.getData(\"Text\");\n    }\n\n    if (typeof pastedData !== \"string\") {\n        return null;\n    }\n\n    let decodePasteData = decodeSpreadsheetStr(pastedData);\n\n    const startColIndex = colgroups.findIndex(\n        (x) => x.key === cellSelectionRangeData.leftColKey,\n    );\n    const endColIndex = Math.min(\n        startColIndex + decodePasteData[0].length - 1,\n        colgroups.length - 1,\n    );\n    const startRowIndex = allRowKeys.indexOf(cellSelectionRangeData.topRowKey);\n    const endRowIndex = Math.min(\n        startRowIndex + decodePasteData.length - 1,\n        allRowKeys.length - 1,\n    );\n\n    let response = {\n        selectionRangeIndexes: {\n            startColIndex,\n            endColIndex,\n            startRowIndex,\n            endRowIndex,\n        },\n        selectionRangeKeys: {\n            startColKey: colgroups[startColIndex].key,\n            endColKey: colgroups[endColIndex].key,\n            startRowKey: allRowKeys[startRowIndex],\n            endRowKey: allRowKeys[endRowIndex],\n        },\n        data: [],\n    };\n\n    const sourceFieldNames = colgroups\n        .slice(startColIndex, endColIndex + 1)\n        .map((x) => x.field);\n\n    response.data = decodePasteData\n        .slice(0, endRowIndex - startRowIndex + 1)\n        .map((rowData) => {\n            let newRow = {};\n\n            rowData.forEach((cellData, cellIndex) => {\n                if (cellIndex <= endColIndex - startColIndex) {\n                    newRow[sourceFieldNames[cellIndex]] = cellData;\n                }\n            });\n            return newRow;\n        });\n\n    return response;\n}\n\n/**\n * @onAfterPaste\n * @desc on after paste\n * @param {Event} event\n * @return\n */\nexport function onAfterPaste({ tableData, beforePasteResponse }) {\n    const { data: pasteData, selectionRangeIndexes } = beforePasteResponse;\n\n    pasteData.forEach((rowData, rowIndex) => {\n        Object.assign(\n            tableData[selectionRangeIndexes.startRowIndex + rowIndex],\n            rowData,\n        );\n    });\n}\n\n/**\n * @onBeforeCut\n * @desc on before cut\n * @param {Event} event\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\n */\nexport function onBeforeCut({\n    cellSelectionRangeData,\n    selectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    const selectionRangeIndexes = {\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\n        startRowIndex: allRowKeys.indexOf(topRowKey),\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\n    };\n\n    const selectionRangeKeys = {\n        startColKey: leftColKey,\n        endColKey: rightColKey,\n        startRowKey: topRowKey,\n        endRowKey: bottomRowKey,\n    };\n\n    const response = {\n        selectionRangeIndexes,\n        selectionRangeKeys,\n        data: selectionRangeData,\n    };\n\n    return response;\n}\n\n/**\n * @onAfterCut\n * @desc on after cut\n * @param {Event} event\n * @return\n */\nexport function onAfterCut({\n    event,\n    tableData,\n    colgroups,\n    selectionRangeData,\n    selectionRangeIndexes,\n}) {\n    const spreadsheetStr = encodeToSpreadsheetStr(selectionRangeData);\n\n    const { endColIndex, endRowIndex, startColIndex, startRowIndex } =\n        selectionRangeIndexes;\n\n    // 移除制定的表格数据\n    const fieldNames = colgroups\n        .slice(startColIndex, endColIndex + 1)\n        .map((x) => x.field);\n\n    tableData.forEach((rowData, rowIndex) => {\n        if (rowIndex >= startRowIndex && rowIndex <= endRowIndex) {\n            fieldNames.forEach((fieldName) => {\n                rowData[fieldName] = \"\";\n            });\n        }\n    });\n\n    if (event.clipboardData) {\n        event.clipboardData.setData(\"text/plain\", spreadsheetStr);\n    }\n    // IE browser\n    else if (window.clipboardData) {\n        window.clipboardData.setData(\"Text\", spreadsheetStr);\n    }\n}\n\n/**\n * @onBeforeDelete\n * @desc on before delete\n * @param {Event} event\n * @return {selectionRangeIndexes,selectionRangeKeys,data}\n */\nexport function onBeforeDelete({\n    cellSelectionRangeData,\n    selectionRangeData,\n    colgroups,\n    allRowKeys,\n}) {\n    const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n        cellSelectionRangeData;\n\n    const selectionRangeIndexes = {\n        startColIndex: colgroups.findIndex((x) => x.key === leftColKey),\n        endColIndex: colgroups.findIndex((x) => x.key === rightColKey),\n        startRowIndex: allRowKeys.indexOf(topRowKey),\n        endRowIndex: allRowKeys.indexOf(bottomRowKey),\n    };\n\n    const selectionRangeKeys = {\n        startColKey: leftColKey,\n        endColKey: rightColKey,\n        startRowKey: topRowKey,\n        endRowKey: bottomRowKey,\n    };\n\n    const response = {\n        selectionRangeIndexes,\n        selectionRangeKeys,\n        data: selectionRangeData,\n    };\n\n    return response;\n}\n\n/**\n * @onAfterDelete\n * @desc on after delete\n * @param {Event} event\n * @return\n */\nexport function onAfterDelete({ tableData, colgroups, selectionRangeIndexes }) {\n    const { endColIndex, endRowIndex, startColIndex, startRowIndex } =\n        selectionRangeIndexes;\n\n    // 移除制定的表格数据\n    const fieldNames = colgroups\n        .slice(startColIndex, endColIndex + 1)\n        .map((x) => x.field);\n\n    tableData.forEach((rowData, rowIndex) => {\n        if (rowIndex >= startRowIndex && rowIndex <= endRowIndex) {\n            fieldNames.forEach((fieldName) => {\n                rowData[fieldName] = \"\";\n            });\n        }\n    });\n}\n","/*\nfork from:\nhttps://github.com/bvaughn/react-virtualized/blob/HEAD/source/utils/animationFrame.js\n*/\n\n// Properly handle server-side rendering.\nlet win;\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof self !== \"undefined\") {\n    win = self;\n} else {\n    win = {};\n}\n\n// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nconst request =\n    win.requestAnimationFrame ||\n    win.webkitRequestAnimationFrame ||\n    win.mozRequestAnimationFrame ||\n    win.oRequestAnimationFrame ||\n    win.msRequestAnimationFrame ||\n    function (callback) {\n        return win.setTimeout(callback, 1000 / 60);\n    };\n\nconst cancel =\n    win.cancelAnimationFrame ||\n    win.webkitCancelAnimationFrame ||\n    win.mozCancelAnimationFrame ||\n    win.oCancelAnimationFrame ||\n    win.msCancelAnimationFrame ||\n    function (id) {\n        win.clearTimeout(id);\n    };\n\nexport const raf = request;\nexport const caf = cancel;\n","/*\n * @getScrollbarWidth\n * @desc get scroll bar width\n * @param\n * @return\n */\nexport function getScrollbarWidth() {\n    const outer = document.createElement(\"div\");\n    outer.className = \"ve-scrollbar-wrap\";\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"100px\";\n    outer.style.position = \"absolute\";\n    outer.style.top = \"-9999px\";\n    document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = \"scroll\";\n\n    const inner = document.createElement(\"div\");\n    inner.style.width = \"100%\";\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n}\n","/*\nfork from:\nhttps://github.com/bvaughn/react-virtualized/blob/HEAD/source/utils/requestAnimationTimeout.js\n*/\n\nimport { caf, raf } from \"./animation-frame\";\n\nexport const cancelAnimationTimeout = (frame) => caf(frame.id);\n\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\nexport const requestAnimationTimeout = (callback, delay) => {\n    let start;\n    // wait for end of processing current event handler, because event handler may be long\n    Promise.resolve().then(() => {\n        start = Date.now();\n    });\n\n    const timeout = () => {\n        if (Date.now() - start >= delay) {\n            callback.call();\n        } else {\n            frame.id = raf(timeout);\n        }\n    };\n\n    const frame = {\n        id: raf(timeout),\n    };\n\n    return frame;\n};\n","// is input key code\nexport function isInputKeyCode(event) {\n    let result = false;\n\n    const { keyCode, altKey, ctrlKey, shiftKey } = event;\n\n    // exclude keys\n    if (altKey || ctrlKey || shiftKey) {\n        return result;\n    }\n\n    // Digit0 to Digit9\n    if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)) {\n        result = true;\n    }\n    // A to Z\n    else if (keyCode >= 65 && keyCode <= 90) {\n        result = true;\n    } else if (\n        [186, 187, 188, 189, 190, 191, 192, 219, 220, 221, 222].indexOf(\n            keyCode,\n        ) > -1\n    ) {\n        /*\n    Semicolon:186\n    Equal(\"=\"):187\n    Comma (\",\"):188\n    Minus(\"-\"):189\n    Period(\".\"):190\n    Slash(\"/\"):191\n    Backquote(\"`\"):192\n    Open square bracket (\"[\"):219\n    Backslash(\"\\\"):220\n    Close square bracket (\"]\"):221\n    Quote(\"'\"):222\n    */\n        result = true;\n    }\n    // Support non-English languages. Chinese, Japanese, French, etc.\n    else if (keyCode == 229) {\n        result = true;\n    }\n\n    return result;\n}\n\n// is direction key code\nexport function isDirectionKeyCode(keyCode) {\n    return [37, 38, 39, 40].indexOf(keyCode) > -1;\n}\n\n// is single key\n// export function isSingleKey() {}\n","/* \nhook system\n\n*/\nexport default class Hooks {\n    constructor() {\n        // ...\n\n        this.hooks = {\n            /* \n            table-scroll1:[\n                function(){},\n                function(){}\n            ],\n            table-scroll2:[\n                function(){},\n                function(){}\n            ]\n            \n            */\n        };\n    }\n\n    /**\n     * Add listener to plugin hooks system.\n     *\n     * @param {string} hookName The hook name.\n     * @param {Function} callback The listener function to add.\n     */\n    addHook(hookName, callback) {\n        let hooks;\n\n        if (!this.hooks[hookName]) {\n            this.hooks[hookName] = [];\n        }\n\n        hooks = this.hooks[hookName];\n\n        // exclude repeat hook\n        let isRepeat = false;\n        for (let i = 0; i < hooks.length; i++) {\n            if (hooks[i] === callback) {\n                isRepeat = true;\n                break;\n            }\n        }\n\n        if (isRepeat) {\n            console.warn(`Repeat hook name:${hookName}`);\n        } else {\n            hooks.push(callback);\n        }\n    }\n\n    /**\n     * Trigger hook.\n     *\n     * @param {string} hookName The hook name.\n     * @param {Argument} args\n     */\n    triggerHook(hookName) {\n        const hooks = this.hooks[hookName];\n\n        if (hooks && hooks.length) {\n            const args = Array.prototype.slice.call(arguments);\n\n            hooks.forEach((hook) => {\n                // exclude hookName param\n                hook.apply(null, args.slice(1));\n            });\n        }\n        // else {\n        //     console.warn(`Can't find hook name:${hookName}`);\n        // }\n    }\n}\n","import { MOUSE_EVENT_CLICK_TYPE } from \"./constant\";\n\n/* \nget mouse event key type by mousedown\\mouseup\\... event\n*/\nexport function getMouseEventClickType(event) {\n    let result = null;\n\n    if (!event) {\n        return result;\n    }\n\n    const button =\n        typeof event.which != \"undefined\" ? event.which : event.button;\n    if (button == 1) {\n        result = MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE;\n    } else if (button == 2) {\n        result = MOUSE_EVENT_CLICK_TYPE.MIDDLE_MOUSE;\n    } else if (button == 3) {\n        result = MOUSE_EVENT_CLICK_TYPE.RIGHT_MOUSE;\n    }\n\n    return result;\n}\n","/*\nfork from:\nhttps://github.com/ElemeFE/element\n*/\nfunction broadcast(componentName, eventName, params) {\n    this.$children.forEach((child) => {\n        var name = child.$options.name;\n\n        if (name === componentName) {\n            child.$emit.apply(child, [eventName].concat(params));\n        } else {\n            broadcast.apply(child, [componentName, eventName].concat([params]));\n        }\n    });\n}\nexport default {\n    methods: {\n        dispatch(componentName, eventName, params) {\n            var parent = this.$parent || this.$root;\n            var name = parent.$options.name;\n\n            while (parent && (!name || name !== componentName)) {\n                parent = parent.$parent;\n\n                if (parent) {\n                    name = parent.$options.name;\n                }\n            }\n            if (parent) {\n                parent.$emit.apply(parent, [eventName].concat(params));\n            } else {\n                console.error(`${componentName} was not found.`);\n            }\n        },\n        broadcast(componentName, eventName, params) {\n            broadcast.call(this, componentName, eventName, params);\n        },\n    },\n};\n","import { getValByUnit } from \"../../../src/utils/index.js\";\nimport { COMPS_NAME } from \"../util/constant\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_COLGROUP,\n    props: {\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        enableColumnResize: {\n            type: Boolean,\n            required: true,\n        },\n    },\n    methods: {\n        getValByUnit(item) {\n            const { enableColumnResize } = this;\n\n            let width;\n            // 开启 column resize\n            if (enableColumnResize) {\n                // 解决使用 _columnResizeWidth 在多表头下宽度计算异常的问题\n                width = item._columnResizeWidth\n                    ? item._columnResizeWidth\n                    : item.width;\n            } else {\n                width = item.width;\n            }\n            return getValByUnit(width);\n        },\n    },\n    render() {\n        return (\n            <colgroup>\n                {this.colgroups.map((item) => {\n                    return (\n                        <col\n                            key={item.key}\n                            style={{\n                                width: this.getValByUnit(item),\n                            }}\n                        />\n                    );\n                })}\n            </colgroup>\n        );\n    },\n};\n","import VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_HEADER_CHECKBOX_CONTENT,\n    mixins: [emitter],\n    props: {\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            // is selected\n            isSelected: false,\n            isIndeterminate: false,\n        };\n    },\n\n    methods: {\n        // selected change\n        selectedChange(isSelected) {\n            this.isSelected = isSelected;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE,\n                {\n                    isSelected,\n                },\n            );\n        },\n\n        // set selected all info\n        setSelectedAllInfo({ isSelected, isIndeterminate }) {\n            this.isSelected = isSelected;\n            this.isIndeterminate = isIndeterminate;\n        },\n    },\n    mounted() {\n        // receive selected all info\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO, (params) => {\n            this.setSelectedAllInfo(params);\n        });\n    },\n    render() {\n        const { isSelected, isIndeterminate, selectedChange } = this;\n\n        const checkboxProps = {\n            class: clsName(\"checkbox-wrapper\"),\n            props: {\n                isControlled: true,\n                isSelected: isSelected,\n                indeterminate: isIndeterminate,\n            },\n            on: {\n                \"on-checked-change\": (isSelectedParam) =>\n                    selectedChange(isSelectedParam),\n            },\n        };\n\n        return <VeCheckbox {...checkboxProps} />;\n    },\n};\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\nimport { COMPS_NAME, EMIT_EVENTS, LOCALE_COMP_NAME } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport { createLocale, isFunction } from \"../../../src/utils/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nconst t = createLocale(LOCALE_COMP_NAME);\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_HEADER_FILTER_CONTENT,\n    props: {\n        column: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            filterList: [],\n        };\n    },\n    watch: {\n        column: {\n            handler: function (column) {\n                if (column.filter && Array.isArray(column.filter.filterList)) {\n                    this.filterList = column.filter.filterList;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n    methods: {\n        /*\n         * @filterConfirm\n         * @desc  filter confirm\n         * @param {Array} val - filter list\n         */\n        filterConfirm() {\n            const { filterConfirm } = this.column.filter;\n            filterConfirm && filterConfirm(this.filterList);\n        },\n        // filter reset\n        filterReset() {\n            const { filterReset } = this.column.filter;\n            filterReset && filterReset(this.filterList);\n        },\n        // getIcon\n        getIcon(h) {\n            let result;\n            const { filterIcon } = this.column.filter;\n            if (isFunction(filterIcon)) {\n                result = filterIcon(h);\n            } else {\n                result = <VeIcon name={ICON_NAMES.FILTER} />;\n            }\n            return result;\n        },\n    },\n    render(h) {\n        const { filterList, isMultiple, maxHeight, beforeVisibleChange } =\n            this.column.filter;\n\n        const compProps = {\n            props: {\n                value: filterList,\n                showOperation: true,\n                isMultiple: isMultiple,\n                showRadio: true, // when single selection\n                confirmFilterText: t(\"confirmFilter\"),\n                resetFilterText: t(\"resetFilter\"),\n                beforeVisibleChange: beforeVisibleChange,\n            },\n            on: {\n                [EMIT_EVENTS.HEADER_FILTER_CONFIRM]: this.filterConfirm,\n                [EMIT_EVENTS.HEADER_FILTER_RESET]: this.filterReset,\n                // v-model\n                input: (val) => {\n                    this.filterList = val;\n                },\n            },\n        };\n\n        if (typeof maxHeight === \"number\") {\n            compProps.props.maxHeight = maxHeight;\n        }\n\n        return (\n            <VeDropdown {...compProps}>\n                {/* icon */}\n                <span class={clsName(\"filter\")}>\n                    <span class={clsName(\"filter-icon\")}>\n                        {this.getIcon(h)}\n                    </span>\n                </span>\n            </VeDropdown>\n        );\n    },\n};\n","import VeDropdown from \"vue-easytable/packages/ve-dropdown\";\nimport { COMPS_NAME } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport { isFunction, isBoolean } from \"../../../src/utils/index\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_HEADER_FILTER_CUSTOM_CONTENT,\n    props: {\n        column: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            internalVisible: false,\n        };\n    },\n    watch: {\n        column: {\n            handler: function (column) {\n                if (\n                    column.filterCustom &&\n                    isBoolean(column.filterCustom.defaultVisible)\n                ) {\n                    this.internalVisible = column.filterCustom.defaultVisible;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n    methods: {\n        // visible change\n        visibleChange(visible) {\n            this.internalVisible = visible;\n        },\n        // get custom content\n        getCustomContent(h) {\n            let result = null;\n\n            const { render } = this.column.filterCustom;\n            if (isFunction(render)) {\n                const props = {\n                    slot: \"custom-content\",\n                };\n\n                result = (\n                    <div {...props}>\n                        {render(\n                            {\n                                showFn: this.show,\n                                closeFn: this.close,\n                            },\n                            h,\n                        )}\n                    </div>\n                );\n            }\n            return result;\n        },\n        // getIcon\n        getIcon(h) {\n            let result;\n            const { filterIcon } = this.column.filterCustom;\n            if (isFunction(filterIcon)) {\n                result = filterIcon(h);\n            } else {\n                result = <VeIcon name={ICON_NAMES.FILTER} />;\n            }\n            return result;\n        },\n\n        close() {\n            this.internalVisible = false;\n        },\n        show() {\n            this.internalVisible = true;\n        },\n    },\n    render(h) {\n        const compProps = {\n            props: {\n                isCustomContent: true,\n                isControlled: true,\n                visible: this.internalVisible,\n                beforeVisibleChange:\n                    this.column.filterCustom.beforeVisibleChange,\n            },\n            on: {\n                \"on-dropdown-visible-change\": this.visibleChange,\n            },\n        };\n\n        return (\n            <VeDropdown {...compProps}>\n                {/* icon */}\n                <span class={clsName(\"filter\")}>\n                    <span class={clsName(\"filter-icon\")}>\n                        {this.getIcon(h)}\n                    </span>\n                </span>\n                {/* custom content */}\n                {this.getCustomContent(h)}\n            </VeDropdown>\n        );\n    },\n};\n","import HeaderCheckboxContent from \"./header-checkbox-content\";\nimport HeaderFilterContent from \"./header-filter-content\";\nimport HeaderFilterCustomContent from \"./header-filter-custom-content\";\nimport {\n    getFixedTotalWidthByColumnKey,\n    clsName,\n    getColKeysByRangeColKeys,\n    getColKeysByHeaderColumn,\n} from \"../util\";\nimport { getValByUnit, isEmptyValue } from \"../../../src/utils/index.js\";\nimport { COMPS_NAME, COLUMN_TYPES, EMIT_EVENTS } from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_THADER_Th,\n    mixins: [emitter],\n    props: {\n        // group columns item\n        groupColumn: {\n            type: Array,\n            required: true,\n        },\n        // group column item\n        groupColumnItem: {\n            type: Object,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        headerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        fixedHeader: {\n            type: Boolean,\n        },\n        isGroupHeader: {\n            type: Boolean,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        headerIndicatorColKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // sort option\n        sortOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // sort columns\n        sortColumns: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    computed: {\n        // is last left fixed column\n        isLastLeftFixedColumn() {\n            let result = false;\n\n            const { groupColumn, groupColumnItem: column } = this;\n\n            const { fixed, _keys } = column;\n\n            if (fixed === \"left\") {\n                const leftFixedColumns = groupColumn.filter(\n                    (x) => x.fixed === \"left\",\n                );\n                const index = leftFixedColumns.findIndex(\n                    (x) => x._keys === _keys,\n                );\n\n                if (index === leftFixedColumns.length - 1) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n        // is first right fixed column\n        isfirstRightFixedColumn() {\n            let result = false;\n\n            const { groupColumn, groupColumnItem: column } = this;\n\n            const { fixed, _keys } = column;\n\n            if (fixed === \"right\") {\n                const leftFixedColumns = groupColumn.filter(\n                    (x) => x.fixed === \"right\",\n                );\n\n                if (leftFixedColumns[0]._keys === _keys) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n        // is last column\n        isLastCloumn() {\n            let result = false;\n\n            const { colgroups, groupColumnItem: column } = this;\n\n            const lastColumnKey = colgroups[colgroups.length - 1].key;\n\n            const keys = column._keys.split(\"|\");\n\n            if (keys.length) {\n                if (keys.length === 1) {\n                    if (keys[0] === lastColumnKey) {\n                        result = true;\n                    }\n                } else if (keys[keys.length - 2] === lastColumnKey) {\n                    result = true;\n                }\n            }\n\n            return result;\n        },\n    },\n    methods: {\n        /*\n         * @getTheadThClass\n         * @desc  get thead th class\n         * @param {string} fixed - 固定方式\n         */\n        getTheadThClass({ fixed }) {\n            let result = {\n                [clsName(\"header-th\")]: true,\n                [clsName(\"fixed-left\")]: fixed === \"left\",\n                [clsName(\"fixed-right\")]: fixed === \"right\",\n                [clsName(\"last-left-fixed-column\")]: this.isLastLeftFixedColumn,\n                [clsName(\"first-right-fixed-column\")]:\n                    this.isfirstRightFixedColumn,\n                [clsName(\"last-column\")]: this.isLastCloumn,\n            };\n\n            const {\n                cellStyleOption,\n                rowIndex,\n                groupColumnItem: column,\n                cellSelectionRangeData,\n                colgroups,\n                isGroupHeader,\n                headerIndicatorColKeys,\n            } = this;\n\n            if (cellSelectionRangeData) {\n                const { leftColKey, rightColKey } = cellSelectionRangeData;\n                const { startColKeyIndex } = headerIndicatorColKeys;\n                const isIndicatorActive = startColKeyIndex > -1;\n\n                if (!isEmptyValue(leftColKey)) {\n                    let indicatorColKeys = [];\n                    if (leftColKey === rightColKey) {\n                        indicatorColKeys = [leftColKey];\n                    } else {\n                        indicatorColKeys = getColKeysByRangeColKeys({\n                            colKey1: leftColKey,\n                            colKey2: rightColKey,\n                            colgroups,\n                        });\n                    }\n\n                    let showIndicator = false;\n                    if (!isGroupHeader) {\n                        if (indicatorColKeys.indexOf(column[\"key\"]) > -1) {\n                            showIndicator = true;\n                        }\n                    } else {\n                        const colKeys = getColKeysByHeaderColumn({\n                            headerColumnItem: column,\n                        });\n                        showIndicator = colKeys.every((colKey) => {\n                            return indicatorColKeys.indexOf(colKey) > -1;\n                        });\n                    }\n                    if (showIndicator) {\n                        if (isIndicatorActive) {\n                            result[clsName(\"cell-indicator-active\")] = true;\n                        } else {\n                            result[clsName(\"cell-indicator\")] = true;\n                        }\n                    }\n                }\n            }\n\n            if (\n                cellStyleOption &&\n                typeof cellStyleOption.headerCellClass === \"function\"\n            ) {\n                const customClass = cellStyleOption.headerCellClass({\n                    column,\n                    rowIndex,\n                });\n                if (customClass) {\n                    result[customClass] = true;\n                }\n            }\n\n            return result;\n        },\n        /*\n         * @getTheadThStyle\n         * @desc  get body td style\n         * @param {string} _keys - 当前列包含的key（单元格合并时有多个key值）\n         * @param {string} align - 居中方式\n         * @param {bool} fixed - 固定方式\n         * @param {number} rowIndex - 当前行号\n         */\n        getTheadThStyle({ _keys, align, fixed }, rowIndex) {\n            let result = {};\n\n            const colgroups = this.colgroups;\n            const headerRows = this.headerRows;\n\n            // text align\n            result[\"text-align\"] = align || \"center\";\n\n            // fixed left total width or right total width\n            if (fixed) {\n                let key = \"\";\n                let totalWidth = 0;\n                const keys = _keys.split(\"|\");\n                if (fixed === \"left\") {\n                    key = keys[0];\n                } else if (fixed === \"right\") {\n                    key = keys.length === 1 ? keys[0] : keys[keys.length - 2];\n                }\n\n                if (key) {\n                    // column index\n                    const columnIndex = colgroups.findIndex(\n                        (x) => x.key === key,\n                    );\n                    if (\n                        (fixed === \"left\" && columnIndex > 0) ||\n                        (fixed === \"right\" &&\n                            columnIndex < colgroups.length - 1)\n                    ) {\n                        totalWidth = getFixedTotalWidthByColumnKey({\n                            colgroups,\n                            colKey: key,\n                            fixed,\n                        });\n\n                        totalWidth = getValByUnit(totalWidth);\n                    }\n                }\n                result[\"left\"] = fixed === \"left\" ? totalWidth : \"\";\n                result[\"right\"] = fixed === \"right\" ? totalWidth : \"\";\n            }\n\n            // header row th fixed top\n            if (this.fixedHeader) {\n                let rowHeight = 0;\n                if (rowIndex > 0) {\n                    rowHeight = headerRows.reduce(\n                        (total, currentVal, index) => {\n                            return index < rowIndex\n                                ? currentVal.rowHeight + total\n                                : total;\n                        },\n                        0,\n                    );\n                }\n                rowHeight = getValByUnit(rowHeight);\n\n                result[\"top\"] = rowHeight;\n            }\n\n            return result;\n        },\n\n        // get chcekbox content\n        getCheckboxContent() {\n            let result = null;\n\n            const { checkboxOption } = this;\n\n            if (this.groupColumnItem.type === COLUMN_TYPES.CHECKBOX) {\n                if (!checkboxOption.hideSelectAll) {\n                    // checkbox content props\n                    const checkboxProps = {\n                        props: {\n                            column: this.groupColumnItem,\n                            checkboxOption: this.checkboxOption,\n                        },\n                    };\n\n                    result = <HeaderCheckboxContent {...checkboxProps} />;\n                }\n            }\n            return result;\n        },\n        // sort change\n        sortChange() {\n            let sortResult = \"\";\n            const { sortColumns, groupColumnItem, sortOption } = this;\n            const { sortAlways } = sortOption;\n\n            const currentField = groupColumnItem.field;\n            const sortBy = sortColumns[currentField];\n\n            if (sortAlways) {\n                sortResult = sortBy === \"asc\" ? \"desc\" : \"asc\";\n            } else {\n                sortResult =\n                    sortBy === \"asc\" ? \"desc\" : sortBy === \"desc\" ? \"\" : \"asc\";\n            }\n\n            this.dispatch(COMPS_NAME.VE_TABLE_THADER, EMIT_EVENTS.SORT_CHANGE, {\n                currentField,\n                sortResult,\n            });\n        },\n\n        // get sort content\n        getSortContent() {\n            let result = null;\n\n            const { sortColumns, groupColumnItem } = this;\n            const currentField = groupColumnItem.field;\n\n            if (Object.keys(sortColumns).includes(currentField)) {\n                const sortBy = sortColumns[currentField];\n\n                const props = {\n                    class: clsName(\"sort\"),\n                    on: {\n                        click: () => this.sortChange(),\n                    },\n                };\n\n                result = (\n                    <span {...props}>\n                        <VeIcon\n                            class={[\n                                clsName(\"sort-icon\"),\n                                clsName(\"sort-icon-top\"),\n                                sortBy === \"asc\" ? \"active\" : \"\",\n                            ]}\n                            name={ICON_NAMES.SORT_TOP_ARROW}\n                        />\n                        <VeIcon\n                            class={[\n                                clsName(\"sort-icon\"),\n                                clsName(\"sort-icon-bottom\"),\n                                sortBy === \"desc\" ? \"active\" : \"\",\n                            ]}\n                            name={ICON_NAMES.SORT_BOTTOM_ARROW}\n                        />\n                    </span>\n                );\n            }\n\n            return result;\n        },\n\n        // get filter content\n        getFilterContent() {\n            let result = null;\n\n            const { groupColumnItem } = this;\n\n            if (groupColumnItem.filter) {\n                // filter content props\n                const filterProps = {\n                    props: {\n                        column: this.groupColumnItem,\n                    },\n                };\n                result = <HeaderFilterContent {...filterProps} />;\n            }\n            return result;\n        },\n\n        // get filter custom content\n        getFilterCustomContent() {\n            let result = null;\n\n            const { groupColumnItem } = this;\n\n            if (groupColumnItem.filterCustom) {\n                // filter content props\n                const filterProps = {\n                    props: {\n                        column: this.groupColumnItem,\n                    },\n                };\n                result = <HeaderFilterCustomContent {...filterProps} />;\n            }\n            return result;\n        },\n\n        // cell click\n        cellClick(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.HEADER_CELL_CLICK, {\n                event: e,\n                column: groupColumnItem,\n            });\n        },\n        // dblclick\n        cellDblclick(e, fn) {\n            fn && fn(e);\n        },\n        // contextmenu\n        cellContextmenu(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_CELL_CONTEXTMENU,\n                {\n                    event: e,\n                    column: groupColumnItem,\n                },\n            );\n        },\n        // mouseenter\n        cellMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        cellMouseleave(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_CELL_MOUSELEAVE,\n                {\n                    event: e,\n                    column: groupColumnItem,\n                },\n            );\n        },\n        // mousemove\n        cellMousemove(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_CELL_MOUSEMOVE,\n                {\n                    event: e,\n                    column: groupColumnItem,\n                },\n            );\n        },\n        // mouseover\n        cellMouseover(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_CELL_MOUSEOVER,\n                {\n                    event: e,\n                    column: groupColumnItem,\n                },\n            );\n        },\n        // mousedown\n        cellMousedown(e, fn) {\n            fn && fn(e);\n\n            const { groupColumnItem } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_CELL_MOUSEDOWN,\n                {\n                    event: e,\n                    column: groupColumnItem,\n                },\n            );\n        },\n        // mouseup\n        cellMouseup(e, fn) {\n            fn && fn(e);\n        },\n    },\n    render(h) {\n        const {\n            groupColumnItem,\n            getTheadThClass,\n            getTheadThStyle,\n            rowIndex,\n            eventCustomOption,\n        } = this;\n\n        let content;\n\n        if (typeof groupColumnItem.renderHeaderCell === \"function\") {\n            const { ...column } = groupColumnItem;\n\n            const renderResult = groupColumnItem.renderHeaderCell(\n                {\n                    column,\n                },\n                h,\n            );\n            content = renderResult;\n        } else {\n            content = groupColumnItem.title;\n        }\n\n        // custom on cell event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { headerCellEvents } = eventCustomOption;\n            customEvents = headerCellEvents\n                ? headerCellEvents({ column: groupColumnItem, rowIndex })\n                : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.cellClick(e, click);\n            },\n            dblclick: (e) => {\n                this.cellDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.cellContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.cellMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.cellMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.cellMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.cellMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.cellMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.cellMouseup(e, mouseup);\n            },\n        };\n\n        const thProps = {\n            style: getTheadThStyle(groupColumnItem, rowIndex),\n            class: getTheadThClass(groupColumnItem),\n            attrs: {\n                rowspan: groupColumnItem._rowspan,\n                colspan: groupColumnItem._colspan,\n            },\n            on: events,\n        };\n\n        return (\n            <th {...thProps}>\n                {/* checkbox content */}\n                {this.getCheckboxContent()}\n                {content}\n                {/* sort content */}\n                {this.getSortContent()}\n                {/* filter content */}\n                {this.getFilterContent()}\n                {/* filter custom content */}\n                {this.getFilterCustomContent()}\n            </th>\n        );\n    },\n};\n","/*\nfork from:\nhttps://github.com/ElemeFE/element\n*/\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/* istanbul ignore next */\nconst resizeHandler = function (entries) {\n    for (let entry of entries) {\n        const listeners = entry.target.__resizeListeners__ || [];\n        if (listeners.length) {\n            listeners.forEach((fn) => {\n                fn(entry.contentRect);\n            });\n        }\n    }\n};\n\n/* istanbul ignore next */\nexport const addResizeListener = function (element, fn) {\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = [];\n        element.__ro__ = new ResizeObserver(resizeHandler);\n        element.__ro__.observe(element);\n    }\n    element.__resizeListeners__.push(fn);\n};\n\n/* istanbul ignore next */\nexport const removeResizeListener = function (element, fn) {\n    if (!element || !element.__resizeListeners__) return;\n    element.__resizeListeners__.splice(\n        element.__resizeListeners__.indexOf(fn),\n        1,\n    );\n    if (!element.__resizeListeners__.length) {\n        element.__ro__.disconnect();\n    }\n};\n","import {\n    addResizeListener,\n    removeResizeListener,\n} from \"../../../utils/resize-event\";\nexport default {\n    name: \"vue-dom-resize-observer\",\n    props: {\n        tagName: {\n            type: String,\n            required: true,\n        },\n        id: {\n            type: [String, Number],\n            default: null,\n        },\n    },\n    methods: {\n        resizeListener(contentRect) {\n            const { left, top, width, height } = contentRect;\n            this.$emit(\"on-dom-resize-change\", {\n                key: this.id,\n                left,\n                top,\n                width,\n                height,\n            });\n        },\n    },\n    mounted() {\n        addResizeListener(this.$el, this.resizeListener);\n    },\n    destroyed() {\n        removeResizeListener(this.$el, this.resizeListener);\n    },\n    render() {\n        return <this.tagName>{this.$slots.default}</this.tagName>;\n    },\n};\n","import VueDomResizeObserver from \"./src/index\";\nexport default VueDomResizeObserver;\n","import HeaderTh from \"./header-th\";\nimport { clsName, getDomResizeObserverCompKey } from \"../util\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_THADER_TR,\n    mixins: [emitter],\n    props: {\n        columnsOptionResetTime: {\n            type: Number,\n            default: 0,\n        },\n        // group columns item\n        groupColumn: {\n            type: Array,\n            required: true,\n        },\n        headerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        fixedHeader: {\n            type: Boolean,\n            required: true,\n        },\n        isGroupHeader: {\n            type: Boolean,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        headerIndicatorColKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // sort option\n        sortOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // sort columns\n        sortColumns: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    methods: {\n        // tr height change\n        trHeightChange({ height }) {\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.HEADER_ROW_HEIGHT_CHANGE,\n                {\n                    rowIndex: this.rowIndex,\n                    height: height,\n                },\n            );\n        },\n        // click\n        rowClick(e, fn) {\n            fn && fn(e);\n        },\n        // dblclick\n        rowDblclick(e, fn) {\n            fn && fn(e);\n        },\n        // contextmenu\n        rowContextmenu(e, fn) {\n            fn && fn(e);\n        },\n        // mouseenter\n        rowMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        rowMouseleave(e, fn) {\n            fn && fn(e);\n        },\n        // mousemove\n        rowMousemove(e, fn) {\n            fn && fn(e);\n        },\n        // mouseover\n        rowMouseover(e, fn) {\n            fn && fn(e);\n        },\n        // mousedown\n        rowMousedown(e, fn) {\n            fn && fn(e);\n        },\n        // mouseup\n        rowMouseup(e, fn) {\n            fn && fn(e);\n        },\n    },\n    render() {\n        const {\n            groupColumn,\n            colgroups,\n            headerRows,\n            fixedHeader,\n            rowIndex,\n            trHeightChange,\n            checkboxOption,\n            sortOption,\n            sortColumns,\n            cellStyleOption,\n            eventCustomOption,\n            cellSelectionData,\n        } = this;\n\n        // custom on cell event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { headerRowEvents } = eventCustomOption;\n            customEvents = headerRowEvents ? headerRowEvents({ rowIndex }) : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.rowClick(e, click);\n            },\n            dblclick: (e) => {\n                this.rowDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.rowContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.rowMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.rowMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.rowMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.rowMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.rowMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.rowMouseup(e, mouseup);\n            },\n        };\n\n        const trProps = {\n            key: getDomResizeObserverCompKey(\n                rowIndex,\n                this.columnsOptionResetTime,\n            ),\n            class: clsName(\"header-tr\"),\n            props: {\n                tagName: \"tr\",\n            },\n            on: {\n                \"on-dom-resize-change\": trHeightChange,\n            },\n            nativeOn: events,\n        };\n\n        return (\n            <VueDomResizeObserver {...trProps}>\n                {groupColumn.map((groupColumnItem) => {\n                    // th props\n                    const thProps = {\n                        key: groupColumnItem.key,\n                        props: {\n                            groupColumn,\n                            groupColumnItem,\n                            colgroups,\n                            headerRows,\n                            fixedHeader,\n                            isGroupHeader: this.isGroupHeader,\n                            rowIndex,\n                            checkboxOption,\n                            sortOption,\n                            sortColumns,\n                            cellStyleOption,\n                            eventCustomOption: this.eventCustomOption,\n                            cellSelectionData,\n                            cellSelectionRangeData: this.cellSelectionRangeData,\n                            headerIndicatorColKeys: this.headerIndicatorColKeys,\n                        },\n                    };\n\n                    return <HeaderTh {...thProps} />;\n                })}\n            </VueDomResizeObserver>\n        );\n    },\n};\n","import { clsName } from \"../util\";\nimport HeaderTr from \"./header-tr\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_THADER,\n    mixins: [emitter],\n    props: {\n        columnsOptionResetTime: {\n            type: Number,\n            default: 0,\n        },\n        groupColumns: {\n            type: Array,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        fixedHeader: {\n            type: Boolean,\n            required: true,\n        },\n        isGroupHeader: {\n            type: Boolean,\n            required: true,\n        },\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        headerIndicatorColKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        headerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // sort option\n        sortOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            /*\n            sort columns\n            不要使用computed代替，属性动态添加会造成响应式问题\n            */\n            sortColumns: {},\n        };\n    },\n    computed: {\n        // header class\n        headerClass() {\n            return {\n                [clsName(\"fixed-header\")]: this.fixedHeader,\n            };\n        },\n    },\n    watch: {\n        // watch colgroups\n        colgroups: {\n            handler() {\n                this.initSortColumns();\n            },\n            immediate: true,\n        },\n    },\n    methods: {\n        // sort change\n        sortChange({ currentField, sortResult }) {\n            const { sortColumns, sortOption } = this;\n            const { multipleSort, sortChange } = sortOption;\n\n            this.sortColumns[currentField] = sortResult;\n\n            if (!multipleSort) {\n                for (const field in sortColumns) {\n                    if (field !== currentField) {\n                        sortColumns[field] = \"\";\n                    }\n                }\n            }\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.SORT_CHANGE,\n                sortColumns,\n            );\n\n            // invoke\n            sortChange(sortColumns);\n        },\n\n        // init sort columns\n        initSortColumns() {\n            const { colgroups } = this;\n            let sortColumns = {};\n            colgroups.forEach((item) => {\n                if (typeof item.sortBy === \"string\") {\n                    sortColumns[item.field] = item.sortBy;\n                }\n            });\n            this.sortColumns = sortColumns;\n        },\n    },\n    mounted() {\n        // receive sort change\n        this.$on(EMIT_EVENTS.SORT_CHANGE, (params) => {\n            this.sortChange(params);\n        });\n    },\n    render() {\n        const {\n            headerClass,\n            groupColumns,\n            colgroups,\n            fixedHeader,\n            headerRows,\n            checkboxOption,\n            sortOption,\n            sortColumns,\n            cellStyleOption,\n            cellSelectionData,\n        } = this;\n\n        return (\n            <thead class={headerClass}>\n                {groupColumns.map((groupColumn, rowIndex) => {\n                    const trProps = {\n                        key: rowIndex,\n                        props: {\n                            columnsOptionResetTime: this.columnsOptionResetTime,\n                            groupColumn,\n                            headerRows,\n                            colgroups,\n                            fixedHeader,\n                            isGroupHeader: this.isGroupHeader,\n                            rowIndex,\n                            checkboxOption,\n                            sortOption,\n                            sortColumns,\n                            cellStyleOption,\n                            eventCustomOption: this.eventCustomOption,\n                            cellSelectionData,\n                            cellSelectionRangeData: this.cellSelectionRangeData,\n                            headerIndicatorColKeys: this.headerIndicatorColKeys,\n                        },\n                    };\n                    return <HeaderTr {...trProps} />;\n                })}\n            </thead>\n        );\n    },\n};\n","import VeCheckbox from \"vue-easytable/packages/ve-checkbox\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_CHECKBOX_CONTENT,\n    mixins: [emitter],\n    props: {\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        rowKey: {\n            type: [String, Number],\n            required: true,\n        },\n        internalCheckboxSelectedRowKeys: {\n            type: Array,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            isSelected: false,\n        };\n    },\n    computed: {\n        // disabled\n        disabled() {\n            let result = false;\n\n            const { checkboxOption, rowKey } = this;\n\n            if (!checkboxOption) {\n                return;\n            }\n\n            const { disableSelectedRowKeys } = checkboxOption;\n\n            if (\n                Array.isArray(disableSelectedRowKeys) &&\n                disableSelectedRowKeys.includes(rowKey)\n            ) {\n                result = true;\n            }\n\n            return result;\n        },\n\n        // 是否是受控属性（取决于selectedRowKeys）\n        isControlledProp() {\n            const { checkboxOption } = this;\n\n            return (\n                checkboxOption && Array.isArray(checkboxOption.selectedRowKeys)\n            );\n        },\n    },\n    watch: {\n        // watch internalCheckboxSelectedRowKeys\n        internalCheckboxSelectedRowKeys: {\n            handler: function () {\n                this.initSelected();\n            },\n            immediate: true,\n        },\n    },\n    methods: {\n        // init selected\n        initSelected() {\n            let result = false;\n\n            const { rowKey, internalCheckboxSelectedRowKeys } = this;\n\n            if (\n                Array.isArray(internalCheckboxSelectedRowKeys) &&\n                internalCheckboxSelectedRowKeys.includes(rowKey)\n            ) {\n                result = true;\n            }\n\n            this.isSelected = result;\n        },\n\n        // selected change\n        selectedChange(isSelected) {\n            const { isControlledProp } = this;\n\n            // 非受控\n            if (!isControlledProp) {\n                this.isSelected = isSelected;\n            }\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE_BODY,\n                EMIT_EVENTS.CHECKBOX_SELECTED_ROW_CHANGE,\n                {\n                    rowKey: this.rowKey,\n                    isSelected,\n                },\n            );\n        },\n    },\n    render() {\n        const { isSelected, selectedChange, disabled } = this;\n\n        const checkboxProps = {\n            class: clsName(\"checkbox-wrapper\"),\n            props: {\n                isControlled: true,\n                isSelected: isSelected,\n                disabled,\n            },\n            on: {\n                \"on-checked-change\": (isSelected) => selectedChange(isSelected),\n            },\n        };\n\n        return <VeCheckbox {...checkboxProps} />;\n    },\n};\n","import VeRadio from \"vue-easytable/packages/ve-radio\";\nimport { COMPS_NAME, EMIT_EVENTS } from \"../util/constant\";\nimport { clsName } from \"../util\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_RADIO_CONTENT,\n    mixins: [emitter],\n    props: {\n        // checkbox option\n        radioOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        rowKey: {\n            type: [String, Number],\n            required: true,\n        },\n        internalRadioSelectedRowKey: {\n            type: [String, Number],\n            default: null,\n        },\n    },\n    data() {\n        return {\n            isSelected: false,\n        };\n    },\n    computed: {\n        // disabled\n        disabled() {\n            let result = false;\n\n            const { radioOption, rowKey } = this;\n\n            if (!radioOption) {\n                return;\n            }\n\n            const { disableSelectedRowKeys } = radioOption;\n\n            if (\n                Array.isArray(disableSelectedRowKeys) &&\n                disableSelectedRowKeys.includes(rowKey)\n            ) {\n                result = true;\n            }\n\n            return result;\n        },\n\n        // 是否是受控属性（取决于selectedRowKey）\n        isControlledProp() {\n            const { radioOption } = this;\n\n            return (\n                radioOption &&\n                Object.keys(radioOption).includes(\"selectedRowKey\")\n            );\n        },\n    },\n    watch: {\n        // watch internal radio SelectedRowKey\n        internalRadioSelectedRowKey: {\n            handler: function () {\n                this.initSelected();\n            },\n            immediate: true,\n        },\n    },\n    methods: {\n        // init selected\n        initSelected() {\n            this.isSelected = this.internalRadioSelectedRowKey === this.rowKey;\n        },\n\n        // selected change\n        selectedChange() {\n            const { isControlledProp } = this;\n\n            // 非受控\n            if (!isControlledProp) {\n                this.isSelected = true;\n            }\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE_BODY,\n                EMIT_EVENTS.RADIO_SELECTED_ROW_CHANGE,\n                {\n                    rowKey: this.rowKey,\n                },\n            );\n        },\n    },\n    render() {\n        const { isSelected, selectedChange, disabled } = this;\n\n        const radioProps = {\n            class: clsName(\"radio-wrapper\"),\n            props: {\n                isControlled: true,\n                isSelected,\n                disabled,\n            },\n            on: {\n                \"on-radio-change\": () => selectedChange(),\n            },\n        };\n\n        return <VeRadio {...radioProps} />;\n    },\n};\n","import { clsName } from \"../util\";\nimport { COMPS_NAME, COLUMN_TYPES } from \"../util/constant\";\nimport VeIcon from \"vue-easytable/packages/ve-icon\";\nimport { ICON_NAMES } from \"../../../src/utils/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_EXPAND_TR_ICON,\n    props: {\n        column: {\n            type: Object,\n            required: true,\n        },\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        // expanded row keys\n        expandedRowkeys: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // row expand click event\n        cellClick: {\n            type: Function,\n            default: null,\n        },\n    },\n    computed: {\n        // is row expanded\n        isExpanded() {\n            let result = false;\n\n            const { column, rowData, expandedRowkeys, rowKeyFieldName } = this;\n\n            if (column.type === COLUMN_TYPES.EXPAND) {\n                const rowKey = rowData[rowKeyFieldName];\n                result = expandedRowkeys.includes(rowKey);\n            }\n\n            return result;\n        },\n        // expand row icon class\n        expandRowIconContainerClass() {\n            return {\n                [clsName(\"row-expand-icon\")]: true,\n                [clsName(\"expand-icon-collapsed\")]: this.isExpanded,\n            };\n        },\n    },\n    render() {\n        let content = null;\n\n        const { cellClick, column, expandRowIconContainerClass } = this;\n\n        if (column.type === COLUMN_TYPES.EXPAND) {\n            content = (\n                <span\n                    onClick={(e) => cellClick(e)}\n                    class={expandRowIconContainerClass}\n                >\n                    <VeIcon name={ICON_NAMES.RIGHT_ARROW} />\n                </span>\n            );\n        }\n        return content;\n    },\n};\n","import BodyCheckboxContent from \"./body-checkbox-content\";\nimport BodyRadioContent from \"./body-radio-content\";\nimport ExpandTrIcon from \"./expand-tr-icon\";\nimport { clsName, getRowKeysByRangeRowKeys } from \"../util\";\nimport { isNumber, isBoolean, isEmptyValue } from \"../../../src/utils/index.js\";\n\nimport {\n    COMPS_NAME,\n    COLUMN_TYPES,\n    EXPAND_TRIGGER_TYPES,\n    EMIT_EVENTS,\n    COMPS_CUSTOM_ATTRS,\n} from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_TD,\n    mixins: [emitter],\n    props: {\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        column: {\n            type: Object,\n            required: true,\n        },\n        columnCollection: {\n            type: Array,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        allRowKeys: {\n            type: Array,\n            required: true,\n        },\n        /*\n        expand\n        */\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // is expand row\n        isExpandRow: {\n            type: Boolean,\n            required: true,\n        },\n        // expanded row keys\n        expandedRowkeys: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n\n        /*\n        checkbox\n        */\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        internalCheckboxSelectedRowKeys: {\n            type: Array,\n            default: function () {\n                return null;\n            },\n        },\n\n        /*\n        radio\n        */\n        radioOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        internalRadioSelectedRowKey: {\n            type: [String, Number],\n            default: null,\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection data\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        bodyIndicatorRowKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // edit opttion\n        editOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            // 原始单元格数据\n            rawCellValue: \"\",\n        };\n    },\n    computed: {\n        /*\n        current column collection item\n        1、Cache the style、class of each column\n        */\n        currentColumnCollectionItem() {\n            const { columnCollection, column } = this;\n            return columnCollection.find((x) => x.colKey === column.key);\n        },\n\n        // current row key\n        currentRowKey() {\n            const { rowData, rowKeyFieldName } = this;\n            return rowData[rowKeyFieldName];\n        },\n    },\n    watch: {\n        // watch row data\n        rowData: {\n            handler(rowData) {\n                const column = this.column;\n                if (column) {\n                    this.rawCellValue = rowData[column.field];\n                }\n            },\n            deep: true,\n            immediate: true,\n        },\n    },\n    methods: {\n        /*\n         * @bodyTdStyle\n         * @desc body td style\n         */\n        bodyTdStyle() {\n            const { currentColumnCollectionItem } = this;\n\n            let result = {};\n\n            if (currentColumnCollectionItem) {\n                result = Object.assign(\n                    result,\n                    currentColumnCollectionItem.style,\n                );\n            }\n\n            return result;\n        },\n\n        /*\n         * @bodyTdClass\n         * @desc body td class\n         */\n        bodyTdClass() {\n            const { currentColumnCollectionItem } = this;\n\n            const { fixed, operationColumn } = this.column;\n\n            let result = {\n                [clsName(\"body-td\")]: true,\n            };\n\n            const {\n                cellStyleOption,\n                rowData,\n                column,\n                rowIndex,\n                allRowKeys,\n                cellSelectionData,\n                cellSelectionRangeData,\n                bodyIndicatorRowKeys,\n                currentRowKey,\n            } = this;\n\n            // column fixed\n            if (fixed) {\n                result[clsName(\"fixed-left\")] = fixed === \"left\";\n                result[clsName(\"fixed-right\")] = fixed === \"right\";\n            }\n\n            // operation column\n            if (operationColumn) {\n                result[clsName(\"operation-col\")] = true;\n            }\n\n            // cell style option\n            if (\n                cellStyleOption &&\n                typeof cellStyleOption.bodyCellClass === \"function\"\n            ) {\n                const customClass = cellStyleOption.bodyCellClass({\n                    row: rowData,\n                    column,\n                    rowIndex,\n                });\n                if (customClass) {\n                    result[customClass] = true;\n                }\n            }\n\n            if (cellSelectionData) {\n                const { rowKey, colKey } = cellSelectionData.currentCell;\n\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                    if (currentRowKey === rowKey) {\n                        // cell selection\n                        if (column[\"key\"] === colKey) {\n                            result[clsName(\"cell-selection\")] = true;\n                        }\n                    }\n\n                    if (operationColumn) {\n                        const { topRowKey, bottomRowKey } =\n                            cellSelectionRangeData;\n                        const { startRowKeyIndex } = bodyIndicatorRowKeys;\n                        const isIndicatorActive = startRowKeyIndex > -1;\n\n                        let indicatorRowKeys = [];\n                        if (topRowKey === bottomRowKey) {\n                            indicatorRowKeys = [topRowKey];\n                        } else {\n                            indicatorRowKeys = getRowKeysByRangeRowKeys({\n                                topRowKey,\n                                bottomRowKey,\n                                allRowKeys,\n                            });\n                        }\n\n                        //  cell indicator (operation column)\n                        if (indicatorRowKeys.indexOf(currentRowKey) > -1) {\n                            if (isIndicatorActive) {\n                                result[clsName(\"cell-indicator-active\")] = true;\n                            } else {\n                                result[clsName(\"cell-indicator\")] = true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (currentColumnCollectionItem) {\n                result = Object.assign(\n                    result,\n                    currentColumnCollectionItem.class,\n                );\n            }\n\n            return result;\n        },\n\n        // get ellipsis content style\n        getEllipsisContentStyle() {\n            let result = {};\n\n            const { ellipsis } = this.column;\n\n            if (ellipsis) {\n                const { lineClamp } = ellipsis;\n\n                let _lineClamp = isNumber(lineClamp) ? lineClamp : 1;\n                result[\"-webkit-line-clamp\"] = _lineClamp;\n            }\n\n            return result;\n        },\n\n        // get render content\n        getRenderContent(h) {\n            let content = null;\n\n            const { column, rowData, rowIndex, rawCellValue } = this;\n\n            // has render function\n            if (typeof column.renderBodyCell === \"function\") {\n                const renderResult = column.renderBodyCell(\n                    {\n                        row: rowData,\n                        column,\n                        rowIndex,\n                    },\n                    h,\n                );\n\n                content = renderResult;\n            } else {\n                content = rawCellValue;\n            }\n\n            // ellipisis\n            if (column.ellipsis) {\n                const { showTitle } = column.ellipsis;\n\n                // default true\n                const isShowTitle = isBoolean(showTitle) ? showTitle : true;\n\n                content = (\n                    <span\n                        title={isShowTitle ? content : \"\"}\n                        style={this.getEllipsisContentStyle()}\n                        class={clsName(\"body-td-span-ellipsis\")}\n                    >\n                        {content}\n                    </span>\n                );\n            }\n\n            return content;\n        },\n\n        // get chcekbox content\n        getCheckboxContent() {\n            if (this.column.type === COLUMN_TYPES.CHECKBOX) {\n                // checkbox content props\n                const checkboxProps = {\n                    props: {\n                        column: this.column,\n                        checkboxOption: this.checkboxOption,\n                        rowKey: this.rowData[this.rowKeyFieldName],\n                        internalCheckboxSelectedRowKeys:\n                            this.internalCheckboxSelectedRowKeys,\n                    },\n                };\n\n                return <BodyCheckboxContent {...checkboxProps} />;\n            }\n            return null;\n        },\n\n        // get radio content\n        getRadioContent() {\n            if (this.column.type === COLUMN_TYPES.RADIO) {\n                // radio props\n                const radioProps = {\n                    props: {\n                        column: this.column,\n                        radioOption: this.radioOption,\n                        rowKey: this.rowData[this.rowKeyFieldName],\n                        internalRadioSelectedRowKey:\n                            this.internalRadioSelectedRowKey,\n                    },\n                };\n\n                return <BodyRadioContent {...radioProps} />;\n            }\n            return null;\n        },\n\n        // get cell span\n        getCellSpan() {\n            const { cellSpanOption, rowData, column, rowIndex } = this;\n            let rowspan = 1;\n            let colspan = 1;\n\n            if (cellSpanOption) {\n                const { bodyCellSpan } = cellSpanOption;\n\n                if (typeof bodyCellSpan === \"function\") {\n                    const result = bodyCellSpan({\n                        row: rowData,\n                        column,\n                        rowIndex,\n                    });\n\n                    if (typeof result === \"object\") {\n                        rowspan = result.rowspan;\n                        colspan = result.colspan;\n                    }\n                }\n            }\n\n            return { rowspan, colspan };\n        },\n        // cell click\n        cellClick(e, fn) {\n            fn && fn(e);\n\n            const { column, expandOption, rowData } = this;\n\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.BODY_CELL_CLICK, {\n                event: e,\n                rowData,\n                column,\n            });\n\n            if (column.type !== COLUMN_TYPES.EXPAND) {\n                return false;\n            }\n\n            if (expandOption) {\n                const eventTargetName = e.target.nodeName;\n\n                const trigger = expandOption.trigger;\n\n                // expand row by click icon\n                if (!trigger || trigger === EXPAND_TRIGGER_TYPES.ICON) {\n                    if (eventTargetName !== \"TD\") {\n                        e.stopPropagation();\n                        this.$emit(EMIT_EVENTS.EXPAND_ROW_CHANGE);\n                    }\n                }\n                // expand row by click cell(td)\n                else if (trigger === EXPAND_TRIGGER_TYPES.CELL) {\n                    e.stopPropagation();\n                    this.$emit(EMIT_EVENTS.EXPAND_ROW_CHANGE);\n                }\n            }\n        },\n        // dblclick\n        cellDblclick(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.BODY_CELL_DOUBLE_CLICK,\n                {\n                    event: e,\n                    rowData,\n                    column,\n                },\n            );\n        },\n        // contextmenu\n        cellContextmenu(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.BODY_CELL_CONTEXTMENU,\n                {\n                    event: e,\n                    rowData,\n                    column,\n                },\n            );\n        },\n        // mouseenter\n        cellMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        cellMouseleave(e, fn) {\n            fn && fn(e);\n        },\n        // mousemove\n        cellMousemove(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.BODY_CELL_MOUSEMOVE,\n                {\n                    event: e,\n                    rowData,\n                    column,\n                },\n            );\n        },\n        // mouseover\n        cellMouseover(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.BODY_CELL_MOUSEOVER,\n                {\n                    event: e,\n                    rowData,\n                    column,\n                },\n            );\n        },\n        // mousedown\n        cellMousedown(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.BODY_CELL_MOUSEDOWN,\n                {\n                    event: e,\n                    rowData,\n                    column,\n                },\n            );\n        },\n        // mouseup\n        cellMouseup(e, fn) {\n            fn && fn(e);\n\n            const { column, rowData } = this;\n\n            this.dispatch(COMPS_NAME.VE_TABLE, EMIT_EVENTS.BODY_CELL_MOUSEUP, {\n                event: e,\n                rowData,\n                column,\n            });\n        },\n    },\n    render(h) {\n        const {\n            column,\n            cellClick,\n            rowData,\n            isExpandRow,\n            expandOption,\n            expandedRowkeys,\n            rowKeyFieldName,\n            eventCustomOption,\n            rowIndex,\n        } = this;\n\n        // expand icon props\n        const expandIconProps = {\n            props: {\n                rowData,\n                column,\n                expandOption,\n                expandedRowkeys,\n                rowKeyFieldName,\n                cellClick,\n            },\n        };\n\n        const { rowspan, colspan } = this.getCellSpan();\n        if (!rowspan || !colspan) {\n            return null;\n        }\n\n        // custom on cell event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { bodyCellEvents } = eventCustomOption;\n\n            customEvents = bodyCellEvents\n                ? bodyCellEvents({ row: rowData, column, rowIndex })\n                : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.cellClick(e, click);\n            },\n            dblclick: (e) => {\n                this.cellDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.cellContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.cellMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.cellMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.cellMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.cellMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.cellMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.cellMouseup(e, mouseup);\n            },\n        };\n\n        // td props\n        const tdProps = {\n            class: this.bodyTdClass(),\n            style: this.bodyTdStyle(),\n            attrs: {\n                rowspan,\n                colspan,\n                [COMPS_CUSTOM_ATTRS.BODY_COLUMN_KEY]: column.key,\n            },\n            on: events,\n        };\n\n        return (\n            <td {...tdProps}>\n                {/* expadn tr icon */}\n                {isExpandRow && <ExpandTrIcon {...expandIconProps} />}\n                {/* checkbox content */}\n                {this.getCheckboxContent()}\n                {/* radio content */}\n                {this.getRadioContent()}\n                {/* other cell content */}\n                {this.getRenderContent(h)}\n            </td>\n        );\n    },\n};\n","import BodyTd from \"./body-td\";\nimport { clsName } from \"../util\";\nimport { COMPS_NAME, EMIT_EVENTS, COMPS_CUSTOM_ATTRS } from \"../util/constant\";\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\nimport emitter from \"../../../src/mixins/emitter\";\nimport { isEmptyValue } from \"../../../src/utils\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_TR,\n    mixins: [emitter],\n    props: {\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        columnCollection: {\n            type: Array,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        allRowKeys: {\n            type: Array,\n            required: true,\n        },\n        /*\n        expand\n        */\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // is expand row\n        isExpandRow: {\n            type: Boolean,\n            required: true,\n        },\n        // expanded row keys\n        expandedRowkeys: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        // expand row change\n        expandRowChange: {\n            type: Function,\n            default: null,\n        },\n\n        /*\n        checkbox\n        */\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        internalCheckboxSelectedRowKeys: {\n            type: Array,\n            default: function () {\n                return null;\n            },\n        },\n\n        /*\n        radio\n        */\n        radioOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        internalRadioSelectedRowKey: {\n            type: [String, Number],\n            default: null,\n        },\n        // is virtual scroll\n        isVirtualScroll: {\n            type: Boolean,\n            default: false,\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // highlight row key\n        highlightRowKey: {\n            type: [String, Number],\n            default: null,\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection data\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        bodyIndicatorRowKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // edit opttion\n        editOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    computed: {\n        // current row key\n        currentRowKey() {\n            const { rowKeyFieldName } = this;\n            return rowKeyFieldName ? this.rowData[rowKeyFieldName] : null;\n        },\n        // tr class\n        trClass() {\n            let result = null;\n\n            const { highlightRowKey, currentRowKey } = this;\n\n            let isHighlight = false;\n\n            if (!isEmptyValue(highlightRowKey)) {\n                if (highlightRowKey === currentRowKey) {\n                    isHighlight = true;\n                }\n            }\n\n            result = {\n                [clsName(\"body-tr\")]: true,\n                [clsName(\"tr-highlight\")]: isHighlight,\n            };\n\n            return result;\n        },\n    },\n\n    methods: {\n        // click\n        rowClick(e, fn) {\n            fn && fn(e);\n\n            const { rowData, rowIndex } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE_BODY,\n                EMIT_EVENTS.BODY_ROW_CLICK,\n                {\n                    rowData,\n                    rowIndex,\n                },\n            );\n        },\n        // dblclick\n        rowDblclick(e, fn) {\n            fn && fn(e);\n        },\n        // contextmenu\n        rowContextmenu(e, fn) {\n            fn && fn(e);\n        },\n        // mouseenter\n        rowMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        rowMouseleave(e, fn) {\n            fn && fn(e);\n        },\n        // mousemove\n        rowMousemove(e, fn) {\n            fn && fn(e);\n        },\n        // mouseover\n        rowMouseover(e, fn) {\n            fn && fn(e);\n        },\n        // mousedown\n        rowMousedown(e, fn) {\n            fn && fn(e);\n        },\n        // mouseup\n        rowMouseup(e, fn) {\n            fn && fn(e);\n        },\n    },\n\n    render() {\n        const {\n            colgroups,\n            expandOption,\n            expandRowChange,\n            isExpandRow,\n            expandedRowkeys,\n            checkboxOption,\n            rowKeyFieldName,\n            rowIndex,\n            rowData,\n            internalCheckboxSelectedRowKeys,\n            internalRadioSelectedRowKey,\n            radioOption,\n            cellStyleOption,\n            eventCustomOption,\n        } = this;\n\n        // get td content\n        const getTdContent = () => {\n            return colgroups.map((column) => {\n                const tdProps = {\n                    key: column.key,\n                    props: {\n                        rowIndex,\n                        rowData,\n                        column,\n                        columnCollection: this.columnCollection,\n                        colgroups,\n                        expandOption,\n                        expandedRowkeys,\n                        checkboxOption,\n                        rowKeyFieldName,\n                        allRowKeys: this.allRowKeys,\n                        isExpandRow,\n                        internalCheckboxSelectedRowKeys,\n                        internalRadioSelectedRowKey,\n                        radioOption,\n                        cellStyleOption,\n                        cellSpanOption: this.cellSpanOption,\n                        eventCustomOption,\n                        cellSelectionData: this.cellSelectionData,\n                        cellSelectionRangeData: this.cellSelectionRangeData,\n                        bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\n                        editOption: this.editOption,\n                    },\n                    on: {\n                        [EMIT_EVENTS.EXPAND_ROW_CHANGE]: () =>\n                            expandRowChange(rowData, rowIndex),\n                    },\n                };\n                return <BodyTd {...tdProps} />;\n            });\n        };\n\n        let result = null;\n\n        // custom on row event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { bodyRowEvents } = eventCustomOption;\n            customEvents = bodyRowEvents\n                ? bodyRowEvents({ row: rowData, rowIndex })\n                : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.rowClick(e, click);\n            },\n            dblclick: (e) => {\n                this.rowDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.rowContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.rowMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.rowMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.rowMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.rowMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.rowMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.rowMouseup(e, mouseup);\n            },\n        };\n\n        if (this.isVirtualScroll) {\n            const props = {\n                class: this.trClass,\n                props: {\n                    tagName: \"tr\",\n                    id: this.currentRowKey,\n                },\n                attrs: {\n                    [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\n                },\n                on: {\n                    \"on-dom-resize-change\": ({ key, height }) => {\n                        this.dispatch(\n                            COMPS_NAME.VE_TABLE,\n                            EMIT_EVENTS.BODY_ROW_HEIGHT_CHANGE,\n                            {\n                                rowKey: key,\n                                height,\n                            },\n                        );\n                    },\n                },\n                nativeOn: events,\n            };\n\n            result = (\n                <VueDomResizeObserver {...props}>\n                    {getTdContent()}\n                </VueDomResizeObserver>\n            );\n        } else {\n            const props = {\n                class: this.trClass,\n                attrs: {\n                    [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\n                },\n                on: events,\n            };\n\n            result = <tr {...props}>{getTdContent()}</tr>;\n        }\n\n        return result;\n    },\n};\n","import { clsName } from \"../util\";\nimport { COMPS_NAME } from \"../util/constant\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_TR_SCROLLING,\n    props: {\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n    },\n    computed: {\n        // tr class\n        trClass() {\n            let result = null;\n\n            result = {\n                [clsName(\"body-tr\")]: true,\n                [clsName(\"body-row-scrolling\")]: true,\n            };\n\n            return result;\n        },\n    },\n\n    render() {\n        const { colgroups } = this;\n\n        const props = {\n            class: this.trClass,\n        };\n\n        return (\n            <tr {...props}>\n                <td colSpan={colgroups.length}></td>\n            </tr>\n        );\n    },\n};\n","import { clsName } from \"../util\";\nimport { COMPS_NAME } from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_EXPAND_TR,\n    mixins: [emitter],\n    props: {\n        tableViewportWidth: {\n            type: Number,\n            default: 0,\n        },\n        // expand column\n        expandColumn: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // expanded row keys\n        expandedRowkeys: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n    },\n    computed: {\n        // get column count\n        columnCount() {\n            return this.colgroups.length;\n        },\n        // current row key\n        currentRowKey() {\n            return this.rowData[this.rowKeyFieldName];\n        },\n        // is row expanded\n        isRowExpanded() {\n            let result = false;\n\n            const { expandOption, expandedRowkeys, currentRowKey } = this;\n\n            // defalut expand all rows\n            if (expandOption.defaultExpandAllRows) {\n                result = true;\n            }\n            // defaultExpandedRowKeys includes currentRowKey\n            else if (expandedRowkeys.includes(currentRowKey)) {\n                result = true;\n            }\n\n            return result;\n        },\n        // expand row class\n        expanRowClass() {\n            let result = {\n                [clsName(\"expand-tr\")]: true,\n            };\n            return result;\n        },\n\n        // has left fixed column\n        hasLeftFixedColumn() {\n            return this.colgroups.some((x) => x.fixed === \"left\");\n        },\n\n        // expand td content style\n        expandTdContentStyle() {\n            let result = {};\n\n            const { hasLeftFixedColumn, tableViewportWidth } = this;\n\n            if (hasLeftFixedColumn) {\n                // table width\n                if (tableViewportWidth) {\n                    result[\"width\"] = tableViewportWidth + \"px\";\n                }\n            }\n\n            return result;\n        },\n    },\n    methods: {\n        // get expande row content\n        getExpandRowContent(h) {\n            const { expandOption } = this;\n            let result =\n                expandOption.render &&\n                expandOption.render(\n                    {\n                        row: this.rowData,\n                        column: this.expandColumn,\n                        rowIndex: this.rowIndex,\n                    },\n                    h,\n                );\n\n            return result;\n        },\n    },\n    render(h) {\n        const { isRowExpanded, columnCount, getExpandRowContent } = this;\n\n        let result = null;\n\n        if (isRowExpanded) {\n            let content = getExpandRowContent(h);\n            result = (\n                <tr class={this.expanRowClass}>\n                    <td class={clsName(\"expand-td\")} colSpan={columnCount}>\n                        <div\n                            class={clsName(\"expand-td-content\")}\n                            style={this.expandTdContentStyle}\n                        >\n                            {content}\n                        </div>\n                    </td>\n                </tr>\n            );\n        }\n\n        return result;\n    },\n};\n","import BodyTr from \"./body-tr\";\nimport BodyTrScrolling from \"./body-tr-scrolling\";\nimport ExpandTr from \"./expand-tr\";\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\nimport {\n    getDomResizeObserverCompKey,\n    getFixedTotalWidthByColumnKey,\n    clsName,\n} from \"../util\";\nimport { getValByUnit } from \"../../../src/utils/index.js\";\nimport emitter from \"../../../src/mixins/emitter\";\nimport {\n    COMPS_NAME,\n    EMIT_EVENTS,\n    COLUMN_TYPES,\n    EXPAND_TRIGGER_TYPES,\n} from \"../util/constant\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY,\n    mixins: [emitter],\n    props: {\n        tableViewportWidth: {\n            type: Number,\n            default: 0,\n        },\n        columnsOptionResetTime: {\n            type: Number,\n            default: 0,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        actualRenderTableData: {\n            type: Array,\n            required: true,\n        },\n        hasFixedColumn: {\n            type: Boolean,\n            default: false,\n        },\n        allRowKeys: {\n            type: Array,\n            required: true,\n        },\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // radio option\n        radioOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // virual scroll\n        virtualScrollOption: {\n            type: Object,\n            default: null,\n        },\n        // is virtual scroll\n        isVirtualScroll: {\n            type: Boolean,\n            default: false,\n        },\n        // is scrolling\n        showVirtualScrollingPlaceholder: {\n            type: Boolean,\n            default: false,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // highlight row key\n        highlightRowKey: {\n            type: [String, Number],\n            default: null,\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection option\n        cellSelectionOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection data\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection range data\n        cellSelectionRangeData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        bodyIndicatorRowKeys: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // edit option\n        editOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            // columns widths map\n            colsWidths: new Map(),\n            /*\n            internal expand row keys\n            1、当没有设置 expandedRowKeys 时生效\n            */\n            internalExpandRowkeys: [],\n            /*\n            1、存储当前多选功能的rowkey 信息\n            */\n            internalCheckboxSelectedRowKeys: [],\n            /*\n            1、存储当前单选功能的rowkey 信息\n            */\n            internalRadioSelectedRowKey: null,\n            // virtual scroll preview rendered rowKey\n            virtualScrollPreviewRenderedRowKeys: [],\n            // virtual scroll repeat rendered rowKey\n            virtualScrollRepeatRenderedRowKeys: [],\n        };\n    },\n    computed: {\n        /* \n        column collenction info \n        1、style of each column\n        2、class of each column\n        */\n        columnCollection() {\n            let columnCollection = [];\n\n            const { colgroups } = this;\n\n            colgroups.forEach((col) => {\n                const colKey = col.key;\n\n                let columnCollectionItem = {\n                    colKey: colKey,\n                    class: {\n                        [clsName(\"last-left-fixed-column\")]:\n                            this.isLastLeftFixedColumn(col),\n                        [clsName(\"first-right-fixed-column\")]:\n                            this.isfirstRightFixedColumn(col),\n                    },\n                    style: {},\n                };\n\n                const { fixed, align } = col;\n\n                columnCollectionItem.style[\"text-align\"] = align || \"center\";\n\n                if (fixed) {\n                    let totalWidth = 0;\n                    // column index\n                    const columnIndex = colgroups.findIndex(\n                        (x) => x.key === colKey,\n                    );\n                    if (\n                        (fixed === \"left\" && columnIndex > 0) ||\n                        (fixed === \"right\" &&\n                            columnIndex < colgroups.length - 1)\n                    ) {\n                        totalWidth = getFixedTotalWidthByColumnKey({\n                            colgroups,\n                            colKey,\n                            fixed,\n                        });\n\n                        totalWidth = getValByUnit(totalWidth);\n                    }\n\n                    columnCollectionItem.style[\"left\"] =\n                        fixed === \"left\" ? totalWidth : \"\";\n                    columnCollectionItem.style[\"right\"] =\n                        fixed === \"right\" ? totalWidth : \"\";\n                }\n\n                columnCollection.push(columnCollectionItem);\n            });\n            return columnCollection;\n        },\n        // expand column\n        expandColumn() {\n            return this.colgroups.find((x) => x.type === COLUMN_TYPES.EXPAND);\n        },\n        /*\n        是否是可控行展开\n        1、当设置了 expandedRowKeys 属性时则为可控行展开\n        */\n        isControlledExpand() {\n            return (\n                this.expandOption &&\n                Array.isArray(this.expandOption.expandedRowKeys)\n            );\n        },\n\n        // expanded row keys\n        expandedRowkeys() {\n            return this.isControlledExpand\n                ? this.expandOption.expandedRowKeys\n                : this.internalExpandRowkeys;\n        },\n\n        // disable row selected row keys\n        disableCheckboxSelectedRowKeys() {\n            let result = [];\n\n            const { checkboxOption, internalCheckboxSelectedRowKeys } = this;\n\n            if (!checkboxOption) {\n                return result;\n            }\n            const { disableSelectedRowKeys } = checkboxOption;\n\n            if (\n                internalCheckboxSelectedRowKeys.length > 0 &&\n                Array.isArray(disableSelectedRowKeys) &&\n                disableSelectedRowKeys.length > 0\n            ) {\n                disableSelectedRowKeys.forEach((rowkey) => {\n                    if (internalCheckboxSelectedRowKeys.includes(rowkey)) {\n                        result.push(rowkey);\n                    }\n                });\n            }\n\n            return result;\n        },\n\n        // disable row unselected row keys\n        disableCheckboxUnselectedRowKeys() {\n            let result = [];\n\n            const { checkboxOption, internalCheckboxSelectedRowKeys } = this;\n\n            if (!checkboxOption) {\n                return result;\n            }\n            const { disableSelectedRowKeys } = checkboxOption;\n\n            if (\n                Array.isArray(disableSelectedRowKeys) &&\n                disableSelectedRowKeys.length > 0\n            ) {\n                disableSelectedRowKeys.forEach((rowkey) => {\n                    if (!internalCheckboxSelectedRowKeys.includes(rowkey)) {\n                        result.push(rowkey);\n                    }\n                });\n            }\n\n            return result;\n        },\n\n        /*\n        is row keys selected all\n        为 true 的条件：选中数量 + 禁用选中数量 === 总量\n        */\n        isCheckboxSelectedAll() {\n            if (this.allRowKeys.length > 0) {\n                if (\n                    this.internalCheckboxSelectedRowKeys.length +\n                        this.disableCheckboxUnselectedRowKeys.length ===\n                    this.allRowKeys.length\n                ) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        // is checkbox indeterminate\n        isCheckboxIndeterminate() {\n            const { internalCheckboxSelectedRowKeys, allRowKeys } = this;\n\n            return (\n                internalCheckboxSelectedRowKeys.length > 0 &&\n                internalCheckboxSelectedRowKeys.length < allRowKeys.length\n            );\n        },\n        // 是否是受控属性（取决于selectedRowKey）\n        isControlledRadio() {\n            const { radioOption } = this;\n\n            return (\n                radioOption &&\n                Object.keys(radioOption).includes(\"selectedRowKey\")\n            );\n        },\n    },\n    watch: {\n        // watch expand Option\n        expandOption: {\n            handler: function () {\n                this.initInternalExpandRowKeys();\n            },\n            immediate: true,\n        },\n        // watch expandOption expandedRowKeys\n        \"expandOption.expandedRowKeys\": {\n            handler: function () {\n                this.initInternalExpandRowKeys();\n            },\n        },\n        // watch checkbox option\n        checkboxOption: {\n            handler: function () {\n                this.initInternalCheckboxSelectedRowKeys();\n            },\n            immediate: true,\n        },\n        // watch selectedRowKeys\n        \"checkboxOption.selectedRowKeys\": {\n            handler: function () {\n                this.resetInternalCheckboxSelectedRowKeys();\n            },\n        },\n        // watch internalCheckboxSelectedRowKeys\n        internalCheckboxSelectedRowKeys: {\n            handler: function () {\n                // send to checkbox all(in header)\n                this.sendToCheckboxAll();\n            },\n        },\n        // watch checkbox option\n        radioOption: {\n            handler: function () {\n                this.initInternalRadioSelectedRowKey();\n            },\n            immediate: true,\n        },\n        // watch selectedRowKeys\n        \"radioOption.selectedRowKey\": {\n            handler: function () {\n                this.initInternalRadioSelectedRowKey();\n            },\n        },\n    },\n    methods: {\n        // is last left fixed column\n        isLastLeftFixedColumn(column) {\n            let result = false;\n\n            const { colgroups } = this;\n\n            const { fixed } = column;\n\n            if (fixed === \"left\") {\n                const { field } = column;\n                const leftFixedColumns = colgroups.filter(\n                    (x) => x.fixed === \"left\",\n                );\n                const index = leftFixedColumns.findIndex(\n                    (x) => x.field === field,\n                );\n\n                if (index === leftFixedColumns.length - 1) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        // is first right fixed column\n        isfirstRightFixedColumn(column) {\n            let result = false;\n\n            const { colgroups } = this;\n\n            const { fixed } = column;\n\n            if (fixed === \"right\") {\n                const { field } = column;\n                const rightFixedColumns = colgroups.filter(\n                    (x) => x.fixed === \"right\",\n                );\n\n                if (rightFixedColumns[0].field === field) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        /*\n         * @expandRowChange\n         * @desc  row expand change\n         * @param {object} rowData - row data\n         * @param {number} rowIndex - row index\n         */\n        expandRowChange(rowData, rowIndex) {\n            const {\n                expandOption,\n                internalExpandRowkeys,\n                expandedRowkeys,\n                rowKeyFieldName,\n            } = this;\n\n            // deal before expand row method\n            if (typeof expandOption.beforeExpandRowChange === \"function\") {\n                const beforeExpandRowResult =\n                    expandOption.beforeExpandRowChange({\n                        beforeExpandedRowKeys: expandedRowkeys,\n                        row: rowData,\n                        rowIndex,\n                    });\n                // interrupt execute\n                if (beforeExpandRowResult === false) {\n                    return false;\n                }\n            }\n\n            const rowKey = rowData[rowKeyFieldName];\n\n            const rowKeyIndex = internalExpandRowkeys.indexOf(rowKey);\n            if (rowKeyIndex > -1) {\n                internalExpandRowkeys.splice(rowKeyIndex, 1);\n            } else {\n                internalExpandRowkeys.push(rowKey);\n            }\n\n            // deal after expand row method\n            if (typeof expandOption.afterExpandRowChange === \"function\") {\n                expandOption.afterExpandRowChange({\n                    afterExpandedRowKeys: internalExpandRowkeys,\n                    row: rowData,\n                    rowIndex,\n                });\n            }\n        },\n\n        /*\n         * @rowClick\n         * @desc  row expand click event\n         * @param {object} rowData - row data\n         * @param {number} rowIndex - row index\n         */\n        rowClick({ rowData, rowIndex }) {\n            const {\n                expandOption,\n                isExpandRow,\n                expandRowChange,\n                rowKeyFieldName,\n            } = this;\n\n            // 行高亮功能\n            if (rowKeyFieldName) {\n                const rowKey = rowData[rowKeyFieldName];\n                this.$emit(EMIT_EVENTS.HIGHLIGHT_ROW_CHANGE, { rowKey });\n            }\n\n            // 行展开功能\n            if (!isExpandRow({ rowData, rowIndex })) {\n                return false;\n            }\n\n            const trigger = expandOption.trigger;\n\n            // expand row by click row\n            if (trigger === EXPAND_TRIGGER_TYPES.ROW) {\n                expandRowChange(rowData, rowIndex);\n            }\n        },\n\n        /*\n         * @isExpandRow\n         * @desc  is expand row\n         * @param {object} rowData - row data\n         * @param {number} rowIndex - row index\n         */\n        isExpandRow({ rowData, rowIndex }) {\n            let result = false;\n\n            const { expandColumn, expandOption } = this;\n\n            if (expandColumn && expandOption) {\n                // 是否允许展开\n                let expandable = true;\n                if (typeof expandOption.expandable === \"function\") {\n                    expandable = expandOption.expandable({\n                        row: rowData,\n                        column: expandColumn,\n                        rowIndex,\n                    });\n                }\n\n                if (expandable !== false) {\n                    result = true;\n                }\n            }\n\n            return result;\n        },\n\n        /*\n         * @tdSizeChange\n         * @desc  td size change\n         * @param {any} key - column key\n         * @param {number|string} width - column real width\n         */\n        tdSizeChange({ key, width }) {\n            const { colsWidths } = this;\n            colsWidths.set(key, width);\n            this.$emit(EMIT_EVENTS.BODY_CELL_WIDTH_CHANGE, colsWidths);\n        },\n\n        // init internal expand row keys\n        initInternalExpandRowKeys() {\n            const { expandOption, isControlledExpand, allRowKeys } = this;\n\n            if (!expandOption) {\n                return false;\n            }\n\n            if (isControlledExpand) {\n                this.internalExpandRowkeys =\n                    expandOption.expandedRowKeys.slice(0);\n            } else if (expandOption.defaultExpandAllRows) {\n                this.internalExpandRowkeys = allRowKeys;\n            } else if (expandOption.defaultExpandedRowKeys) {\n                this.internalExpandRowkeys =\n                    expandOption.defaultExpandedRowKeys.slice(0);\n            }\n        },\n        // get expand row\n        getExpandRowComp({ rowData, rowIndex }) {\n            if (this.isExpandRow({ rowData, rowIndex })) {\n                const expandTrProps = {\n                    props: {\n                        tableViewportWidth: this.tableViewportWidth,\n                        colgroups: this.colgroups,\n                        expandOption: this.expandOption,\n                        expandedRowkeys: this.expandedRowkeys,\n                        expandColumn: this.expandColumn,\n                        rowKeyFieldName: this.rowKeyFieldName,\n                        rowData,\n                        rowIndex,\n                    },\n                };\n\n                return <ExpandTr {...expandTrProps} />;\n            }\n\n            return null;\n        },\n\n        // send to checkbox all\n        sendToCheckboxAll() {\n            const { isCheckboxSelectedAll, isCheckboxIndeterminate } = this;\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO,\n                {\n                    isIndeterminate: isCheckboxIndeterminate,\n                    isSelected: isCheckboxSelectedAll,\n                },\n            );\n        },\n\n        // init internal Radio SelectedRowKey\n        initInternalRadioSelectedRowKey() {\n            const { radioOption, isControlledRadio } = this;\n\n            if (!radioOption) {\n                return false;\n            }\n\n            const { selectedRowKey, defaultSelectedRowKey } = radioOption;\n\n            this.internalRadioSelectedRowKey = isControlledRadio\n                ? selectedRowKey\n                : defaultSelectedRowKey;\n        },\n\n        // init internal Checkbox SelectedRowKeys\n        initInternalCheckboxSelectedRowKeys() {\n            let result = [];\n            const { checkboxOption, allRowKeys } = this;\n\n            if (!checkboxOption) {\n                return false;\n            }\n\n            const {\n                selectedRowKeys,\n                defaultSelectedAllRows,\n                defaultSelectedRowKeys,\n            } = checkboxOption;\n\n            if (Array.isArray(selectedRowKeys)) {\n                result = selectedRowKeys;\n            } else if (defaultSelectedAllRows) {\n                result = allRowKeys;\n            } else if (Array.isArray(defaultSelectedRowKeys)) {\n                result = defaultSelectedRowKeys;\n            }\n            this.internalCheckboxSelectedRowKeys = result;\n        },\n        // reset internalCheckboxSelectedRowKeys by selectedRowKeys\n        resetInternalCheckboxSelectedRowKeys() {\n            this.internalCheckboxSelectedRowKeys =\n                this.checkboxOption.selectedRowKeys.slice(0);\n        },\n\n        /*\n         * @checkboxSelectedRowChange\n         * @desc  selected row change\n         * @param {number|string} rowKey - rowKey\n         * @param {bool} isSelected\n         */\n        checkboxSelectedRowChange({ rowKey, isSelected }) {\n            const {\n                checkboxOption,\n                internalCheckboxSelectedRowKeys,\n                rowKeyFieldName,\n            } = this;\n            const { selectedRowChange, selectedRowKeys } = checkboxOption;\n\n            let internalCheckboxSelectedRowKeysTemp =\n                internalCheckboxSelectedRowKeys.slice(0);\n\n            // will selected\n            const rowKeyIndex =\n                internalCheckboxSelectedRowKeysTemp.indexOf(rowKey);\n            if (isSelected) {\n                // bug fixed:通过行点击触发，导致key重复的问题\n                if (rowKeyIndex === -1) {\n                    internalCheckboxSelectedRowKeysTemp.push(rowKey);\n                }\n            } else {\n                if (rowKeyIndex > -1) {\n                    internalCheckboxSelectedRowKeysTemp.splice(rowKeyIndex, 1);\n                }\n            }\n\n            // 非可控才改变 internalCheckboxSelectedRowKeys\n            if (!Array.isArray(selectedRowKeys)) {\n                this.internalCheckboxSelectedRowKeys =\n                    internalCheckboxSelectedRowKeysTemp;\n            }\n\n            selectedRowChange({\n                row: this.actualRenderTableData.find(\n                    (x) => x[rowKeyFieldName] === rowKey,\n                ),\n                isSelected,\n                selectedRowKeys: internalCheckboxSelectedRowKeysTemp,\n            });\n        },\n\n        /*\n         * @checkboxSelectedAllChange\n         * @desc  selected all change\n         * @param {bool} isSelected - is selected\n         */\n        checkboxSelectedAllChange({ isSelected }) {\n            const {\n                checkboxOption,\n                internalCheckboxSelectedRowKeys,\n                allRowKeys,\n                disableCheckboxSelectedRowKeys,\n                disableCheckboxUnselectedRowKeys,\n            } = this;\n            const { selectedAllChange, selectedRowKeys } = checkboxOption;\n\n            let internalCheckboxSelectedRowKeysTemp =\n                internalCheckboxSelectedRowKeys.slice(0);\n            // selected all\n            if (isSelected) {\n                // except disable Row Unselected keys\n                let allSelectedKeys = allRowKeys.slice(0);\n                if (disableCheckboxUnselectedRowKeys.length > 0) {\n                    disableCheckboxUnselectedRowKeys.forEach((rowkey) => {\n                        let index = allSelectedKeys.indexOf(rowkey);\n                        if (index > -1) {\n                            allSelectedKeys.splice(index, 1);\n                        }\n                    });\n                }\n\n                internalCheckboxSelectedRowKeysTemp = allSelectedKeys;\n            } else {\n                // except disable Row Selected keys\n                internalCheckboxSelectedRowKeysTemp =\n                    disableCheckboxSelectedRowKeys;\n            }\n\n            // 非可控才改变 internalCheckboxSelectedRowKeys\n            if (!Array.isArray(selectedRowKeys)) {\n                this.internalCheckboxSelectedRowKeys =\n                    internalCheckboxSelectedRowKeysTemp;\n            }\n\n            selectedAllChange &&\n                selectedAllChange({\n                    isSelected,\n                    selectedRowKeys: internalCheckboxSelectedRowKeysTemp,\n                    //changeRowKeys:\n                });\n        },\n\n        /*\n         * @radioSelectedRowChange\n         * @desc  selected all change\n         * @param {number|string} rowKey - rowKey\n         */\n        radioSelectedRowChange({ rowKey }) {\n            const { radioOption, rowKeyFieldName, isControlledRadio } = this;\n\n            const { selectedRowChange } = radioOption;\n\n            // 非受控\n            if (!isControlledRadio) {\n                this.internalRadioSelectedRowKey = rowKey;\n            }\n\n            selectedRowChange({\n                row: this.actualRenderTableData.find(\n                    (x) => x[rowKeyFieldName] === rowKey,\n                ),\n            });\n        },\n        // get tr key\n        getTrKey({ rowData, rowIndex }) {\n            let result = rowIndex;\n\n            const { rowKeyFieldName } = this;\n            if (rowKeyFieldName) {\n                result = rowData[rowKeyFieldName];\n            }\n            return result;\n        },\n\n        /*\n        rendering row keys\n        virtual scrolling will invoke\n        */\n        renderingRowKeys(rowKeys) {\n            const {\n                virtualScrollPreviewRenderedRowKeys: previewRenderedRowKeys,\n            } = this;\n\n            this.virtualScrollRepeatRenderedRowKeys = rowKeys.filter(\n                (rowKey) => {\n                    return previewRenderedRowKeys.indexOf(rowKey) != -1;\n                },\n            );\n\n            this.virtualScrollPreviewRenderedRowKeys = rowKeys;\n        },\n    },\n    mounted() {\n        // receive checkbox row selected change from VE_TABLE_BODY_CHECKBOX_CONTENT\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ROW_CHANGE, (params) => {\n            this.checkboxSelectedRowChange(params);\n        });\n\n        // receive checkbox row selected change from VE_TABLE_BODY_CHECKBOX_CONTENT\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE, (params) => {\n            this.checkboxSelectedAllChange(params);\n        });\n\n        // receive radio row selected change from VE_TABLE_BODY_RADIO_CONTENT\n        this.$on(EMIT_EVENTS.RADIO_SELECTED_ROW_CHANGE, (params) => {\n            this.radioSelectedRowChange(params);\n        });\n\n        // recieve tr click\n        this.$on(EMIT_EVENTS.BODY_ROW_CLICK, (params) => {\n            this.rowClick(params);\n        });\n\n        if (this.checkboxOption) {\n            // 这里 nextTick 解决由于子组件先初始化，导致父组件无法接收消息的问题\n            this.$nextTick(() => {\n                this.sendToCheckboxAll();\n            });\n        }\n\n        // add key down event listener\n        document.addEventListener(\"keydown\", this.dealKeydownEvent);\n    },\n    destroyed() {\n        // remove key down event listener\n        document.removeEventListener(\"keydown\", this.dealKeydownEvent);\n    },\n    render() {\n        const {\n            colgroups,\n            actualRenderTableData,\n            expandOption,\n            expandRowChange,\n            isExpandRow,\n            getExpandRowComp,\n            expandedRowkeys,\n            checkboxOption,\n            radioOption,\n            rowKeyFieldName,\n            tdSizeChange,\n            internalCheckboxSelectedRowKeys,\n            internalRadioSelectedRowKey,\n            isVirtualScroll,\n            cellStyleOption,\n            showVirtualScrollingPlaceholder,\n        } = this;\n\n        const { virtualScrollRepeatRenderedRowKeys } = this;\n\n        return (\n            <tbody>\n                {/* Measure each column width with additional hidden col */}\n                <tr style=\"height:0;\">\n                    {colgroups.map((column) => {\n                        const measureTdProps = {\n                            key: getDomResizeObserverCompKey(\n                                column.key,\n                                this.columnsOptionResetTime,\n                            ),\n                            props: {\n                                tagName: \"td\",\n                                id: column.key,\n                            },\n                            on: {\n                                \"on-dom-resize-change\": tdSizeChange,\n                            },\n                            style: {\n                                padding: 0,\n                                border: 0,\n                                height: 0,\n                            },\n                        };\n                        return <VueDomResizeObserver {...measureTdProps} />;\n                    })}\n                </tr>\n                {actualRenderTableData.map((rowData, rowIndex) => {\n                    const trProps = {\n                        key: this.getTrKey({ rowData, rowIndex }),\n                        props: {\n                            rowIndex,\n                            rowData,\n                            colgroups,\n                            expandOption,\n                            expandedRowkeys,\n                            checkboxOption,\n                            radioOption,\n                            rowKeyFieldName,\n                            allRowKeys: this.allRowKeys,\n                            expandRowChange,\n                            internalCheckboxSelectedRowKeys,\n                            internalRadioSelectedRowKey,\n                            isVirtualScroll,\n                            isExpandRow: isExpandRow({\n                                rowData,\n                                rowIndex,\n                            }),\n                            cellStyleOption,\n                            cellSpanOption: this.cellSpanOption,\n                            highlightRowKey: this.highlightRowKey,\n                            eventCustomOption: this.eventCustomOption,\n                            cellSelectionData: this.cellSelectionData,\n                            editOption: this.editOption,\n                            columnCollection: this.columnCollection,\n                            cellSelectionRangeData: this.cellSelectionRangeData,\n                            bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\n                        },\n                    };\n\n                    if (showVirtualScrollingPlaceholder) {\n                        const trPropsScrolling = {\n                            key: this.getTrKey({ rowData, rowIndex }),\n                            props: {\n                                colgroups,\n                            },\n                        };\n\n                        if (\n                            virtualScrollRepeatRenderedRowKeys.indexOf(\n                                rowData[this.rowKeyFieldName],\n                            ) != -1\n                        ) {\n                            return [\n                                // body tr\n                                <BodyTr {...trProps} />,\n                            ];\n                        } else {\n                            return <BodyTrScrolling {...trPropsScrolling} />;\n                        }\n                    } else {\n                        return [\n                            // body tr\n                            <BodyTr {...trProps} />,\n                            // expand row\n                            getExpandRowComp({ rowData, rowIndex }),\n                        ];\n                    }\n                })}\n            </tbody>\n        );\n    },\n};\n","import { getFixedTotalWidthByColumnKey, clsName } from \"../util\";\nimport { getValByUnit } from \"../../../src/utils/index.js\";\n\nimport { COMPS_NAME } from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_TD,\n    mixins: [emitter],\n    props: {\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        column: {\n            type: Object,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection key data\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // footer rows\n        footerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        // fixed footer\n        fixedFooter: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    computed: {\n        // is last left fixed column\n        isLastLeftFixedColumn() {\n            let result = false;\n\n            const { colgroups, column } = this;\n\n            const { fixed } = column;\n\n            if (fixed === \"left\") {\n                const { field } = column;\n                const leftFixedColumns = colgroups.filter(\n                    (x) => x.fixed === \"left\",\n                );\n                const index = leftFixedColumns.findIndex(\n                    (x) => x.field === field,\n                );\n\n                if (index === leftFixedColumns.length - 1) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n        // is first right fixed column\n        isfirstRightFixedColumn() {\n            let result = false;\n\n            const { colgroups, column } = this;\n\n            const { fixed } = column;\n\n            if (fixed === \"right\") {\n                const { field } = column;\n                const leftFixedColumns = colgroups.filter(\n                    (x) => x.fixed === \"right\",\n                );\n\n                if (leftFixedColumns[0].field === field) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n    },\n    methods: {\n        /*\n         * @getBodyTdClass\n         * @desc  get body td class\n         * @param {string} fixed - 固定方式\n         */\n        getBodyTdClass({ fixed }) {\n            let result = {\n                [clsName(\"footer-td\")]: true,\n            };\n\n            const {\n                cellStyleOption,\n                rowData,\n                column,\n                rowIndex,\n                cellSelectionData,\n                rowKeyFieldName,\n            } = this;\n\n            // column fixed\n            if (fixed) {\n                result[clsName(\"fixed-left\")] = fixed === \"left\";\n                result[clsName(\"fixed-right\")] = fixed === \"right\";\n                result[clsName(\"last-left-fixed-column\")] =\n                    this.isLastLeftFixedColumn;\n                result[clsName(\"first-right-fixed-column\")] =\n                    this.isfirstRightFixedColumn;\n            }\n\n            // cell style option\n            if (\n                cellStyleOption &&\n                typeof cellStyleOption.footerCellClass === \"function\"\n            ) {\n                const customClass = cellStyleOption.footerCellClass({\n                    row: rowData,\n                    column,\n                    rowIndex,\n                });\n                if (customClass) {\n                    result[customClass] = true;\n                }\n            }\n            // cell selection option\n            if (cellSelectionData) {\n                const { rowKey, colKey } = cellSelectionData.currentCell;\n                if (\n                    rowData[rowKeyFieldName] === rowKey &&\n                    column[\"key\"] === colKey\n                ) {\n                    result[clsName(\"cell-selection\")] = true;\n                }\n            }\n\n            return result;\n        },\n\n        /*\n         * @getBodyTdStyle\n         * @desc  get body td style\n         * @param {any} key - column key\n         * @param {string} align - 居中方式\n         * @param {bool} fixed - 固定方式\n         */\n        getBodyTdStyle({ key, align, fixed }) {\n            let result = {};\n\n            const { colgroups, rowIndex, footerRows } = this;\n\n            // text align\n            result[\"text-align\"] = align || \"center\";\n\n            // fixed left total width or right total width\n            if (fixed) {\n                let totalWidth = 0;\n                // column index\n                const columnIndex = colgroups.findIndex((x) => x.key === key);\n                if (\n                    (fixed === \"left\" && columnIndex > 0) ||\n                    (fixed === \"right\" && columnIndex < colgroups.length - 1)\n                ) {\n                    totalWidth = getFixedTotalWidthByColumnKey({\n                        colgroups,\n                        colKey: key,\n                        fixed,\n                    });\n\n                    totalWidth = getValByUnit(totalWidth);\n                }\n\n                result[\"left\"] = fixed === \"left\" ? totalWidth : \"\";\n                result[\"right\"] = fixed === \"right\" ? totalWidth : \"\";\n            }\n\n            // footer rows th fixed bottom\n            if (this.fixedFooter) {\n                let rowHeight = 0;\n                if (rowIndex !== footerRows.length - 1) {\n                    rowHeight = footerRows.reduce(\n                        (total, currentVal, index) => {\n                            return index > rowIndex\n                                ? currentVal.rowHeight + total\n                                : total;\n                        },\n                        0,\n                    );\n                }\n                rowHeight = getValByUnit(rowHeight);\n\n                result[\"bottom\"] = rowHeight;\n            }\n\n            return result;\n        },\n\n        // get render content\n        getRenderContent(h) {\n            let content = null;\n\n            const { column, rowData, rowIndex } = this;\n\n            // has render function\n            if (typeof column.renderFooterCell === \"function\") {\n                const renderResult = column.renderFooterCell(\n                    {\n                        row: rowData,\n                        column,\n                        rowIndex,\n                    },\n                    h,\n                );\n\n                content = renderResult;\n            } else {\n                content = rowData[column.field];\n            }\n            return content;\n        },\n\n        // get cell span\n        getCellSpan() {\n            const { cellSpanOption, rowData, column, rowIndex } = this;\n            let rowspan = 1;\n            let colspan = 1;\n\n            if (cellSpanOption) {\n                const { footerCellSpan } = cellSpanOption;\n\n                if (typeof footerCellSpan === \"function\") {\n                    const result = footerCellSpan({\n                        row: rowData,\n                        column,\n                        rowIndex,\n                    });\n\n                    if (typeof result === \"object\") {\n                        rowspan = result.rowspan;\n                        colspan = result.colspan;\n                    }\n                }\n            }\n\n            return { rowspan, colspan };\n        },\n        // cell click\n        cellClick(e, fn) {\n            fn && fn(e);\n        },\n        // dblclick\n        cellDblclick(e, fn) {\n            fn && fn(e);\n        },\n        // contextmenu\n        cellContextmenu(e, fn) {\n            fn && fn(e);\n        },\n        // mouseenter\n        cellMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        cellMouseleave(e, fn) {\n            fn && fn(e);\n        },\n        // mousemove\n        cellMousemove(e, fn) {\n            fn && fn(e);\n        },\n        // mouseover\n        cellMouseover(e, fn) {\n            fn && fn(e);\n        },\n        // mousedown\n        cellMousedown(e, fn) {\n            fn && fn(e);\n        },\n        // mouseup\n        cellMouseup(e, fn) {\n            fn && fn(e);\n        },\n    },\n    render(h) {\n        const { column, rowData, rowIndex, eventCustomOption } = this;\n\n        const { rowspan, colspan } = this.getCellSpan();\n        if (!rowspan || !colspan) {\n            return null;\n        }\n\n        // custom on cell event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { footerCellEvents } = eventCustomOption;\n            customEvents = footerCellEvents\n                ? footerCellEvents({ row: rowData, column, rowIndex })\n                : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.cellClick(e, click);\n            },\n            dblclick: (e) => {\n                this.cellDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.cellContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.cellMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.cellMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.cellMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.cellMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.cellMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.cellMouseup(e, mouseup);\n            },\n        };\n\n        // td props\n        const tdProps = {\n            class: this.getBodyTdClass(column),\n            style: this.getBodyTdStyle(column),\n            attrs: {\n                rowspan,\n                colspan,\n            },\n            on: events,\n        };\n\n        return (\n            <td {...tdProps}>\n                {/* other cell content */}\n                {this.getRenderContent(h)}\n            </td>\n        );\n    },\n};\n","import FooterTd from \"./footer-td\";\nimport { clsName } from \"../util\";\nimport { COMPS_NAME, EMIT_EVENTS, COMPS_CUSTOM_ATTRS } from \"../util/constant\";\nimport VueDomResizeObserver from \"../../../src/comps/resize-observer\";\nimport emitter from \"../../../src/mixins/emitter\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_BODY_TR,\n    mixins: [emitter],\n    props: {\n        rowData: {\n            type: Object,\n            required: true,\n        },\n        rowIndex: {\n            type: Number,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection key data\n        cellSelectionData: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // footer rows\n        footerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        // fixed footer\n        fixedFooter: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    computed: {\n        // current row key\n        currentRowKey() {\n            const { rowKeyFieldName } = this;\n            return rowKeyFieldName ? this.rowData[rowKeyFieldName] : null;\n        },\n        // tr class\n        trClass() {\n            let result = null;\n\n            result = {\n                [clsName(\"footer-tr\")]: true,\n            };\n\n            return result;\n        },\n    },\n\n    methods: {\n        // tr height change\n        trHeightChange({ height }) {\n            /*  this.$emit(EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE, {\n                rowIndex: this.rowIndex,\n                height: height\n            }); */\n\n            this.dispatch(\n                COMPS_NAME.VE_TABLE,\n                EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE,\n                {\n                    rowIndex: this.rowIndex,\n                    height: height,\n                },\n            );\n        },\n        // click\n        rowClick(e, fn) {\n            fn && fn(e);\n\n            /*   this.dispatch(COMPS_NAME.VE_TABLE_BODY, EMIT_EVENTS.BODY_TR_CLICK, {\n                rowData,\n                rowIndex\n            }); */\n        },\n        // dblclick\n        rowDblclick(e, fn) {\n            fn && fn(e);\n        },\n        // contextmenu\n        rowContextmenu(e, fn) {\n            fn && fn(e);\n        },\n        // mouseenter\n        rowMouseenter(e, fn) {\n            fn && fn(e);\n        },\n        // mouseleave\n        rowMouseleave(e, fn) {\n            fn && fn(e);\n        },\n        // mousemove\n        rowMousemove(e, fn) {\n            fn && fn(e);\n        },\n        // mouseover\n        rowMouseover(e, fn) {\n            fn && fn(e);\n        },\n        // mousedown\n        rowMousedown(e, fn) {\n            fn && fn(e);\n        },\n        // mouseup\n        rowMouseup(e, fn) {\n            fn && fn(e);\n        },\n    },\n\n    render() {\n        const {\n            colgroups,\n            rowKeyFieldName,\n            rowIndex,\n            rowData,\n            cellStyleOption,\n            eventCustomOption,\n        } = this;\n\n        // get td content\n        const getTdContent = () => {\n            return colgroups.map((column) => {\n                const tdProps = {\n                    key: column.key,\n                    props: {\n                        rowIndex,\n                        rowData,\n                        column,\n                        colgroups,\n                        rowKeyFieldName,\n                        cellStyleOption,\n                        cellSelectionData: this.cellSelectionData,\n                        footerRows: this.footerRows,\n                        fixedFooter: this.fixedFooter,\n                        cellSpanOption: this.cellSpanOption,\n                        eventCustomOption: this.eventCustomOption,\n                    },\n                };\n                return <FooterTd {...tdProps} />;\n            });\n        };\n\n        // custom on row event\n        let customEvents = {};\n        if (eventCustomOption) {\n            const { footerRowEvents } = eventCustomOption;\n            customEvents = footerRowEvents\n                ? footerRowEvents({ row: rowData, rowIndex })\n                : {};\n        }\n\n        const {\n            click,\n            dblclick,\n            contextmenu,\n            mouseenter,\n            mouseleave,\n            mousemove,\n            mouseover,\n            mousedown,\n            mouseup,\n        } = customEvents;\n\n        const events = {\n            click: (e) => {\n                this.rowClick(e, click);\n            },\n            dblclick: (e) => {\n                this.rowDblclick(e, dblclick);\n            },\n            contextmenu: (e) => {\n                this.rowContextmenu(e, contextmenu);\n            },\n            mouseenter: (e) => {\n                this.rowMouseenter(e, mouseenter);\n            },\n            mouseleave: (e) => {\n                this.rowMouseleave(e, mouseleave);\n            },\n            mousemove: (e) => {\n                this.rowMousemove(e, mousemove);\n            },\n            mouseover: (e) => {\n                this.rowMouseover(e, mouseover);\n            },\n            mousedown: (e) => {\n                this.rowMousedown(e, mousedown);\n            },\n            mouseup: (e) => {\n                this.rowMouseup(e, mouseup);\n            },\n        };\n\n        const props = {\n            class: this.trClass,\n            props: {\n                tagName: \"tr\",\n            },\n            attrs: {\n                [COMPS_CUSTOM_ATTRS.BODY_ROW_KEY]: this.currentRowKey,\n            },\n            nativeOn: events,\n            on: {\n                \"on-dom-resize-change\": this.trHeightChange,\n            },\n        };\n\n        return (\n            <VueDomResizeObserver {...props}>\n                {getTdContent()}\n            </VueDomResizeObserver>\n        );\n    },\n};\n","import { clsName } from \"../util\";\nimport FooterTr from \"./footer-tr\";\nimport { COMPS_NAME } from \"../util/constant\";\nexport default {\n    name: COMPS_NAME.VE_TABLE_FOOTER,\n    props: {\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        footerData: {\n            type: Array,\n            required: true,\n        },\n        hasFixedColumn: {\n            type: Boolean,\n            default: false,\n        },\n        allRowKeys: {\n            type: Array,\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // footer rows\n        footerRows: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        // fixed footer\n        fixedFooter: {\n            type: Boolean,\n            default: true,\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    computed: {\n        // footer class\n        footerClass() {\n            return {\n                [clsName(\"fixed-footer\")]: this.fixedFooter,\n            };\n        },\n    },\n    methods: {\n        // get tr key\n        getTrKey({ rowData, rowIndex }) {\n            let result = rowIndex;\n\n            const { rowKeyFieldName } = this;\n            if (rowKeyFieldName) {\n                result = rowData[rowKeyFieldName];\n            }\n            return result;\n        },\n    },\n    render() {\n        const { colgroups, rowKeyFieldName, cellStyleOption } = this;\n\n        return (\n            <tfoot class={this.footerClass}>\n                {this.footerData.map((rowData, rowIndex) => {\n                    const trProps = {\n                        key: this.getTrKey({ rowData, rowIndex }),\n                        props: {\n                            rowIndex,\n                            rowData,\n                            colgroups,\n                            rowKeyFieldName,\n                            cellStyleOption,\n                            footerRows: this.footerRows,\n                            fixedFooter: this.fixedFooter,\n                            cellSpanOption: this.cellSpanOption,\n                            eventCustomOption: this.eventCustomOption,\n                        },\n                    };\n\n                    return <FooterTr {...trProps} />;\n                })}\n            </tfoot>\n        );\n    },\n};\n","// instance methods\nexport const INSTANCE_METHODS = {\n    TEXTAREA_ADD_NEW_LINE: \"textareaAddNewLine\",\n    TEXTAREA_SELECT: \"textareaSelect\",\n};\n","/* \nelement focus\n*/\nexport default {\n    bind: function (el, { value }, vnode) {\n        if (value) {\n            const { focus, select } = value;\n\n            vnode.context.$nextTick(() => {\n                if (focus) {\n                    el.focus();\n                }\n\n                if (select) {\n                    el.select();\n                }\n            });\n        }\n    },\n    update: function (el, { value }) {\n        if (value) {\n            const { focus } = value;\n            if (focus) {\n                el.focus();\n            }\n        }\n    },\n};\n","/**\n * autoResize - resizes a DOM element to the width and height of another DOM element\n *\n * Copyright 2014, Marcin Warpechowski\n * Licensed under the MIT license\n * refer to https://github.com/handsontable/handsontable/blob/HEAD/handsontable/src/3rdparty/autoResize/index.js\n */\n\nexport function autoResize() {\n    var defaults = {\n            minHeight: 200,\n            maxHeight: 300,\n            minWidth: 100,\n            maxWidth: 300,\n            // text padding\n            paddingWidth: 16,\n        },\n        el,\n        body = document.body,\n        text = document.createTextNode(\"\"),\n        span = document.createElement(\"SPAN\"),\n        observe = function (element, event, handler) {\n            element.addEventListener(event, handler, false);\n        },\n        unObserve = function (element, event, handler) {\n            element.removeEventListener(event, handler, false);\n        },\n        resize = function (newChar) {\n            var width, scrollHeight;\n\n            if (!newChar) {\n                newChar = \"\";\n            } else if (!/^[a-zA-Z \\.,\\\\\\/\\|0-9]$/.test(newChar)) {\n                newChar = \".\";\n            }\n\n            if (text.textContent !== void 0) {\n                text.textContent = el.value + newChar;\n            } else {\n                text.data = el.value + newChar; //IE8\n            }\n            span.style.fontSize = getComputedStyle(el).fontSize;\n            span.style.fontFamily = getComputedStyle(el).fontFamily;\n            span.style.whiteSpace = \"pre\";\n\n            body.appendChild(span);\n            width = span.clientWidth + defaults.paddingWidth;\n            body.removeChild(span);\n\n            el.style.height = defaults.minHeight + \"px\";\n\n            if (defaults.minWidth > width) {\n                el.style.width = defaults.minWidth + \"px\";\n            } else if (width > defaults.maxWidth) {\n                el.style.width = defaults.maxWidth + \"px\";\n            } else {\n                el.style.width = width + \"px\";\n            }\n            scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;\n\n            if (defaults.minHeight > scrollHeight) {\n                el.style.height = defaults.minHeight + \"px\";\n            } else if (defaults.maxHeight < scrollHeight) {\n                el.style.height = defaults.maxHeight + \"px\";\n                el.style.overflowY = \"visible\";\n            } else {\n                el.style.height = scrollHeight + \"px\";\n            }\n        },\n        delayedResize = function () {\n            window.setTimeout(resize, 0);\n        },\n        extendDefaults = function (config) {\n            if (config && config.minHeight) {\n                if (config.minHeight == \"inherit\") {\n                    defaults.minHeight = el.clientHeight;\n                } else {\n                    var minHeight = parseInt(config.minHeight);\n                    if (!isNaN(minHeight)) {\n                        defaults.minHeight = minHeight;\n                    }\n                }\n            }\n\n            if (config && config.maxHeight) {\n                if (config.maxHeight == \"inherit\") {\n                    defaults.maxHeight = el.clientHeight;\n                } else {\n                    var maxHeight = parseInt(config.maxHeight);\n                    if (!isNaN(maxHeight)) {\n                        defaults.maxHeight = maxHeight;\n                    }\n                }\n            }\n\n            if (config && config.minWidth) {\n                if (config.minWidth == \"inherit\") {\n                    defaults.minWidth = el.clientWidth;\n                } else {\n                    var minWidth = parseInt(config.minWidth);\n                    if (!isNaN(minWidth)) {\n                        defaults.minWidth = minWidth;\n                    }\n                }\n            }\n\n            if (config && config.maxWidth) {\n                if (config.maxWidth == \"inherit\") {\n                    defaults.maxWidth = el.clientWidth;\n                } else {\n                    var maxWidth = parseInt(config.maxWidth);\n                    if (!isNaN(maxWidth)) {\n                        defaults.maxWidth = maxWidth;\n                    }\n                }\n            }\n\n            if (!span.firstChild) {\n                span.className = \"autoResize\";\n                span.style.display = \"inline-block\";\n                span.appendChild(text);\n            }\n        },\n        init = function (el_, config, doObserve) {\n            el = el_;\n            extendDefaults(config);\n\n            if (el.nodeName == \"TEXTAREA\") {\n                el.style.resize = \"none\";\n                el.style.overflowY = \"\";\n                el.style.height = defaults.minHeight + \"px\";\n                el.style.minWidth = defaults.minWidth + \"px\";\n                el.style.maxWidth = defaults.maxWidth + \"px\";\n                el.style.overflowY = \"hidden\";\n            }\n\n            if (doObserve) {\n                observe(el, \"change\", resize);\n                observe(el, \"cut\", delayedResize);\n                observe(el, \"paste\", delayedResize);\n                observe(el, \"drop\", delayedResize);\n                observe(el, \"keydown\", delayedResize);\n                observe(el, \"focus\", resize);\n                observe(el, \"compositionstart\", delayedResize);\n                observe(el, \"compositionupdate\", delayedResize);\n                observe(el, \"compositionend\", delayedResize);\n            }\n\n            resize();\n        };\n\n    function getComputedStyle(element) {\n        return (\n            element.currentStyle ||\n            document.defaultView.getComputedStyle(element)\n        );\n    }\n\n    return {\n        init: function (el_, config, doObserve) {\n            init(el_, config, doObserve);\n        },\n        unObserve: function () {\n            if (!el) {\n                return false;\n            }\n            unObserve(el, \"change\", resize);\n            unObserve(el, \"cut\", delayedResize);\n            unObserve(el, \"paste\", delayedResize);\n            unObserve(el, \"drop\", delayedResize);\n            unObserve(el, \"keydown\", delayedResize);\n            unObserve(el, \"focus\", resize);\n            unObserve(el, \"compositionstart\", delayedResize);\n            unObserve(el, \"compositionupdate\", delayedResize);\n            unObserve(el, \"compositionend\", delayedResize);\n        },\n        resize: resize,\n    };\n}\n","import { clsName, getFixedTotalWidthByColumnKey } from \"../util\";\nimport { INSTANCE_METHODS } from \"./constant\";\nimport { COMPS_NAME, EMIT_EVENTS, HOOKS_NAME } from \"../util/constant\";\nimport emitter from \"../../../src/mixins/emitter\";\nimport focus from \"../../../src/directives/focus.js\";\nimport { autoResize } from \"../../../src/utils/auto-resize\";\nimport { isEmptyValue } from \"../../../src/utils/index.js\";\nimport { getCaretPosition, setCaretPosition } from \"../../../src/utils/dom\";\nimport { debounce } from \"lodash\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_EDIT_INPUT,\n    directives: {\n        focus: focus,\n    },\n    mixins: [emitter],\n    props: {\n        parentRendered: {\n            type: Boolean,\n            required: true,\n        },\n        hooks: {\n            type: Object,\n            required: true,\n        },\n        // start input value every time\n        inputStartValue: {\n            type: [String, Number],\n            required: true,\n        },\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // table data\n        tableData: {\n            type: Array,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        // cell selection option\n        cellSelectionData: {\n            type: Object,\n            required: true,\n        },\n        // editing cell\n        editingCell: {\n            type: Object,\n            required: true,\n        },\n        // is editing cell\n        isCellEditing: {\n            type: Boolean,\n            required: true,\n        },\n        // has horizontal scroll bar\n        hasXScrollBar: {\n            type: Boolean,\n            required: true,\n        },\n        // has vertical scroll bar\n        hasYScrollBar: {\n            type: Boolean,\n            required: true,\n        },\n        // has right fixed column\n        hasRightFixedColumn: {\n            type: Boolean,\n            required: true,\n        },\n        scrollBarWidth: {\n            type: Number,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            textareaInputRef: \"textareaInputRef\",\n            // raw cell value\n            rawCellValue: \"\",\n            // display textarea\n            displayTextarea: false,\n            // virtual scroll overflowViewport\n            overflowViewport: false,\n            // textarea element rect\n            textareaRect: {\n                left: 0,\n                top: 0,\n            },\n            // table element\n            tableEl: null,\n            // cell element\n            cellEl: null,\n            // auto resize\n            autoResize: null,\n            // is edit cell focus\n            isEditCellFocus: false,\n        };\n    },\n    computed: {\n        // current column\n        currentColumn() {\n            let result = null;\n\n            const { colgroups, cellSelectionData } = this;\n\n            const { currentCell } = cellSelectionData;\n\n            if (\n                !isEmptyValue(currentCell.rowKey) &&\n                !isEmptyValue(currentCell.colKey)\n            ) {\n                result = colgroups.find((x) => x.key === currentCell.colKey);\n            }\n\n            return result;\n        },\n\n        // container class\n        containerClass() {\n            let result = null;\n\n            const { displayTextarea, overflowViewport } = this;\n\n            result = {\n                [clsName(\"edit-input-container\")]: true,\n                [clsName(\"edit-input-container-show\")]:\n                    displayTextarea && !overflowViewport,\n            };\n\n            return result;\n        },\n\n        // container style\n        containerStyle() {\n            let result = {};\n\n            const {\n                displayTextarea,\n                overflowViewport,\n                textareaRect,\n                currentColumn: column,\n            } = this;\n\n            const { top, left } = textareaRect;\n\n            if (displayTextarea && !overflowViewport) {\n                result = {\n                    top: top + \"px\",\n                    left: left + \"px\",\n                    height: null,\n                    // because @ve-fixed-body-cell-index: 10;\n                    \"z-index\": column.fixed ? 10 : 0,\n                    opacity: 1,\n                };\n            } else {\n                result = {\n                    top: top + \"px\",\n                    left: left + \"px\",\n                    height: \"1px\",\n                    \"z-index\": -1,\n                    opacity: 0,\n                };\n            }\n\n            return result;\n        },\n\n        // textarea class\n        textareaClass() {\n            let result = null;\n\n            result = {\n                [clsName(\"edit-input\")]: true,\n            };\n\n            return result;\n        },\n    },\n\n    watch: {\n        parentRendered: {\n            handler: function (val) {\n                if (val) {\n                    // fixed #471\n                    this.setTableEl();\n\n                    // add table container scroll hook\n                    this.hooks.addHook(\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\n                        () => {\n                            if (this.displayTextarea) {\n                                if (!this.cellEl) {\n                                    this.setCellEl();\n                                }\n                            }\n                            this.debounceSetCellEl();\n                            this.setTextareaPosition();\n                            this.debounceSetTextareaPosition();\n                        },\n                    );\n                    // add table size change hook\n                    this.hooks.addHook(HOOKS_NAME.TABLE_SIZE_CHANGE, () => {\n                        this.setTextareaPosition();\n                    });\n                }\n            },\n            immediate: true,\n        },\n        // cell selection key data\n        \"cellSelectionData.currentCell\": {\n            handler: function (val) {\n                this.isEditCellFocus = false;\n\n                const { rowKey, colKey } = val;\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                    this.setCellEl();\n                    // wait for selection cell rendered\n                    this.$nextTick(() => {\n                        this.setTextareaPosition();\n                        setTimeout(() => {\n                            this.isEditCellFocus = true;\n                        });\n                    });\n                }\n            },\n            deep: true,\n            immediate: true,\n        },\n        // watch normal end cell\n        \"cellSelectionData.normalEndCell\": {\n            handler: function (val) {\n                /*\n                trigger editor(textarea) element select\n                解决通过点击的区域选择，无法复制的问题\n                */\n                if (!isEmptyValue(val.colKey)) {\n                    this[INSTANCE_METHODS.TEXTAREA_SELECT]();\n                }\n            },\n            deep: true,\n            immediate: true,\n        },\n        // is editing cell\n        isCellEditing: {\n            handler: function (val) {\n                if (val) {\n                    this.showTextarea();\n                } else {\n                    this.hideTextarea();\n                }\n            },\n            deep: true,\n            immediate: true,\n        },\n        inputStartValue: {\n            handler: function () {\n                this.setRawCellValue();\n            },\n            immediate: true,\n        },\n    },\n\n    methods: {\n        // set table element\n        setTableEl() {\n            this.$nextTick(() => {\n                const tableEl = this.$el.previousElementSibling;\n                this.tableEl = tableEl;\n            });\n        },\n\n        // set cell element\n        setCellEl() {\n            const { cellSelectionData, tableEl } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n\n            if (tableEl) {\n                const cellEl = tableEl.querySelector(\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\n                );\n\n                if (cellEl) {\n                    this.cellEl = cellEl;\n                    this.overflowViewport = false;\n                }\n            }\n        },\n\n        // set textarea position\n        setTextareaPosition() {\n            const {\n                hasXScrollBar,\n                hasYScrollBar,\n                scrollBarWidth,\n                colgroups,\n                hasRightFixedColumn,\n                currentColumn: column,\n                cellEl,\n                tableEl,\n            } = this;\n\n            if (cellEl && tableEl) {\n                const {\n                    left: tableLeft,\n                    top: tableTop,\n                    right: tableRight,\n                    bottom: tableBottom,\n                } = tableEl.getBoundingClientRect();\n\n                const {\n                    left: cellLeft,\n                    top: cellTop,\n                    height: cellHeight,\n                    width: cellWidth,\n                    right: cellRight,\n                    bottom: cellBottom,\n                } = cellEl.getBoundingClientRect();\n\n                if (cellHeight && cellWidth) {\n                    let maxHeight = cellHeight + tableBottom - cellBottom;\n                    let maxWidth = cellWidth + tableRight - cellRight;\n\n                    // has horizontal scroll bar\n                    if (hasXScrollBar) {\n                        maxHeight -= scrollBarWidth;\n                    }\n\n                    // has vertical scroll bar\n                    if (hasYScrollBar) {\n                        maxWidth -= scrollBarWidth;\n                    }\n\n                    /* \n                    If the right fixed column is included, the max width of the textarea needs to be subtracted from the sum of the right fixed columns\n                    如果包含右固定列，编辑框最大宽度需要去减去右固定列之和的宽度\n                    */\n                    if (hasRightFixedColumn) {\n                        if (column && !column.fixed) {\n                            const rightFixedTotalWidth =\n                                getFixedTotalWidthByColumnKey({\n                                    colgroups,\n                                    colKey: column.key,\n                                    fixed: \"right\",\n                                });\n                            if (rightFixedTotalWidth) {\n                                maxWidth -= rightFixedTotalWidth;\n                            }\n                        }\n                    }\n\n                    this.autoResize.init(\n                        this.$refs[this.textareaInputRef],\n                        {\n                            minHeight: Math.min(cellHeight, maxHeight),\n                            maxHeight: maxHeight, // TEXTAREA should never be higher than visible part of the viewport (should not cover the scrollbar)\n                            minWidth: Math.min(cellWidth, maxWidth),\n                            maxWidth: maxWidth, // TEXTAREA should never be wider than visible part of the viewport (should not cover the scrollbar)\n                        },\n                        true, // observe textarea change\\cut\\paste etc.\n                    );\n\n                    this.textareaRect = {\n                        left: cellLeft - tableLeft,\n                        top: cellTop - tableTop,\n                    };\n                } else {\n                    /*\n                    存在以下可能：\n                    1、虚拟滚动超出viewport\n                    2、单元格被删除（通过右键菜单等方式）\n                    */\n\n                    // fixed #477\n                    this.textareaRect = {\n                        left: 0,\n                        top: 0,\n                    };\n                    this.cellEl = null;\n                    this.overflowViewport = true;\n                }\n            }\n        },\n\n        // show textarea\n        showTextarea() {\n            this.setRawCellValue();\n            this.displayTextarea = true;\n        },\n\n        // hide textarea\n        hideTextarea() {\n            this.displayTextarea = false;\n            this.textareaUnObserve();\n        },\n\n        // textarea unObserve\n        textareaUnObserve() {\n            if (this.autoResize) {\n                this.autoResize.unObserve();\n            }\n        },\n\n        // set raw cell value\n        setRawCellValue() {\n            this.rawCellValue = this.inputStartValue;\n        },\n\n        // textarea value change\n        textareaValueChange(val) {\n            this.$emit(EMIT_EVENTS.EDIT_INPUT_VALUE_CHANGE, val);\n        },\n\n        // textarea select\n        [INSTANCE_METHODS.TEXTAREA_SELECT]() {\n            const textareaInputEl = this.$refs[this.textareaInputRef];\n            if (textareaInputEl) {\n                textareaInputEl.select();\n            }\n        },\n\n        // textarea add new line\n        [INSTANCE_METHODS.TEXTAREA_ADD_NEW_LINE]() {\n            const { isCellEditing, editingCell } = this;\n\n            if (isCellEditing) {\n                const textareaInputEl = this.$refs[this.textareaInputRef];\n\n                const caretPosition = getCaretPosition(textareaInputEl);\n\n                let value = editingCell.row[editingCell.colKey];\n                // solve error of number slice method\n                value += \"\";\n\n                const newValue = `${value.slice(\n                    0,\n                    caretPosition,\n                )}\\n${value.slice(caretPosition)}`;\n\n                // 直接更新 textarea 值\n                textareaInputEl.value = newValue;\n\n                // 手动赋值不会触发textarea 文本变化事件,需要手动更新 editingCell 值\n                this.textareaValueChange(newValue);\n\n                setCaretPosition(textareaInputEl, caretPosition + 1);\n            }\n        },\n    },\n    created() {\n        // debounce set textarea position\n        this.debounceSetTextareaPosition = debounce(\n            this.setTextareaPosition,\n            210,\n        );\n        // debounce set cell el\n        this.debounceSetCellEl = debounce(() => {\n            if (this.displayTextarea) {\n                if (!this.cellEl) {\n                    this.setCellEl();\n                }\n            }\n        }, 200);\n    },\n    mounted() {\n        this.autoResize = autoResize();\n    },\n    destroyed() {\n        this.textareaUnObserve();\n    },\n    render() {\n        const {\n            containerClass,\n            containerStyle,\n            textareaClass,\n            rawCellValue,\n            isCellEditing,\n            isEditCellFocus,\n        } = this;\n\n        const containerProps = {\n            style: containerStyle,\n            class: containerClass,\n        };\n\n        const textareaProps = {\n            ref: this.textareaInputRef,\n            class: textareaClass,\n            directives: [\n                {\n                    name: \"focus\",\n                    value: {\n                        focus: isEditCellFocus,\n                    },\n                },\n            ],\n            domProps: { value: rawCellValue },\n            attrs: {\n                tabindex: -1,\n            },\n            on: {\n                input: (e) => {\n                    if (isCellEditing) {\n                        this.textareaValueChange(e.target.value);\n                        this.rawCellValue = e.target.value;\n                    }\n                },\n                click: () => {\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_CLICK);\n                },\n                copy: (e) => {\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_COPY, e);\n                },\n                paste: (e) => {\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_PASTE, e);\n                },\n                cut: (e) => {\n                    this.$emit(EMIT_EVENTS.EDIT_INPUT_CUT, e);\n                },\n            },\n        };\n\n        return (\n            <div {...containerProps}>\n                <textarea {...textareaProps}></textarea>\n            </div>\n        );\n    },\n};\n","// instance methods\nexport const INSTANCE_METHODS = {\n    CLEAR_CURRENT_CELL_RECT: \"clearCurrentCellRect\",\n    CLEAR_NORMAL_END_CELL_RECT: \"clearNormalEndCellRect\",\n};\n","import {\n    clsName,\n    isLastColumnByColKey,\n    isLastRowByRowKey,\n    getColKeysByRangeColKeys,\n    isExistGivenFixedColKey,\n    isExistNotFixedColKey,\n    getLeftmostColKey,\n    getRightmostColKey,\n    getColKeysByFixedTypeWithinColKeys,\n    getTotalWidthByColKeys,\n    getPreviewColKey,\n    getNextColKey,\n} from \"../util\";\nimport {\n    COMPS_NAME,\n    EMIT_EVENTS,\n    HOOKS_NAME,\n    AUTOFILLING_DIRECTION,\n    CURRENT_CELL_SELECTION_TYPES,\n    COLUMN_FIXED_TYPE,\n} from \"../util/constant\";\nimport { INSTANCE_METHODS } from \"./constant\";\nimport emitter from \"../../../src/mixins/emitter\";\nimport { isEmptyValue, isBoolean } from \"../../../src/utils/index.js\";\nimport { debounce } from \"lodash\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_SELECTION,\n    mixins: [emitter],\n    props: {\n        tableEl: {\n            type: HTMLTableElement,\n            default: null,\n        },\n        allRowKeys: {\n            type: Array,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        parentRendered: {\n            type: Boolean,\n            required: true,\n        },\n        hooks: {\n            type: Object,\n            required: true,\n        },\n        // cell autofill option\n        cellAutofillOption: {\n            type: [Object, Boolean],\n            default: function () {\n                return null;\n            },\n        },\n        cellSelectionData: {\n            type: Object,\n            required: true,\n        },\n        cellSelectionRangeData: {\n            type: Object,\n            required: true,\n        },\n        isAutofillStarting: {\n            type: Boolean,\n            required: true,\n        },\n        currentCellSelectionType: {\n            type: String,\n            default: \"\",\n        },\n        // is scrolling\n        showVirtualScrollingPlaceholder: {\n            type: Boolean,\n            default: false,\n        },\n        isVirtualScroll: {\n            type: Boolean,\n            default: false,\n        },\n        virtualScrollVisibleIndexs: {\n            type: Object,\n            required: true,\n        },\n        isCellEditing: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            // current cell\n            currentCellEl: null,\n            normalEndCellEl: null,\n            autoFillEndCellEl: null,\n            // cell selection rect\n            cellSelectionRect: {\n                // current cell element rect\n                currentCellRect: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                },\n                // normal end cell element rect\n                normalEndCellRect: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                },\n                // auto fill end cell element rect\n                autoFillEndCellRect: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                },\n            },\n        };\n    },\n\n    computed: {\n        // selection borders visibility\n        selectionBordersVisibility() {\n            let result = true;\n            if (this.isVirtualScroll) {\n                const {\n                    showVirtualScrollingPlaceholder,\n                    cellSelectionData,\n                    virtualScrollVisibleIndexs,\n                    currentCellSelectionType,\n                } = this;\n\n                if (showVirtualScrollingPlaceholder) {\n                    result = false;\n                } else {\n                    const { currentCell, normalEndCell } = cellSelectionData;\n\n                    if (\n                        currentCellSelectionType ===\n                        CURRENT_CELL_SELECTION_TYPES.SINGLE\n                    ) {\n                        if (\n                            currentCell.rowIndex <\n                                virtualScrollVisibleIndexs.start ||\n                            currentCell.rowIndex >\n                                virtualScrollVisibleIndexs.end\n                        ) {\n                            result = false;\n                        }\n                    }\n\n                    if (\n                        currentCellSelectionType ===\n                        CURRENT_CELL_SELECTION_TYPES.RANGE\n                    ) {\n                        if (\n                            (currentCell.rowIndex <\n                                virtualScrollVisibleIndexs.start &&\n                                normalEndCell.rowIndex <\n                                    virtualScrollVisibleIndexs.start) ||\n                            (currentCell.rowIndex >\n                                virtualScrollVisibleIndexs.end &&\n                                normalEndCell.rowIndex >\n                                    virtualScrollVisibleIndexs.end)\n                        ) {\n                            result = false;\n                        }\n                    }\n                }\n            }\n            return result;\n        },\n        // show corner\n        showCorner() {\n            let result = true;\n            const { cellAutofillOption } = this;\n            if (cellAutofillOption) {\n                const { directionX, directionY } = this.cellAutofillOption;\n                if (\n                    isBoolean(directionY) &&\n                    !directionY &&\n                    isBoolean(directionX) &&\n                    !directionX\n                ) {\n                    result = false;\n                }\n            } else {\n                result = false;\n            }\n\n            return result;\n        },\n        // corner cell info\n        cornerCellInfo() {\n            const { allRowKeys, colgroups, cellSelectionRangeData } = this;\n\n            const { rightColKey, bottomRowKey } = cellSelectionRangeData;\n\n            let isLastColumn = false;\n            if (isLastColumnByColKey(rightColKey, colgroups)) {\n                isLastColumn = true;\n            } else {\n                const index = colgroups.findIndex((x) => x.key === rightColKey);\n                // right col is right fixed and current col is not right fixed\n                if (\n                    colgroups[index + 1].fixed === COLUMN_FIXED_TYPE.RIGHT &&\n                    colgroups[index].fixed !== COLUMN_FIXED_TYPE.RIGHT\n                ) {\n                    isLastColumn = true;\n                }\n            }\n\n            let isLastRow = false;\n            if (isLastRowByRowKey(bottomRowKey, allRowKeys)) {\n                isLastRow = true;\n            }\n\n            return {\n                isLastColumn,\n                isLastRow,\n            };\n        },\n        // is first selection row\n        isFirstSelectionRow() {\n            const { allRowKeys, cellSelectionRangeData } = this;\n            return allRowKeys[0] === cellSelectionRangeData.topRowKey;\n        },\n        // is first selection column\n        isFirstSelectionCol() {\n            const { colgroups, cellSelectionRangeData } = this;\n            return colgroups[0].key === cellSelectionRangeData.leftColKey;\n        },\n        // is first not fixed selection column\n        isFirstNotFixedSelectionCol() {\n            let result = false;\n\n            const { colgroups, cellSelectionRangeData } = this;\n\n            if (colgroups.find((x) => x.fixed === \"left\")) {\n                const col = colgroups.find((x) => !x.fixed);\n                if (col && col.field === cellSelectionRangeData.leftColKey) {\n                    result = true;\n                }\n            }\n\n            return result;\n        },\n    },\n\n    watch: {\n        parentRendered: {\n            handler: function (val) {\n                if (val) {\n                    // add table container scroll hook\n                    this.hooks.addHook(\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\n                        () => {\n                            this.setCellEls();\n                            this.debounceSetCellEls();\n\n                            this.resetCellPositions();\n                            // debounce reset cell positions\n                            this.debounceResetCellPositions();\n                        },\n                    );\n                    // add table size change hook\n                    this.hooks.addHook(HOOKS_NAME.TABLE_SIZE_CHANGE, () => {\n                        // debounce reset cell positions\n                        this.debounceResetCellPositions();\n                    });\n                    // add table td width change hook\n                    this.hooks.addHook(\n                        HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE,\n                        () => {\n                            this.$nextTick(() => {\n                                this.resetCellPositions();\n                            });\n                        },\n                    );\n\n                    // add clipboard cell value change hook\n                    this.hooks.addHook(\n                        HOOKS_NAME.CLIPBOARD_CELL_VALUE_CHANGE,\n                        () => {\n                            this.$nextTick(() => {\n                                this.resetCellPositions();\n                            });\n                        },\n                    );\n                }\n            },\n            immediate: true,\n        },\n        // watch current cell\n        \"cellSelectionData.currentCell\": {\n            handler: function (val) {\n                const { rowKey, colKey } = val;\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                    this.setCurrentCellEl();\n                    this.setSelectionPositions({ type: \"currentCell\" });\n                } else {\n                    this[INSTANCE_METHODS.CLEAR_CURRENT_CELL_RECT]();\n                }\n                this.setCellSelectionRangeData();\n            },\n            deep: true,\n            immediate: true,\n        },\n        // watch normal end cell\n        \"cellSelectionData.normalEndCell\": {\n            handler: function (val) {\n                const { rowKey, colKey } = val;\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                    // set normal end cell el\n                    this.setNormalEndCellEl();\n                    this.setSelectionPositions({ type: \"normalEndCell\" });\n                } else {\n                    this[INSTANCE_METHODS.CLEAR_NORMAL_END_CELL_RECT]();\n                }\n                this.setCellSelectionRangeData();\n            },\n            deep: true,\n            immediate: true,\n        },\n        // watch autofill cell\n        \"cellSelectionData.autoFillEndCell\": {\n            handler: function (val) {\n                const { rowKey, colKey } = val;\n                if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                    this.setAutofillEndCellEl();\n                    this.setSelectionPositions({ type: \"autoFillEndCell\" });\n                } else {\n                    this.clearAutofillEndCellRect();\n                }\n            },\n            deep: true,\n            immediate: true,\n        },\n    },\n\n    methods: {\n        // reset cell position\n        resetCellPositions() {\n            const { currentCell, normalEndCell } = this.cellSelectionData;\n            if (\n                !isEmptyValue(currentCell.rowKey) &&\n                !isEmptyValue(currentCell.colKey)\n            ) {\n                this.setSelectionPositions({\n                    type: \"currentCell\",\n                });\n            }\n\n            if (\n                !isEmptyValue(normalEndCell.rowKey) &&\n                !isEmptyValue(normalEndCell.colKey)\n            ) {\n                this.setSelectionPositions({\n                    type: \"normalEndCell\",\n                });\n            }\n        },\n\n        // set cell els\n        setCellEls() {\n            if (this.isVirtualScroll && this.selectionBordersVisibility) {\n                this.setCurrentCellEl();\n                this.setNormalEndCellEl();\n            }\n        },\n\n        // set cell selection range data\n        setCellSelectionRangeData() {\n            const { currentCellSelectionType } = this;\n            const { currentCell, normalEndCell } = this.cellSelectionData;\n\n            let result = {};\n\n            if (\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\n            ) {\n                result = {\n                    leftColKey: currentCell.colKey,\n                    rightColKey: currentCell.colKey,\n                    topRowKey: currentCell.rowKey,\n                    bottomRowKey: currentCell.rowKey,\n                };\n            } else if (\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.RANGE\n            ) {\n                const leftmostColKey = getLeftmostColKey({\n                    colgroups: this.colgroups,\n                    colKeys: [currentCell.colKey, normalEndCell.colKey],\n                });\n\n                /*\n                current cell col key is leftmost colKey\n                需要用 colKey 的位置进行判断，不能根据当前单元格 left 值判断（固定列时）\n                */\n                if (leftmostColKey === currentCell.colKey) {\n                    result.leftColKey = currentCell.colKey;\n                    result.rightColKey = normalEndCell.colKey;\n                } else {\n                    result.leftColKey = normalEndCell.colKey;\n                    result.rightColKey = currentCell.colKey;\n                }\n\n                if (currentCell.rowIndex < normalEndCell.rowIndex) {\n                    result.topRowKey = currentCell.rowKey;\n                    result.bottomRowKey = normalEndCell.rowKey;\n                } else {\n                    result.topRowKey = normalEndCell.rowKey;\n                    result.bottomRowKey = currentCell.rowKey;\n                }\n            } else {\n                // clear\n                result = {\n                    leftColKey: \"\",\n                    rightColKey: \"\",\n                    topRowKey: \"\",\n                    bottomRowKey: \"\",\n                };\n            }\n\n            this.$emit(EMIT_EVENTS.CELL_SELECTION_RANGE_DATA_CHANGE, result);\n        },\n\n        // get cell position\n        getCellPosition({ cellEl, tableLeft, tableTop }) {\n            if (!this.selectionBordersVisibility) {\n                return false;\n            }\n\n            const {\n                left: cellLeft,\n                top: cellTop,\n                height: cellHeight,\n                width: cellWidth,\n            } = cellEl.getBoundingClientRect();\n\n            if (cellHeight && cellWidth) {\n                return {\n                    left: cellLeft - tableLeft,\n                    top: cellTop - tableTop,\n                    width: cellWidth,\n                    height: cellHeight,\n                };\n            }\n        },\n\n        // get cell position by column key\n        getCellPositionByColKey({\n            tableLeft,\n            tableTop,\n            colKey,\n            isFirstRow,\n            isLastRow,\n        }) {\n            if (!this.selectionBordersVisibility) {\n                return false;\n            }\n\n            let cellEl;\n            if (isFirstRow) {\n                cellEl = this.getTableFirstRowCellByColKey(colKey);\n            } else if (isLastRow) {\n                cellEl = this.getTableLastRowCellByColKey(colKey);\n            }\n\n            const {\n                left: cellLeft,\n                top: cellTop,\n                //height: cellHeight,\n                width: cellWidth,\n            } = cellEl.getBoundingClientRect();\n\n            if (cellWidth) {\n                return {\n                    left: cellLeft - tableLeft,\n                    top: cellTop - tableTop,\n                    width: cellWidth,\n                };\n            }\n        },\n\n        // set selection positions\n        setSelectionPositions({ type }) {\n            const {\n                allRowKeys,\n                tableEl,\n                currentCellEl,\n                normalEndCellEl,\n                autoFillEndCellEl,\n                cellSelectionData,\n                virtualScrollVisibleIndexs,\n            } = this;\n\n            // table empty\n            if (allRowKeys.length === 0) {\n                return false;\n            }\n\n            if (!tableEl) {\n                return false;\n            }\n\n            const { left: tableLeft, top: tableTop } =\n                tableEl.getBoundingClientRect();\n\n            let isCurrentCellOverflow = false;\n            let isNormalEndCellOverflow = false;\n            // set current cell position\n            if (type === \"currentCell\") {\n                isCurrentCellOverflow = true;\n                if (currentCellEl) {\n                    const rect = this.getCellPosition({\n                        cellEl: currentCellEl,\n                        tableLeft,\n                        tableTop,\n                    });\n                    if (rect) {\n                        isCurrentCellOverflow = false;\n                        this.cellSelectionRect.currentCellRect = rect;\n                    }\n                }\n            }\n\n            // set nromal end cell position`\n            if (type === \"normalEndCell\") {\n                isNormalEndCellOverflow = true;\n                if (normalEndCellEl) {\n                    const rect = this.getCellPosition({\n                        cellEl: normalEndCellEl,\n                        tableLeft,\n                        tableTop,\n                    });\n                    if (rect) {\n                        isNormalEndCellOverflow = false;\n                        this.cellSelectionRect.normalEndCellRect = rect;\n                    }\n                }\n            }\n\n            // current cell overflow or normal end cell overflow && is virtual scroll\n            if (\n                (isCurrentCellOverflow || isNormalEndCellOverflow) &&\n                this.isVirtualScroll\n            ) {\n                const { currentCell, normalEndCell } = cellSelectionData;\n                // 弥补的\n                let mackUpColKey;\n                let mackUpRowIndex;\n\n                if (isCurrentCellOverflow) {\n                    mackUpColKey = currentCell.colKey;\n                    mackUpRowIndex = currentCell.rowIndex;\n                } else {\n                    mackUpColKey = normalEndCell.colKey;\n                    mackUpRowIndex = normalEndCell.rowIndex;\n                }\n\n                let mackUpRect;\n                /* \n                当没有 currentCellRect 或 normalCellRect 时 进行纠正，否则只更新top值\n                */\n                if (\n                    (isCurrentCellOverflow &&\n                        !this.cellSelectionRect.currentCellRect.height) ||\n                    (isNormalEndCellOverflow &&\n                        !this.cellSelectionRect.normalEndCellRect.height)\n                ) {\n                    let mackUpRectParams = {\n                        tableLeft,\n                        tableTop,\n                        colKey: mackUpColKey,\n                    };\n                    // 上方超出\n                    if (mackUpRowIndex < virtualScrollVisibleIndexs.start) {\n                        mackUpRect = this.getCellPositionByColKey({\n                            ...mackUpRectParams,\n                            isFirstRow: true,\n                        });\n                    }\n                    // 下方超出\n                    else if (mackUpRowIndex > virtualScrollVisibleIndexs.end) {\n                        mackUpRect = this.getCellPositionByColKey({\n                            ...mackUpRectParams,\n                            isLastRow: true,\n                        });\n                    }\n                }\n                // 仅更新 top 值\n                else {\n                    // 上方超出\n                    if (mackUpRowIndex < virtualScrollVisibleIndexs.start) {\n                        mackUpRect = {\n                            top: 0,\n                        };\n                    }\n                    // 下方超出\n                    else if (mackUpRowIndex > virtualScrollVisibleIndexs.end) {\n                        mackUpRect = {\n                            top: tableEl.clientHeight,\n                        };\n                    }\n                }\n\n                if (isCurrentCellOverflow) {\n                    Object.assign(\n                        this.cellSelectionRect.currentCellRect,\n                        mackUpRect,\n                    );\n                } else {\n                    Object.assign(\n                        this.cellSelectionRect.normalEndCellRect,\n                        mackUpRect,\n                    );\n                }\n            }\n\n            if (autoFillEndCellEl && type === \"autoFillEndCell\") {\n                const rect = this.getCellPosition({\n                    cellEl: autoFillEndCellEl,\n                    tableLeft,\n                    tableTop,\n                });\n\n                if (rect) {\n                    this.cellSelectionRect.autoFillEndCellRect = rect;\n                }\n            }\n        },\n\n        /*\n        get selection current\n        1、selection current\n        2、auto fill area\n        */\n        getSelectionCurrent({ fixedType }) {\n            let result = {\n                selectionCurrent: null,\n                autoFillArea: null,\n            };\n\n            const { cellSelectionRect, colgroups, cellSelectionData } = this;\n\n            const { currentCellRect, normalEndCellRect } = cellSelectionRect;\n\n            if (!currentCellRect.width) {\n                return result;\n            }\n\n            const borders = {\n                borderWidth: currentCellRect.width + 1,\n                borderHeight: currentCellRect.height,\n\n                topBorder: {\n                    show: true,\n                    width: 0,\n                    height: 2,\n                    top: currentCellRect.top - 1,\n                    left: currentCellRect.left - 1,\n                },\n                rightBorder: {\n                    show: true,\n                    width: 2,\n                    height: 0,\n                    top: currentCellRect.top,\n                    left: currentCellRect.left + currentCellRect.width - 2,\n                },\n                bottomBorder: {\n                    show: true,\n                    width: 0,\n                    height: 2,\n                    top: currentCellRect.top + currentCellRect.height - 2,\n                    left: currentCellRect.left - 1,\n                },\n                leftBorder: {\n                    show: true,\n                    width: 2,\n                    height: 0,\n                    top: currentCellRect.top,\n                    left: currentCellRect.left - 1,\n                },\n                corner: {\n                    show: !normalEndCellRect.width,\n                    top: 0,\n                    left: 0,\n                },\n            };\n\n            borders.corner.top = borders.bottomBorder.top - 3;\n            borders.corner.left = borders.rightBorder.left - 3;\n\n            // cell selection single autofill\n            if (!normalEndCellRect.width) {\n                result.autoFillArea = this.getSelectionAutofillArea({\n                    areaPostions: borders,\n                    fixedType,\n                });\n            }\n\n            const totalColKeys = [cellSelectionData.currentCell.colKey];\n\n            const fixedColKeys = getColKeysByFixedTypeWithinColKeys({\n                colKeys: totalColKeys,\n                fixedType,\n                colgroups,\n            });\n\n            result.selectionCurrent = this.getBorders({\n                ...borders,\n                showCorner: !normalEndCellRect.width,\n                className: \"selection-current\",\n                fixedType,\n                totalColKeys,\n                fixedColKeys,\n            });\n\n            return result;\n        },\n\n        /*\n        get selection areas\n        1、normal area\n        2、auto fill area\n        */\n        getSelectionAreas({ fixedType }) {\n            let result = {\n                normalArea: null,\n                autoFillArea: null,\n            };\n\n            const { currentCell, normalEndCell } = this.cellSelectionData;\n\n            const { cellSelectionRect, cellSelectionRangeData, colgroups } =\n                this;\n\n            const { currentCellRect, normalEndCellRect } = cellSelectionRect;\n\n            if (!currentCellRect.width || !normalEndCellRect.width) {\n                return result;\n            }\n\n            const borders = {\n                borderWidth: 0,\n                borderHeight: 0,\n\n                topBorder: {\n                    show: true,\n                    width: 0,\n                    height: 1,\n                    top: 0,\n                    left: 0,\n                },\n                rightBorder: {\n                    show: true,\n                    width: 1,\n                    height: 0,\n                    top: 0,\n                    left: 0,\n                },\n                bottomBorder: {\n                    show: true,\n                    width: 0,\n                    height: 1,\n                    top: 0,\n                    left: 0,\n                },\n                leftBorder: {\n                    show: true,\n                    width: 1,\n                    height: 0,\n                    top: 0,\n                    left: 0,\n                },\n                corner: {\n                    show: true,\n                    top: 0,\n                    left: 0,\n                },\n            };\n\n            const leftmostColKey = getLeftmostColKey({\n                colgroups: this.colgroups,\n                colKeys: [currentCell.colKey, normalEndCell.colKey],\n            });\n\n            // end cell column key right\n            if (leftmostColKey === currentCell.colKey) {\n                borders.borderWidth =\n                    normalEndCellRect.left -\n                    currentCellRect.left +\n                    normalEndCellRect.width +\n                    1;\n\n                borders.topBorder.left = currentCellRect.left - 1;\n                borders.bottomBorder.left = currentCellRect.left - 1;\n                borders.leftBorder.left = currentCellRect.left - 1;\n                borders.rightBorder.left =\n                    normalEndCellRect.left + normalEndCellRect.width - 1;\n            }\n            // end cell column key left or equal\n            else if (leftmostColKey === normalEndCell.colKey) {\n                borders.borderWidth =\n                    currentCellRect.left -\n                    normalEndCellRect.left +\n                    currentCellRect.width +\n                    1;\n\n                borders.topBorder.left = normalEndCellRect.left - 1;\n                borders.rightBorder.left =\n                    currentCellRect.left + currentCellRect.width - 1;\n                borders.bottomBorder.left = normalEndCellRect.left - 1;\n                borders.leftBorder.left = normalEndCellRect.left - 1;\n            }\n\n            // end cell below\n            if (normalEndCellRect.top > currentCellRect.top) {\n                borders.borderHeight =\n                    normalEndCellRect.top -\n                    currentCellRect.top +\n                    normalEndCellRect.height;\n\n                borders.topBorder.top = currentCellRect.top - 1;\n                borders.rightBorder.top = currentCellRect.top;\n                borders.bottomBorder.top =\n                    normalEndCellRect.top + normalEndCellRect.height - 1;\n                borders.leftBorder.top = currentCellRect.top;\n            }\n            // end cell above or equal\n            else if (normalEndCellRect.top <= currentCellRect.top) {\n                borders.borderHeight =\n                    currentCellRect.top -\n                    normalEndCellRect.top +\n                    currentCellRect.height;\n\n                borders.topBorder.top = normalEndCellRect.top - 1;\n                borders.rightBorder.top = normalEndCellRect.top;\n                borders.bottomBorder.top =\n                    currentCellRect.top + currentCellRect.height - 1;\n                borders.leftBorder.top = normalEndCellRect.top;\n            }\n\n            borders.corner.top = borders.bottomBorder.top - 4;\n            borders.corner.left = borders.rightBorder.left - 4;\n\n            if (normalEndCellRect.width) {\n                result.autoFillArea = this.getSelectionAutofillArea({\n                    areaPostions: borders,\n                    fixedType,\n                });\n            }\n\n            const { leftColKey, rightColKey } = cellSelectionRangeData;\n            const totalColKeys = getColKeysByRangeColKeys({\n                colKey1: leftColKey,\n                colKey2: rightColKey,\n                colgroups,\n            });\n\n            const fixedColKeys = getColKeysByFixedTypeWithinColKeys({\n                colKeys: totalColKeys,\n                fixedType,\n                colgroups,\n            });\n\n            result.normalArea = this.getBorders({\n                ...borders,\n                className: \"selection-normal-area\",\n                fixedType,\n                totalColKeys,\n                fixedColKeys,\n            });\n\n            result.normalAreaLayer = this.getAreaLayer({\n                ...borders,\n                className: \"selection-normal-area-layer\",\n                fixedType,\n                totalColKeys,\n                fixedColKeys,\n            });\n\n            return result;\n        },\n\n        // get selection auto fill\n        getSelectionAutofillArea({ areaPostions, fixedType }) {\n            let result = null;\n\n            const {\n                cellAutofillOption,\n                cellSelectionRangeData,\n                cellSelectionRect,\n                cellSelectionData,\n                isAutofillStarting,\n                currentCellSelectionType,\n                colgroups,\n            } = this;\n\n            if (!isAutofillStarting) {\n                return result;\n            }\n\n            const { currentCellRect, autoFillEndCellRect } = cellSelectionRect;\n\n            if (!currentCellRect.width || !autoFillEndCellRect.width) {\n                return result;\n            }\n\n            if (!areaPostions) {\n                return result;\n            }\n\n            const borders = {\n                borderWidth: 0,\n                borderHeight: 0,\n\n                topBorder: {\n                    show: true,\n                    width: 0,\n                    height: 1,\n                    top: 0,\n                    left: 0,\n                },\n                rightBorder: {\n                    show: true,\n                    width: 1,\n                    height: 0,\n                    top: 0,\n                    left: 0,\n                },\n                bottomBorder: {\n                    show: true,\n                    width: 0,\n                    height: 1,\n                    top: 0,\n                    left: 0,\n                },\n                leftBorder: {\n                    show: true,\n                    width: 1,\n                    height: 0,\n                    top: 0,\n                    left: 0,\n                },\n                corner: {\n                    show: false,\n                    top: 0,\n                    left: 0,\n                },\n            };\n\n            const { currentCell, autoFillEndCell } = cellSelectionData;\n\n            let { leftColKey, rightColKey } = cellSelectionRangeData;\n            if (\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\n            ) {\n                leftColKey = currentCell.colKey;\n                rightColKey = currentCell.colKey;\n            }\n\n            let leftmostColKey;\n            if (leftColKey !== autoFillEndCell.colKey) {\n                leftmostColKey = getLeftmostColKey({\n                    colgroups,\n                    colKeys: [leftColKey, autoFillEndCell.colKey],\n                });\n            }\n\n            let rightmostColKey;\n            if (rightColKey !== autoFillEndCell.colKey) {\n                rightmostColKey = getRightmostColKey({\n                    colgroups,\n                    colKeys: [rightColKey, autoFillEndCell.colKey],\n                });\n            }\n\n            // autofilling direction\n            let autofillingDirection;\n\n            let rangeColKey1;\n            let rangeColKey2;\n\n            // auto fill end cell below\n            if (autoFillEndCellRect.top > areaPostions.bottomBorder.top) {\n                autofillingDirection = AUTOFILLING_DIRECTION.DOWN;\n\n                rangeColKey1 = leftColKey;\n                rangeColKey2 = rightColKey;\n\n                borders.topBorder.show = false;\n\n                borders.borderWidth = areaPostions.borderWidth;\n                borders.borderHeight =\n                    autoFillEndCellRect.top -\n                    areaPostions.bottomBorder.top +\n                    autoFillEndCellRect.height;\n\n                borders.rightBorder.top = areaPostions.bottomBorder.top;\n                borders.rightBorder.left = areaPostions.rightBorder.left;\n                if (\n                    currentCellSelectionType ===\n                    CURRENT_CELL_SELECTION_TYPES.SINGLE\n                ) {\n                    borders.rightBorder.left++;\n                }\n\n                borders.leftBorder.top = areaPostions.bottomBorder.top;\n                borders.leftBorder.left = areaPostions.leftBorder.left;\n\n                borders.bottomBorder.top =\n                    autoFillEndCellRect.top + autoFillEndCellRect.height - 1;\n                borders.bottomBorder.left = areaPostions.bottomBorder.left;\n            }\n            // end cell above\n            else if (autoFillEndCellRect.top < areaPostions.topBorder.top) {\n                autofillingDirection = AUTOFILLING_DIRECTION.UP;\n\n                rangeColKey1 = leftColKey;\n                rangeColKey2 = rightColKey;\n\n                borders.bottomBorder.show = false;\n\n                borders.borderWidth = areaPostions.borderWidth;\n                borders.borderHeight =\n                    areaPostions.topBorder.top - autoFillEndCellRect.top;\n\n                borders.topBorder.top = autoFillEndCellRect.top - 1;\n                borders.topBorder.left = areaPostions.topBorder.left;\n\n                borders.rightBorder.top = autoFillEndCellRect.top;\n                borders.rightBorder.left = areaPostions.rightBorder.left;\n                if (\n                    currentCellSelectionType ===\n                    CURRENT_CELL_SELECTION_TYPES.SINGLE\n                ) {\n                    borders.rightBorder.left++;\n                }\n\n                borders.leftBorder.top = autoFillEndCellRect.top;\n                borders.leftBorder.left = areaPostions.leftBorder.left;\n            }\n            // auto fill end cell right\n            else if (\n                rightmostColKey === autoFillEndCell.colKey &&\n                !isEmptyValue(rightmostColKey)\n            ) {\n                autofillingDirection = AUTOFILLING_DIRECTION.RIGHT;\n\n                rangeColKey1 = getNextColKey({\n                    colgroups,\n                    currentColKey: rightColKey,\n                });\n                rangeColKey2 = autoFillEndCell.colKey;\n\n                borders.leftBorder.show = false;\n\n                borders.borderWidth =\n                    autoFillEndCellRect.left -\n                    areaPostions.rightBorder.left +\n                    autoFillEndCellRect.width +\n                    1;\n                borders.borderHeight = areaPostions.borderHeight;\n\n                borders.topBorder.top = areaPostions.topBorder.top;\n                borders.topBorder.left = areaPostions.rightBorder.left - 1;\n\n                borders.rightBorder.top = areaPostions.topBorder.top;\n                borders.rightBorder.left =\n                    autoFillEndCellRect.left + autoFillEndCellRect.width - 1;\n\n                borders.bottomBorder.top = areaPostions.bottomBorder.top;\n                borders.bottomBorder.left = areaPostions.rightBorder.left - 1;\n            }\n            // auto fill end cell left\n            else if (\n                leftmostColKey === autoFillEndCell.colKey &&\n                !isEmptyValue(leftmostColKey)\n            ) {\n                autofillingDirection = AUTOFILLING_DIRECTION.LEFT;\n\n                rangeColKey1 = getPreviewColKey({\n                    colgroups,\n                    currentColKey: leftColKey,\n                });\n                rangeColKey2 = autoFillEndCell.colKey;\n\n                borders.rightBorder.show = false;\n\n                borders.borderWidth =\n                    areaPostions.leftBorder.left - autoFillEndCellRect.left + 1;\n                borders.borderHeight = areaPostions.borderHeight;\n\n                borders.topBorder.top = areaPostions.topBorder.top;\n                borders.topBorder.left = autoFillEndCellRect.left;\n\n                borders.rightBorder.left = areaPostions.topBorder.left;\n\n                borders.bottomBorder.top = areaPostions.bottomBorder.top;\n                borders.bottomBorder.left = autoFillEndCellRect.left;\n\n                borders.leftBorder.top = areaPostions.topBorder.top;\n                borders.leftBorder.left = autoFillEndCellRect.left;\n            } else {\n                return result;\n            }\n\n            const { directionX, directionY } = cellAutofillOption;\n            if (isBoolean(directionX) && !directionX) {\n                if (\n                    autofillingDirection === AUTOFILLING_DIRECTION.LEFT ||\n                    autofillingDirection === AUTOFILLING_DIRECTION.RIGHT\n                ) {\n                    return false;\n                }\n            }\n\n            if (isBoolean(directionY) && !directionY) {\n                if (\n                    autofillingDirection === AUTOFILLING_DIRECTION.UP ||\n                    autofillingDirection === AUTOFILLING_DIRECTION.DOWN\n                ) {\n                    return false;\n                }\n            }\n\n            const totalColKeys = getColKeysByRangeColKeys({\n                colKey1: rangeColKey1,\n                colKey2: rangeColKey2,\n                colgroups,\n            });\n\n            let fixedColKeys = getColKeysByFixedTypeWithinColKeys({\n                colKeys: totalColKeys,\n                fixedType,\n                colgroups,\n            });\n\n            result = this.getBorders({\n                className: \"selection-autofill-area\",\n                ...borders,\n                fixedType,\n                totalColKeys,\n                fixedColKeys,\n            });\n\n            if (result) {\n                this.dispatch(\n                    COMPS_NAME.VE_TABLE,\n                    EMIT_EVENTS.AUTOFILLING_DIRECTION_CHANGE,\n                    autofillingDirection,\n                );\n            }\n\n            return result;\n        },\n\n        // get borders\n        getBorders({\n            borderWidth,\n            borderHeight,\n            topBorder,\n            rightBorder,\n            bottomBorder,\n            leftBorder,\n            corner,\n            className,\n            fixedType,\n            totalColKeys,\n            fixedColKeys,\n        }) {\n            const {\n                cornerCellInfo,\n                colgroups,\n                isFirstSelectionRow,\n                isFirstSelectionCol,\n                isFirstNotFixedSelectionCol,\n                showCorner,\n            } = this;\n\n            let isRender = true;\n\n            if (fixedType) {\n                isRender = isExistGivenFixedColKey({\n                    fixedType,\n                    colKeys: totalColKeys,\n                    colgroups,\n                });\n            }\n            // middle normal area\n            else {\n                isRender = isExistNotFixedColKey({\n                    colKeys: totalColKeys,\n                    colgroups,\n                });\n            }\n\n            if (!isRender) {\n                return null;\n            }\n\n            // fixed columns total width\n            let fixedColsTotalWidth = 0;\n            if (fixedColKeys.length) {\n                fixedColsTotalWidth = getTotalWidthByColKeys({\n                    colKeys: fixedColKeys,\n                    colgroups,\n                });\n            }\n\n            if (fixedType) {\n                borderWidth = fixedColsTotalWidth;\n                if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\n                    borderWidth += 1;\n                }\n            }\n\n            if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\n                if (totalColKeys.length !== fixedColKeys.length) {\n                    rightBorder.show = false;\n                    corner.show = false;\n                }\n            }\n\n            if (fixedType === COLUMN_FIXED_TYPE.RIGHT) {\n                if (totalColKeys.length !== fixedColKeys.length) {\n                    leftBorder.show = false;\n                }\n\n                topBorder.left = rightBorder.left - borderWidth + 1;\n                bottomBorder.left = rightBorder.left - borderWidth + 1;\n            }\n\n            // solved first row、first column、first not fixed column selection border hidden\n            if (isFirstSelectionRow) {\n                topBorder.top += 1;\n            }\n            if (isFirstSelectionCol) {\n                leftBorder.left += 1;\n            }\n            if (isFirstNotFixedSelectionCol) {\n                leftBorder.left += 1;\n            }\n\n            let cornerTop = corner.top;\n            let cornerLeft = corner.left;\n            let cornerBorderRightWidth = \"1px\";\n            let cornerBorderBottomtWidth = \"1px\";\n\n            if (cornerCellInfo.isLastRow) {\n                cornerTop -= 3;\n                cornerBorderBottomtWidth = \"0px\";\n            }\n\n            if (cornerCellInfo.isLastColumn) {\n                cornerLeft -= 3;\n                cornerBorderRightWidth = \"0px\";\n            }\n\n            if (!showCorner) {\n                corner.show = false;\n            }\n\n            // corner props\n            const cornerProps = {\n                class: clsName(\"selection-corner\"),\n                style: {\n                    display: corner.show ? \"block\" : \"none\",\n                    top: cornerTop + \"px\",\n                    left: cornerLeft + \"px\",\n                    borderWidth: `1px ${cornerBorderRightWidth} ${cornerBorderBottomtWidth} 1px`,\n                },\n                on: {\n                    mousedown: (e) => {\n                        this.dispatch(\n                            COMPS_NAME.VE_TABLE,\n                            EMIT_EVENTS.SELECTION_CORNER_MOUSEDOWN,\n                            {\n                                event: e,\n                            },\n                        );\n                    },\n                    mouseup: (e) => {\n                        this.dispatch(\n                            COMPS_NAME.VE_TABLE,\n                            EMIT_EVENTS.SELECTION_CORNER_MOUSEUP,\n                            {\n                                event: e,\n                            },\n                        );\n                    },\n                },\n            };\n\n            return (\n                <div class={clsName(className)}>\n                    {/* top */}\n                    <div\n                        style={{\n                            display: topBorder.show ? \"block\" : \"none\",\n                            width: borderWidth + \"px\",\n                            height: topBorder.height + \"px\",\n                            top: topBorder.top + \"px\",\n                            left: topBorder.left + \"px\",\n                        }}\n                        class={clsName(\"selection-border\")}\n                    ></div>\n                    {/* right */}\n                    <div\n                        style={{\n                            display: rightBorder.show ? \"block\" : \"none\",\n                            width: rightBorder.width + \"px\",\n                            height: borderHeight + \"px\",\n                            top: rightBorder.top + \"px\",\n                            left: rightBorder.left + \"px\",\n                        }}\n                        class={clsName(\"selection-border\")}\n                    ></div>\n                    {/* bottom */}\n                    <div\n                        style={{\n                            display: bottomBorder.show ? \"block\" : \"none\",\n                            width: borderWidth + \"px\",\n                            height: bottomBorder.height + \"px\",\n                            top: bottomBorder.top + \"px\",\n                            left: bottomBorder.left + \"px\",\n                        }}\n                        class={clsName(\"selection-border\")}\n                    ></div>\n                    {/* left */}\n                    <div\n                        style={{\n                            display: leftBorder.show ? \"block\" : \"none\",\n                            width: leftBorder.width + \"px\",\n                            height: borderHeight + \"px\",\n                            top: leftBorder.top + \"px\",\n                            left: leftBorder.left + \"px\",\n                        }}\n                        class={clsName(\"selection-border\")}\n                    ></div>\n                    {/* corner */}\n                    {<div {...cornerProps}></div>}\n                </div>\n            );\n        },\n\n        // get area rect\n        getAreaLayer({\n            borderWidth,\n            borderHeight,\n            topBorder,\n            className,\n            fixedType,\n            totalColKeys,\n            fixedColKeys,\n        }) {\n            const { colgroups } = this;\n\n            let isRender = true;\n\n            if (fixedType) {\n                isRender = isExistGivenFixedColKey({\n                    fixedType,\n                    colKeys: totalColKeys,\n                    colgroups,\n                });\n            }\n            // middle normal area\n            else {\n                isRender = isExistNotFixedColKey({\n                    colKeys: totalColKeys,\n                    colgroups,\n                });\n            }\n\n            if (!isRender) {\n                return null;\n            }\n\n            // fixed columns total width\n            let fixedColsTotalWidth = 0;\n            if (fixedColKeys.length) {\n                fixedColsTotalWidth = getTotalWidthByColKeys({\n                    colKeys: fixedColKeys,\n                    colgroups,\n                });\n            }\n\n            if (fixedType) {\n                borderWidth = fixedColsTotalWidth;\n                if (fixedType === COLUMN_FIXED_TYPE.LEFT) {\n                    borderWidth += 1;\n                }\n            }\n\n            return (\n                <div\n                    class={clsName(className)}\n                    style={{\n                        top: topBorder.top + \"px\",\n                        left: topBorder.left + \"px\",\n                        width: borderWidth + \"px\",\n                        height: borderHeight + \"px\",\n                    }}\n                ></div>\n            );\n        },\n\n        /* \n        get table first row cell by col key\n        用作跨页单元格选择，表格大小变化或者存在横向滚动条时，区域选择位置自动校准\n        */\n        getTableFirstRowCellByColKey(colKey) {\n            let result = null;\n\n            const { tableEl } = this;\n\n            if (tableEl) {\n                result = tableEl.querySelector(\n                    `tbody.ve-table-body tr td[col-key=\"${colKey}\"]`,\n                );\n            }\n            return result;\n        },\n\n        /* \n        get table last row cell by col key\n        用作跨页单元格选择，表格大小变化或者存在横向滚动条时，区域选择位置自动校准\n        */\n        getTableLastRowCellByColKey(colKey) {\n            let result = null;\n\n            const { tableEl } = this;\n\n            if (tableEl) {\n                result = tableEl.querySelector(\n                    `tbody.ve-table-body tr:last-child td[col-key=\"${colKey}\"]`,\n                );\n            }\n            return result;\n        },\n\n        // get table el\n        getTableCellEl({ rowKey, colKey }) {\n            let result = null;\n\n            const { tableEl } = this;\n\n            if (tableEl) {\n                result = tableEl.querySelector(\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\n                );\n            }\n            return result;\n        },\n\n        // set current cell el\n        setCurrentCellEl() {\n            const { cellSelectionData } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                const cellEl = this.getTableCellEl({\n                    rowKey,\n                    colKey,\n                });\n                if (cellEl) {\n                    this.currentCellEl = cellEl;\n                }\n            }\n        },\n\n        // set normal end cell el\n        setNormalEndCellEl() {\n            const { cellSelectionData } = this;\n\n            const { rowKey, colKey } = cellSelectionData.normalEndCell;\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                const cellEl = this.getTableCellEl({\n                    rowKey,\n                    colKey,\n                });\n                if (cellEl) {\n                    this.normalEndCellEl = cellEl;\n                }\n            }\n        },\n\n        // set auto fill cell el\n        setAutofillEndCellEl() {\n            const { cellSelectionData, tableEl } = this;\n\n            const { rowKey, colKey } = cellSelectionData.autoFillEndCell;\n\n            if (tableEl) {\n                const autoFillEndCellEl = tableEl.querySelector(\n                    `tbody.ve-table-body tr[row-key=\"${rowKey}\"] td[col-key=\"${colKey}\"]`,\n                );\n\n                if (autoFillEndCellEl) {\n                    this.autoFillEndCellEl = autoFillEndCellEl;\n                }\n            }\n        },\n\n        // clear auto fill end cell rect\n        clearAutofillEndCellRect() {\n            this.autoFillEndCellEl = null;\n            this.cellSelectionRect.autoFillEndCellRect = {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n            };\n        },\n\n        // clear current cell rect\n        [INSTANCE_METHODS.CLEAR_CURRENT_CELL_RECT]() {\n            this.currentCellEl = null;\n            this.cellSelectionRect.currentCellRect = {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n            };\n        },\n\n        // clear normal end cell rect\n        [INSTANCE_METHODS.CLEAR_NORMAL_END_CELL_RECT]() {\n            this.normalEndCellEl = null;\n            this.cellSelectionRect.normalEndCellRect = {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0,\n            };\n        },\n    },\n\n    created() {\n        // debounce reset cell positions\n        this.debounceResetCellPositions = debounce(\n            this.resetCellPositions,\n            210,\n        );\n        // debounce set cell els\n        this.debounceSetCellEls = debounce(this.setCellEls, 200);\n    },\n\n    render() {\n        if (!this.selectionBordersVisibility) {\n            return null;\n        }\n\n        // fixed left\n        const fixedLeftSelectionCurrent = this.getSelectionCurrent({\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\n        });\n        const fixedLeftSelectionArea = this.getSelectionAreas({\n            fixedType: COLUMN_FIXED_TYPE.LEFT,\n        });\n\n        const fixedLeftAutoFillArea =\n            fixedLeftSelectionCurrent.autoFillArea ||\n            fixedLeftSelectionArea.autoFillArea;\n\n        // middle\n        const middleSelectionCurrent = this.getSelectionCurrent({\n            fixedType: \"\",\n        });\n        const middleSelectionArea = this.getSelectionAreas({\n            fixedType: \"\",\n        });\n\n        const middleAutoFillArea =\n            middleSelectionCurrent.autoFillArea ||\n            middleSelectionArea.autoFillArea;\n\n        // fixed right\n        const fixedRightSelectionCurrent = this.getSelectionCurrent({\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\n        });\n        const fixedRightSelectionArea = this.getSelectionAreas({\n            fixedType: COLUMN_FIXED_TYPE.RIGHT,\n        });\n\n        const fixedRightAutoFillArea =\n            fixedRightSelectionCurrent.autoFillArea ||\n            fixedRightSelectionArea.autoFillArea;\n\n        return (\n            <div\n                class={clsName(\"selection-wrapper\")}\n                style={{ visibility: this.isCellEditing ? \"hidden\" : \"\" }}\n            >\n                <div class={clsName(\"selection-fixed-left\")}>\n                    {/* current */}\n                    {fixedLeftSelectionCurrent.selectionCurrent}\n                    {/* area */}\n                    {fixedLeftSelectionArea.normalArea}\n                    {/* auto fill */}\n                    {fixedLeftAutoFillArea}\n                    {/* area layer */}\n                    {fixedLeftSelectionArea.normalAreaLayer}\n                </div>\n                <div class={clsName(\"selection-middle\")}>\n                    {/* current */}\n                    {middleSelectionCurrent.selectionCurrent}\n                    {/* area */}\n                    {middleSelectionArea.normalArea}\n                    {/* auto fill */}\n                    {middleAutoFillArea}\n                    {/* area layer */}\n                    {middleSelectionArea.normalAreaLayer}\n                </div>\n                <div class={clsName(\"selection-fixed-right\")}>\n                    {/* current */}\n                    {fixedRightSelectionCurrent.selectionCurrent}\n                    {/* area */}\n                    {fixedRightSelectionArea.normalArea}\n                    {/* auto fill */}\n                    {fixedRightAutoFillArea}\n                    {/* area layer */}\n                    {fixedRightSelectionArea.normalAreaLayer}\n                </div>\n            </div>\n        );\n    },\n};\n","import { clsName } from \"../util\";\nimport { COMPS_NAME, HOOKS_NAME } from \"../util/constant\";\nimport { isNumber } from \"../../../src/utils/index.js\";\n\nexport default {\n    name: COMPS_NAME.VE_TABLE_COLUMN_RESISZER,\n    props: {\n        parentRendered: {\n            type: Boolean,\n            required: true,\n        },\n        tableContainerEl: {\n            type: HTMLDivElement,\n            default: null,\n        },\n        hooks: {\n            type: Object,\n            required: true,\n        },\n        colgroups: {\n            type: Array,\n            required: true,\n        },\n        isColumnResizerHover: {\n            type: Boolean,\n            required: true,\n        },\n        isColumnResizing: {\n            type: Boolean,\n            required: true,\n        },\n        setIsColumnResizerHover: {\n            type: Function,\n            required: true,\n        },\n        setIsColumnResizing: {\n            type: Function,\n            required: true,\n        },\n        setColumnWidth: {\n            type: Function,\n            required: true,\n        },\n        // column width resize option\n        columnWidthResizeOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            // column resizer start x\n            columnResizerStartX: 0,\n            // current resizing column\n            currentResizingColumn: null,\n            // column resizer handler width\n            columnResizerHandlerWidth: 5,\n            // column resizer rect\n            columnResizerRect: {\n                top: 0,\n                left: 0,\n                height: 0,\n            },\n        };\n    },\n    computed: {\n        // column min width\n        columnMinWidth() {\n            let result = 30;\n\n            const { columnWidthResizeOption } = this;\n\n            if (columnWidthResizeOption) {\n                const { minWidth } = columnWidthResizeOption;\n                if (isNumber(minWidth) && minWidth > 0) {\n                    result = minWidth;\n                }\n            }\n            return result;\n        },\n    },\n    watch: {\n        parentRendered: {\n            handler: function (val) {\n                if (val) {\n                    // header cell mousemove\n                    this.hooks.addHook(\n                        HOOKS_NAME.HEADER_CELL_MOUSEMOVE,\n                        ({ event, column }) => {\n                            this.initColumnResizerPosition({ event, column });\n                        },\n                    );\n                }\n            },\n            immediate: true,\n        },\n    },\n    methods: {\n        // init column resizer position\n        initColumnResizerPosition({ event, column }) {\n            const { tableContainerEl, isColumnResizing } = this;\n\n            if (tableContainerEl && !isColumnResizing) {\n                const { left: tableContainerLeft, top: tableContainerTop } =\n                    tableContainerEl.getBoundingClientRect();\n\n                const col = this.colgroups.find((x) => x.key === column.key);\n\n                // 表头分组，不支持分组表头列宽拖动\n                if (!col) {\n                    return false;\n                }\n\n                if (col._realTimeWidth) {\n                    const target = event.target;\n                    const cellRect = target.getBoundingClientRect();\n                    const { height, left, top } = cellRect;\n\n                    this.columnResizerRect.left =\n                        left + col._realTimeWidth - tableContainerLeft;\n                    this.columnResizerRect.top = top - tableContainerTop;\n                    this.columnResizerRect.height = height;\n\n                    this.currentResizingColumn = col;\n                    this.columnResizerStartX = left + col._realTimeWidth;\n                } else {\n                    console.warn(\"Resizer column needs set column width\");\n                }\n\n                // if (col && col._realTimeWidth) {\n                //     const target = event.target;\n                //     const cellRect = target.getBoundingClientRect();\n                //     const { height, left, top } = cellRect;\n\n                //     this.columnResizerRect.left =\n                //         left + col._realTimeWidth - tableContainerLeft;\n                //     this.columnResizerRect.top = top - tableContainerTop;\n                //     this.columnResizerRect.height = height;\n\n                //     this.currentResizingColumn = col;\n                //     this.columnResizerStartX = left + col._realTimeWidth;\n                // } else {\n                //     console.warn(\"Resizer column needs set column width\");\n                // }\n            }\n        },\n\n        // set column resizer position byu drag\n        setColumnResizerPositionByDrag(event) {\n            const {\n                tableContainerEl,\n                isColumnResizing,\n                currentResizingColumn,\n            } = this;\n\n            if (tableContainerEl && isColumnResizing) {\n                const { left: tableContainerLeft } =\n                    tableContainerEl.getBoundingClientRect();\n\n                if (isColumnResizing && currentResizingColumn) {\n                    const { columnResizerStartX, columnMinWidth } = this;\n\n                    // 不允许拖动小于列最小宽度\n                    if (\n                        currentResizingColumn._realTimeWidth +\n                            (event.clientX - columnResizerStartX) >\n                        columnMinWidth\n                    ) {\n                        this.columnResizerRect.left =\n                            event.clientX - tableContainerLeft;\n                    }\n                }\n            }\n        },\n\n        // column resizer handler mousedown\n        columnResizerHandlerMousedown({ event }) {\n            if (this.isColumnResizerHover) {\n                this.setIsColumnResizing(true);\n\n                // add document mousemove listener\n                document.addEventListener(\n                    \"mousemove\",\n                    this.setColumnResizerPositionByDrag,\n                );\n                // add document mouseup listener\n                document.addEventListener(\"mouseup\", this.columnResizerMouseup);\n\n                // stop text select when reszing\n                document.onselectstart = function () {\n                    return false;\n                };\n                document.ondragstart = function () {\n                    return false;\n                };\n            }\n        },\n\n        // column resizer mouseup\n        columnResizerMouseup(event) {\n            const {\n                isColumnResizing,\n                currentResizingColumn,\n                columnResizerStartX,\n                setColumnWidth,\n                columnWidthResizeOption,\n                columnMinWidth,\n            } = this;\n\n            if (!isColumnResizing || !currentResizingColumn) {\n                return false;\n            }\n\n            let differWidth;\n            // 拖动小于列最小宽度\n            if (\n                currentResizingColumn._realTimeWidth +\n                    (event.clientX - columnResizerStartX) <\n                columnMinWidth\n            ) {\n                differWidth =\n                    columnMinWidth - currentResizingColumn._realTimeWidth;\n            } else {\n                differWidth = event.clientX - columnResizerStartX;\n            }\n            differWidth = Math.floor(differWidth);\n\n            // 偏差阈值，低于则不处理\n            if (Math.abs(differWidth) > 1) {\n                let nextColumnWidth = currentResizingColumn._realTimeWidth;\n                nextColumnWidth += differWidth;\n\n                // set column width\n                setColumnWidth({\n                    colKey: currentResizingColumn.key,\n                    width: nextColumnWidth,\n                });\n\n                if (columnWidthResizeOption) {\n                    const { sizeChange } = columnWidthResizeOption;\n                    sizeChange &&\n                        sizeChange({\n                            column: currentResizingColumn,\n                            differWidth,\n                            columnWidth: nextColumnWidth,\n                        });\n                }\n            }\n\n            this.clearColumnResizerStatus();\n            // add document mousemove listener\n            document.removeEventListener(\n                \"mousemove\",\n                this.setColumnResizerPositionByDrag,\n            );\n            // add document mouseup listener\n            document.removeEventListener(\"mouseup\", this.columnResizerMouseup);\n        },\n\n        // clear column resizer status\n        clearColumnResizerStatus() {\n            this.currentResizingColumn = null;\n            this.columnResizerStartX = 0;\n            this.setIsColumnResizerHover(false);\n            this.setIsColumnResizing(false);\n\n            // enable text select when reszing\n            document.onselectstart = function () {\n                return true;\n            };\n            document.ondragstart = function () {\n                return true;\n            };\n        },\n    },\n\n    render() {\n        const {\n            isColumnResizerHover,\n            isColumnResizing,\n            columnResizerRect,\n            columnResizerHandlerWidth,\n        } = this;\n\n        const { left, top, height } = columnResizerRect;\n\n        const columnResizerHandlerProps = {\n            class: {\n                [clsName(\"column-resizer-handler\")]: true,\n                [\"active\"]: isColumnResizerHover || isColumnResizing,\n            },\n            style: {\n                left: left - columnResizerHandlerWidth + \"px\",\n                top: top + \"px\",\n                height: height + \"px\",\n            },\n            on: {\n                click: () => {\n                    //\n                },\n                mousedown: (event) => {\n                    this.columnResizerHandlerMousedown({ event });\n                },\n                mouseenter: () => {\n                    this.setIsColumnResizerHover(true);\n                },\n                mouseleave: () => {\n                    this.setIsColumnResizerHover(false);\n                },\n                mouseup: (event) => {\n                    this.columnResizerMouseup(event);\n                },\n            },\n        };\n\n        const columnResizerLineProps = {\n            class: [clsName(\"column-resizer-line\")],\n            style: {\n                display: isColumnResizing ? \"block\" : \"none\",\n                left: left + \"px\",\n            },\n        };\n\n        return (\n            <div class={clsName(\"column-resizer\")}>\n                <div {...columnResizerHandlerProps} />\n                <div {...columnResizerLineProps} />\n            </div>\n        );\n    },\n};\n","import { cloneDeep, debounce } from \"lodash\";\nimport {\n    initGroupColumns,\n    clsName,\n    getNotFixedTotalWidthByColumnKey,\n    recursiveRemoveColumnByKey,\n    setHeaderContextmenuOptions,\n    setBodyContextmenuOptions,\n    createEmptyRowData,\n    isContextmenuPanelClicked,\n    getRowKey,\n    getColKeysByHeaderColumn,\n    getColumnByColkey,\n    getLeftmostColKey,\n    isCellInSelectionRange,\n    isClearSelectionByBodyCellRightClick,\n    cellAutofill,\n    isOperationColumn,\n    getSelectionRangeData,\n    getSelectionRangeKeys,\n    getSelectionRangeIndexes,\n    setColumnFixed,\n    cancelColumnFixed,\n} from \"./util\";\nimport {\n    onBeforeCopy,\n    onAfterCopy,\n    onBeforePaste,\n    onAfterPaste,\n    onBeforeCut,\n    onAfterCut,\n    onBeforeDelete,\n    onAfterDelete,\n} from \"./util/clipboard\";\nimport {\n    getValByUnit,\n    isFunction,\n    isNumber,\n    scrollTo,\n    isEmptyValue,\n    isEmptyArray,\n    isBoolean,\n    isDefined,\n    createLocale,\n} from \"../../src/utils/index.js\";\nimport { KEY_CODES, MOUSE_EVENT_CLICK_TYPE } from \"../../src/utils/constant\";\nimport { getScrollbarWidth } from \"../../src/utils/scroll-bar\";\nimport {\n    requestAnimationTimeout,\n    cancelAnimationTimeout,\n} from \"../../src/utils/request-animation-timeout\";\nimport { isInputKeyCode } from \"../../src/utils/event-key-codes\";\nimport Hooks from \"../../src/utils/hooks-manager\";\nimport { getMouseEventClickType } from \"../../src/utils/mouse-event\";\nimport emitter from \"../../src/mixins/emitter\";\nimport {\n    COMPS_NAME,\n    HOOKS_NAME,\n    EMIT_EVENTS,\n    COMPS_CUSTOM_ATTRS,\n    INSTANCE_METHODS,\n    CELL_SELECTION_DIRECTION,\n    LOCALE_COMP_NAME,\n    CONTEXTMENU_TYPES,\n    CONTEXTMENU_NODE_TYPES,\n    AUTOFILLING_DIRECTION,\n    CURRENT_CELL_SELECTION_TYPES,\n    COLUMN_FIXED_TYPE,\n} from \"./util/constant\";\nimport Colgroup from \"./colgroup\";\nimport Header from \"./header\";\nimport Body from \"./body\";\nimport Footer from \"./footer\";\nimport EditInput from \"./editor/index\";\nimport Selection from \"./selection/index\";\nimport clickoutside from \"../../src/directives/clickoutside\";\nimport VueDomResizeObserver from \"../../src/comps/resize-observer\";\nimport VeContextmenu from \"vue-easytable/packages/ve-contextmenu\";\nimport ColumnResizer from \"./column-resizer\";\n\nconst t = createLocale(LOCALE_COMP_NAME);\n\nexport default {\n    name: COMPS_NAME.VE_TABLE,\n    directives: {\n        \"click-outside\": clickoutside,\n    },\n    mixins: [emitter],\n    props: {\n        tableData: {\n            required: true,\n            type: Array,\n        },\n        footerData: {\n            type: Array,\n            default: function () {\n                return [];\n            },\n        },\n        showHeader: {\n            type: Boolean,\n            default: true,\n        },\n        columns: {\n            type: Array,\n            required: true,\n        },\n        // row key field for row expand、row selection\n        rowKeyFieldName: {\n            type: String,\n            default: null,\n        },\n        // table scroll width\n        scrollWidth: {\n            type: [Number, String],\n            default: null,\n        },\n        // table max height\n        maxHeight: {\n            type: [Number, String],\n            default: null,\n        },\n        // fixed header\n        fixedHeader: {\n            type: Boolean,\n            default: true,\n        },\n        // fixed footer\n        fixedFooter: {\n            type: Boolean,\n            default: true,\n        },\n        // border around\n        borderAround: {\n            type: Boolean,\n            default: true,\n        },\n        // border horizontal\n        borderX: {\n            type: Boolean,\n            default: true,\n        },\n        // border vertical\n        borderY: {\n            type: Boolean,\n            default: false,\n        },\n        // event custom option\n        eventCustomOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell style option\n        cellStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell span option\n        cellSpanOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // row style option\n        rowStyleOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        /*\n        virual scroll option\n        {\n            enable:true,\n            bufferCount:10, // 缓冲的数据\n            minRowHeight:40,\n            scrolling:(startRowIndex,visibleStartIndex,visibleEndIndex,visibleAboveCount,visibleBelowCount)=>{}\n        }\n        */\n        virtualScrollOption: {\n            type: Object,\n            default: null,\n        },\n        // sort option\n        sortOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // expand row option\n        expandOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // checkbox option\n        checkboxOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // radio option\n        radioOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell selection option\n        cellSelectionOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // cell autofill option\n        cellAutofillOption: {\n            type: [Object, Boolean],\n            default: function () {\n                return null;\n            },\n        },\n        // edit option\n        editOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // column hidden option\n        columnHiddenOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // contextmenu header option\n        contextmenuHeaderOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // contextmenu body option\n        contextmenuBodyOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // clipboard option\n        clipboardOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n        // column width resize option\n        columnWidthResizeOption: {\n            type: Object,\n            default: function () {\n                return null;\n            },\n        },\n    },\n    data() {\n        return {\n            // Hooks instance\n            hooks: {},\n            // is parent rendered\n            parentRendered: false,\n            // table viewport width except scroll bar width\n            tableViewportWidth: 0,\n            /*\n            列配置变化次数\n            依赖columns 配置渲染，都需要重新计算：粘性布局时，重新触发 on-dom-resize-change 事件\n            */\n            columnsOptionResetTime: 0,\n            tableRootRef: \"tableRootRef\",\n            tableContainerWrapperRef: \"tableContainerWrapperRef\",\n            tableContainerRef: \"tableContainerRef\",\n            tableRef: \"tableRef\",\n            tableBodyRef: \"tableBodyRef\",\n            tableContentWrapperRef: \"tableContentWrapperRef\",\n            virtualPhantomRef: \"virtualPhantomRef\",\n            editInputRef: \"editInputRef\",\n            cellSelectionRef: \"cellSelectionRef\",\n            contextmenuRef: \"contextmenuRef\",\n            cloneColumns: [],\n            // is group header\n            isGroupHeader: false,\n            /*\n            header rows created by groupColumns\n            */\n            headerRows: [\n                /* {\n                rowHeight:40\n            } */\n            ],\n            /*\n            footer rows created by footerData\n            */\n            footerRows: [\n                /* {\n                rowHeight:40\n             } */\n            ],\n            // colgroups\n            colgroups: [],\n            // groupColumns\n            groupColumns: [],\n            /*\n            存储当前隐藏列信息\n            hidden columns\n            */\n            hiddenColumns: [],\n            /*\n            // virtual scroll positions（非响应式）\n            virtualScrollPositions = [\n                {\n                    rowKey: \"\", // 当前行数据 rowKey\n                    top: 0, // 距离上一个项的高度\n                    bottom: 100, // 距离下一个项的高度\n                    height: 100 // 自身高度\n                }\n            ],\n            */\n            // virtual scroll visible data\n            virtualScrollVisibleData: [],\n            // virtual scroll visible indexs\n            virtualScrollVisibleIndexs: {\n                start: -1,\n                end: -1,\n            },\n            // default virtual scroll buffer scale\n            defaultVirtualScrollBufferScale: 1,\n            // default virtual scroll min row height\n            defaultVirtualScrollMinRowHeight: 40,\n            // default placeholder per scrolling row count\n            defaultPlaceholderPerScrollingRowCount: 8,\n            //起始索引\n            virtualScrollStartIndex: 0,\n            // preview virtual scroll start index\n            previewVirtualScrollStartIndex: 0,\n            //结束索引\n            virtualScrollEndIndex: 0,\n            // is scrolling\n            showVirtualScrollingPlaceholder: false,\n            // disable pointer events timeout id\n            disablePointerEventsTimeoutId: null,\n            // is scrolling left\n            isLeftScrolling: false,\n            // is scrolling right\n            isRightScrolling: false,\n            // has horizontal scroll bar\n            hasXScrollBar: false,\n            // has vertical scroll bar\n            hasYScrollBar: false,\n            // scroll bar width\n            scrollBarWidth: 0,\n            // preview table container scrollLeft （处理左列或右列固定效果）\n            previewTableContainerScrollLeft: null,\n            // header cell selection colKeys\n            headerIndicatorColKeys: {\n                startColKey: \"\",\n                startColKeyIndex: -1,\n                endColKey: \"\",\n                endColKeyIndex: -1,\n            },\n            // body indicator rowKeys\n            bodyIndicatorRowKeys: {\n                startRowKey: \"\",\n                startRowKeyIndex: -1,\n                endRowKey: \"\",\n                endRowKeyIndex: -1,\n            },\n            // cell selection data\n            cellSelectionData: {\n                currentCell: {\n                    rowKey: \"\",\n                    colKey: \"\",\n                    rowIndex: -1,\n                },\n                normalEndCell: {\n                    rowKey: \"\",\n                    colKey: \"\",\n                    rowIndex: -1,\n                },\n                autoFillEndCell: {\n                    rowKey: \"\",\n                    colKey: \"\",\n                },\n            },\n            // cell selection range data\n            cellSelectionRangeData: {\n                leftColKey: \"\",\n                rightColKey: \"\",\n                topRowKey: \"\",\n                bottomRowKey: \"\",\n            },\n            // is header cell mousedown\n            isHeaderCellMousedown: false,\n            // is body cell mousedown\n            isBodyCellMousedown: false,\n            // is body operation column mousedown\n            isBodyOperationColumnMousedown: false,\n            // is cell selection corner mousedown\n            isAutofillStarting: false,\n            // autofilling direction\n            autofillingDirection: null,\n            // current cell selection type\n            currentCellSelectionType: \"\",\n            /*\n            table offest height（开启虚拟滚动时使用）\n            1、当 :max-height=\"500\" 时使用 max-height \n            2、当 max-height=\"calc(100vh - 210px)\" 或者 max-height=\"80%\" 时使用 tableOffestHeight\n            */\n            tableOffestHeight: 0,\n            // table height\n            tableHeight: 0,\n            // highlight row key\n            highlightRowKey: \"\",\n            /* \n            editing cell\n            */\n            editingCell: {\n                rowKey: \"\",\n                colKey: \"\",\n                row: null,\n                column: null,\n            },\n            // 编辑单元格每次开始编辑前的初始值\n            editorInputStartValue: \"\",\n            /* \n            是否允许按下方向键时，停止编辑并移动选中单元格。当双击可编辑单元格或者点击输入文本框时设置为false值\n\n            像excel一样：如果直接在可编辑单元格上输入内容后，按下上、下、左、右按键可以直接选中其他单元格，并停止当前单元格编辑状态\n            like Excel:If you directly enter content in an editable cell, press the up, down, left and right buttons to directly select other cells and stop editing the current cell\n            */\n            enableStopEditing: true,\n            // contextmenu event target\n            contextmenuEventTarget: \"\",\n            // contextmenu options\n            contextmenuOptions: [],\n            // column resize cursor\n            isColumnResizerHover: false,\n            // is column resizing\n            isColumnResizing: false,\n        };\n    },\n    computed: {\n        // actual render table data\n        actualRenderTableData() {\n            return this.isVirtualScroll\n                ? this.virtualScrollVisibleData\n                : this.tableData;\n        },\n        // return row keys\n        allRowKeys() {\n            let result = [];\n\n            const { tableData, rowKeyFieldName } = this;\n\n            if (rowKeyFieldName) {\n                result = tableData.map((x) => {\n                    return x[rowKeyFieldName];\n                });\n            }\n\n            return result;\n        },\n        // virtual scroll buffer count\n        virtualScrollBufferCount() {\n            let result = 0;\n\n            const {\n                virtualScrollOption,\n                defaultVirtualScrollBufferScale,\n                virtualScrollVisibleCount,\n            } = this;\n\n            if (virtualScrollOption) {\n                const { bufferScale } = virtualScrollOption;\n\n                let realBufferScale =\n                    isNumber(bufferScale) && bufferScale > 0\n                        ? bufferScale\n                        : defaultVirtualScrollBufferScale;\n\n                result = realBufferScale * virtualScrollVisibleCount;\n            }\n\n            return result;\n        },\n        // virtual scroll visible count\n        virtualScrollVisibleCount() {\n            let result = 0;\n\n            const {\n                isVirtualScroll,\n                virtualScrollOption,\n                defaultVirtualScrollMinRowHeight,\n                maxHeight,\n                tableOffestHeight,\n            } = this;\n\n            if (isVirtualScroll && maxHeight) {\n                const minRowHeight = isNumber(virtualScrollOption.minRowHeight)\n                    ? virtualScrollOption.minRowHeight\n                    : defaultVirtualScrollMinRowHeight;\n\n                if (isNumber(maxHeight)) {\n                    result = Math.ceil(maxHeight / minRowHeight);\n                } else if (tableOffestHeight) {\n                    // 修复当动态高度 当 max-height=\"calc(100vh - 210px)\" 或者 max-height=\"80%\" 时无法计算的问题\n                    result = Math.ceil(tableOffestHeight / minRowHeight);\n                }\n            }\n            return result;\n        },\n        // table container wrapper style\n        tableContainerWrapperStyle() {\n            return {\n                width: \"100%\",\n            };\n        },\n        // table container style\n        tableContainerStyle() {\n            let maxHeight = getValByUnit(this.maxHeight);\n\n            let tableContainerHeight = null;\n            if (this.isVirtualScroll) {\n                if (maxHeight) {\n                    tableContainerHeight = maxHeight;\n                } else {\n                    console.error(\n                        \"maxHeight prop is required when 'virtualScrollOption.enable = true'\",\n                    );\n                }\n            } else {\n                /* \n                fixed:虚拟滚动表格行展开的 ve-table 存在固定头时（sticky 冲突），表格样式错乱的问题\n                fixed:When there is a fixed header in the ve-table expanded by the row of the virtual rolling table(header sticky conflict),Incorrect table presentation\n                */\n                const { tableHeight, hasXScrollBar } = this;\n                tableContainerHeight = tableHeight;\n                /*\n                    有横向滚动条时，表格高度需要加上滚动条的宽度\n                    When there is a horizontal scroll bar, the table height needs to be added with the width of the scroll bar\n                    */\n                if (hasXScrollBar) {\n                    tableContainerHeight += this.getScrollBarWidth();\n                }\n\n                tableContainerHeight = getValByUnit(tableContainerHeight);\n            }\n\n            return {\n                \"max-height\": maxHeight,\n                // if virtual scroll\n                height: tableContainerHeight,\n            };\n        },\n        // table style\n        tableStyle() {\n            return {\n                width: getValByUnit(this.scrollWidth),\n            };\n        },\n        // table class\n        tableClass() {\n            return {\n                [clsName(\"border-x\")]: this.borderX,\n                [clsName(\"border-y\")]: this.borderY,\n            };\n        },\n        // table container class\n        tableContainerClass() {\n            const {\n                isVirtualScroll,\n                isLeftScrolling,\n                isRightScrolling,\n                isCellEditing,\n                isAutofillStarting,\n                enableCellSelection,\n            } = this;\n\n            return {\n                [clsName(\"container\")]: true,\n                [clsName(\"virtual-scroll\")]: isVirtualScroll,\n                [clsName(\"container-left-scrolling\")]: isLeftScrolling,\n                [clsName(\"container-right-scrolling\")]: isRightScrolling,\n                [clsName(\"is-cell-editing\")]: isCellEditing,\n                [clsName(\"autofilling\")]: isAutofillStarting,\n                // 如果开启单元格选择，则关闭 user-select\n                [clsName(\"enable-cell-selection\")]: enableCellSelection,\n            };\n        },\n        // table body class\n        tableBodyClass() {\n            let result = null;\n\n            const { rowStyleOption } = this;\n\n            let hoverHighlight = true;\n            let clickHighlight = true;\n            let stripe = false;\n\n            if (rowStyleOption) {\n                hoverHighlight = rowStyleOption.hoverHighlight;\n                clickHighlight = rowStyleOption.clickHighlight;\n                stripe = rowStyleOption.stripe;\n            }\n\n            result = {\n                [clsName(\"stripe\")]: stripe === true, // 默认不开启\n                [clsName(\"row-hover\")]: hoverHighlight !== false, // 默认开启\n                [clsName(\"row-highlight\")]: clickHighlight !== false, // 默认开启\n            };\n\n            return result;\n        },\n        // is virtual scroll\n        isVirtualScroll() {\n            const { virtualScrollOption } = this;\n            return virtualScrollOption && virtualScrollOption.enable;\n        },\n        // has fixed column\n        hasFixedColumn() {\n            return this.colgroups.some(\n                (x) =>\n                    x.fixed === COLUMN_FIXED_TYPE.LEFT ||\n                    x.fixed === COLUMN_FIXED_TYPE.RIGHT,\n            );\n        },\n        // has left fixed column\n        hasLeftFixedColumn() {\n            return this.colgroups.some(\n                (x) => x.fixed === COLUMN_FIXED_TYPE.LEFT,\n            );\n        },\n        // has right fixed column\n        hasRightFixedColumn() {\n            return this.colgroups.some(\n                (x) => x.fixed === COLUMN_FIXED_TYPE.RIGHT,\n            );\n        },\n        // is editing cell\n        isCellEditing() {\n            const { editingCell } = this;\n\n            return (\n                !isEmptyValue(editingCell.rowKey) &&\n                !isEmptyValue(editingCell.colKey)\n            );\n        },\n        // has edit column\n        hasEditColumn() {\n            return this.colgroups.some((x) => x.edit);\n        },\n        // enable header contextmenu\n        enableHeaderContextmenu() {\n            let result = false;\n\n            const { contextmenuHeaderOption } = this;\n            if (contextmenuHeaderOption) {\n                const { contextmenus } = contextmenuHeaderOption;\n\n                if (Array.isArray(contextmenus) && contextmenus.length) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n        // enable body contextmenu\n        enableBodyContextmenu() {\n            let result = false;\n\n            const { contextmenuBodyOption } = this;\n            if (contextmenuBodyOption) {\n                const { contextmenus } = contextmenuBodyOption;\n\n                if (Array.isArray(contextmenus) && contextmenus.length) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n        // contextmenu type\n        contextMenuType() {\n            if (this.headerIndicatorColKeys.startColKeyIndex > -1) {\n                return CONTEXTMENU_TYPES.HEADER_CONTEXTMENU;\n            } else {\n                return CONTEXTMENU_TYPES.BODY_CONTEXTMENU;\n            }\n        },\n        /*\n        enable cell selection\n        单元格编辑、剪贴板都依赖单元格选择\n        */\n        enableCellSelection() {\n            let result = true;\n\n            const { cellSelectionOption, rowKeyFieldName } = this;\n\n            if (isEmptyValue(rowKeyFieldName)) {\n                result = false;\n            } else if (\n                cellSelectionOption &&\n                isBoolean(cellSelectionOption.enable) &&\n                cellSelectionOption.enable === false\n            ) {\n                result = false;\n            }\n            return result;\n        },\n        // enable clipboard\n        enableClipboard() {\n            return this.rowKeyFieldName;\n        },\n        // eanble width resize\n        enableColumnResize() {\n            let result = false;\n            const { columnWidthResizeOption } = this;\n            if (columnWidthResizeOption) {\n                const { enable } = columnWidthResizeOption;\n                if (isBoolean(enable)) {\n                    result = enable;\n                }\n            }\n            return result;\n        },\n        // header total height\n        headerTotalHeight() {\n            let result = 0;\n            if (this.showHeader) {\n                result = this.headerRows.reduce((total, currentVal) => {\n                    return currentVal.rowHeight + total;\n                }, 0);\n            }\n            return result;\n        },\n        // footer total height\n        footerTotalHeight() {\n            return this.footerRows.reduce((total, currentVal) => {\n                return currentVal.rowHeight + total;\n            }, 0);\n        },\n    },\n    watch: {\n        // watch clone table data\n        tableData: {\n            handler(newVal, oldVal) {\n                this.initVirtualScrollPositions();\n                // 第一次不需要触发，仅数据变更触发\n                if (oldVal) {\n                    this.initVirtualScroll();\n                }\n            },\n            immediate: true,\n        },\n        allRowKeys: {\n            handler(newVal) {\n                if (Array.isArray(newVal)) {\n                    const { currentCell } = this.cellSelectionData;\n                    // 行被移除，清空单元格选中\n                    if (currentCell.rowIndex > -1) {\n                        if (newVal.indexOf(currentCell.rowKey) === -1) {\n                            this.clearCellSelectionCurrentCell();\n                        }\n                    }\n                }\n            },\n            immediate: false,\n        },\n        columns: {\n            handler(newVal, oldVal) {\n                this.initColumns();\n                this.initGroupColumns();\n                this.initColumnWidthByColumnResize();\n\n                // 排除首次\n                if (newVal != oldVal && oldVal) {\n                    this.columnsOptionResetTime++;\n                    // 需要等待 initColumns 和 initGroupColumns 先执行\n                    this.initScrolling();\n                }\n            },\n            immediate: true,\n        },\n        cloneColumns: {\n            handler() {\n                this.initGroupColumns();\n                // 右键（取消）固定列会操作 cloneColumns\n                this.initColumnWidthByColumnResize();\n\n                this.columnsOptionResetTime++;\n                // 需要等待 initColumns 和 initGroupColumns 先执行\n                this.initScrolling();\n            },\n            immediate: false,\n        },\n        // group columns change watch\n        groupColumns: {\n            handler(val) {\n                if (!isEmptyArray(val)) {\n                    this.initHeaderRows();\n                }\n            },\n            immediate: true,\n        },\n        // footer data\n        footerData: {\n            handler(val) {\n                if (!isEmptyArray(val)) {\n                    this.initFooterRows();\n                }\n            },\n            immediate: true,\n        },\n        /*\n        watch virtualScrollOption enable\n        允许按需开启虚拟滚动\n        */\n        \"virtualScrollOption.enable\": {\n            handler(newVal) {\n                // enable virtual scroll\n                if (newVal) {\n                    this.initVirtualScrollPositions();\n                    this.initVirtualScroll();\n                }\n                // disable virtual scroll\n                else {\n                    // clear table content top value\n                    this.setTableContentTopValue({ top: 0 });\n                }\n            },\n            immediate: false,\n        },\n        // is auto fill starting\n        isAutofillStarting: {\n            handler(val) {\n                if (!val) {\n                    this.setCellSelectionByAutofill();\n                    this.clearCellSelectionAutofillEndCell();\n                }\n            },\n        },\n        // watch current cell\n        \"cellSelectionData.currentCell\": {\n            handler: function () {\n                this.setCurrentCellSelectionType();\n            },\n            deep: true,\n            immediate: true,\n        },\n        // watch normal end cell\n        \"cellSelectionData.normalEndCell\": {\n            handler: function () {\n                this.setCurrentCellSelectionType();\n            },\n            deep: true,\n            immediate: true,\n        },\n        // watch header indicator colKeys\n        headerIndicatorColKeys: {\n            handler: function () {\n                this.setRangeCellSelectionByHeaderIndicator();\n            },\n            deep: true,\n        },\n        // watch body indicator rowKeys\n        bodyIndicatorRowKeys: {\n            handler: function () {\n                this.setRangeCellSelectionByBodyIndicator();\n            },\n            deep: true,\n        },\n    },\n\n    methods: {\n        // int header rows\n        initHeaderRows() {\n            const { groupColumns } = this;\n\n            if (Array.isArray(groupColumns)) {\n                this.headerRows = groupColumns.map(() => {\n                    return { rowHeight: 0 };\n                });\n            }\n        },\n\n        // int footer rows\n        initFooterRows() {\n            const { footerData } = this;\n\n            if (Array.isArray(footerData)) {\n                this.footerRows = footerData.map(() => {\n                    return { rowHeight: 0 };\n                });\n            }\n        },\n\n        // header tr height resize\n        headerRowHeightChange({ rowIndex, height }) {\n            this.headerRows.splice(rowIndex, 1, { rowHeight: height });\n        },\n\n        // footer row height resize\n        footRowHeightChange({ rowIndex, height }) {\n            this.footerRows.splice(rowIndex, 1, { rowHeight: height });\n        },\n\n        // body cell width change\n        bodyCellWidthChange(colWidths) {\n            this.colgroups = this.colgroups.map((item) => {\n                item._realTimeWidth = colWidths.get(item.key);\n                return item;\n            });\n\n            this.hooks.triggerHook(HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE);\n        },\n\n        // set column width for column resize\n        setColumnWidth({ colKey, width }) {\n            this.colgroups = this.colgroups.map((item) => {\n                if (item.key === colKey) {\n                    item._columnResizeWidth = width;\n                }\n                return item;\n            });\n            this.$nextTick(() => {\n                this.setScrollBarStatus();\n            });\n            this.hooks.triggerHook(HOOKS_NAME.TABLE_CELL_WIDTH_CHANGE);\n        },\n\n        // update colgroups by sort change\n        updateColgroupsBySortChange(sortColumns) {\n            this.colgroups = this.colgroups.map((item) => {\n                // update colgroups by sort columns\n                if (Object.keys(sortColumns).indexOf(item.field) > -1) {\n                    item.sortBy = sortColumns[item.field];\n                }\n                return item;\n            });\n        },\n\n        // init column width by column resize\n        initColumnWidthByColumnResize() {\n            const { enableColumnResize } = this;\n\n            const columnDefaultWidth = 50;\n            if (enableColumnResize) {\n                this.colgroups = this.colgroups.map((item) => {\n                    let columnWidth = columnDefaultWidth;\n                    if (isNumber(item.width)) {\n                        columnWidth = item.width;\n                    }\n                    item._columnResizeWidth = columnWidth;\n                    return item;\n                });\n            }\n        },\n\n        // init columns\n        initColumns() {\n            const { columnHiddenOption } = this;\n            if (columnHiddenOption) {\n                const { defaultHiddenColumnKeys } = columnHiddenOption;\n\n                if (!isEmptyArray(defaultHiddenColumnKeys)) {\n                    this.hiddenColumns = defaultHiddenColumnKeys;\n                }\n            }\n\n            this.showOrHideColumns();\n        },\n\n        // show or hide columns\n        showOrHideColumns() {\n            let cloneColumns = cloneDeep(this.columns);\n\n            cloneColumns = cloneColumns.map((col) => {\n                // 操作列默认左固定\n                if (col.operationColumn) {\n                    col.fixed = COLUMN_FIXED_TYPE.LEFT;\n                }\n                return col;\n            });\n\n            const { hiddenColumns } = this;\n\n            if (!isEmptyArray(hiddenColumns)) {\n                //  recursive remove column key\n                hiddenColumns.forEach((key) => {\n                    cloneColumns = recursiveRemoveColumnByKey(\n                        cloneColumns,\n                        key,\n                    );\n                });\n            }\n\n            this.cloneColumns = cloneColumns;\n        },\n\n        // 初始化分组表头\n        initGroupColumns() {\n            const result = initGroupColumns(this.cloneColumns);\n\n            // set is group header\n            this.isGroupHeader = result.isGroupHeader;\n            // set colgroups\n            this.colgroups = result.colgroups;\n            // set groupColumns\n            this.groupColumns = result.groupColumns;\n        },\n\n        // scroll bar width\n        getScrollBarWidth() {\n            let result = 0;\n\n            const { scrollBarWidth } = this;\n\n            if (scrollBarWidth) {\n                result = scrollBarWidth;\n            } else {\n                result = getScrollbarWidth();\n                this.scrollBarWidth = result;\n            }\n\n            return result;\n        },\n\n        /*\n         * @selectedAllChange\n         * @desc  selected all change\n         * @param {bool} isSelected - is selected\n         */\n        selectedAllChange({ isSelected }) {\n            this.broadcast(\n                COMPS_NAME.VE_TABLE_BODY,\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE,\n                {\n                    isSelected,\n                },\n            );\n        },\n\n        /*\n         * @setSelectedAllInfo\n         * @desc  set selected all info\n         * @param {bool} isSelected - is selected\n         * @param {bool} isIndeterminate - is indeterminate\n         */\n        setSelectedAllInfo({ isSelected, isIndeterminate }) {\n            this.broadcast(\n                COMPS_NAME.VE_TABLE_HEADER_CHECKBOX_CONTENT,\n                EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO,\n                {\n                    isSelected,\n                    isIndeterminate,\n                },\n            );\n        },\n\n        // cell selection current cell change\n        cellSelectionCurrentCellChange({ rowKey, colKey }) {\n            this.cellSelectionData.currentCell.colKey = colKey;\n            this.cellSelectionData.currentCell.rowKey = rowKey;\n            this.cellSelectionData.currentCell.rowIndex =\n                this.allRowKeys.indexOf(rowKey);\n        },\n\n        // cell selection end cell change\n        cellSelectionNormalEndCellChange({ rowKey, colKey }) {\n            this.cellSelectionData.normalEndCell.colKey = colKey;\n            this.cellSelectionData.normalEndCell.rowKey = rowKey;\n            this.cellSelectionData.normalEndCell.rowIndex =\n                this.allRowKeys.indexOf(rowKey);\n        },\n\n        // cell selection auto fill cell change\n        cellSelectionAutofillCellChange({ rowKey, colKey }) {\n            this.cellSelectionData.autoFillEndCell.colKey = colKey;\n            this.cellSelectionData.autoFillEndCell.rowKey = rowKey;\n        },\n\n        // clear cell selection current cell\n        clearCellSelectionCurrentCell() {\n            this.cellSelectionCurrentCellChange({\n                rowKey: \"\",\n                colKey: \"\",\n                rowIndex: -1,\n            });\n        },\n\n        // clear cell selection normal end cell\n        clearCellSelectionNormalEndCell() {\n            this.cellSelectionNormalEndCellChange({\n                rowKey: \"\",\n                colKey: \"\",\n                rowIndex: -1,\n            });\n        },\n\n        // clear cell selection autofill end cell\n        clearCellSelectionAutofillEndCell() {\n            this.cellSelectionAutofillCellChange({ rowKey: \"\", colKey: \"\" });\n        },\n\n        // header indicator colKeys change\n        headerIndicatorColKeysChange({ startColKey, endColKey }) {\n            const { colgroups } = this;\n            this.headerIndicatorColKeys.startColKey = startColKey;\n            this.headerIndicatorColKeys.startColKeyIndex = colgroups.findIndex(\n                (x) => x.key === startColKey,\n            );\n            this.headerIndicatorColKeys.endColKey = endColKey;\n            this.headerIndicatorColKeys.endColKeyIndex = colgroups.findIndex(\n                (x) => x.key === endColKey,\n            );\n        },\n\n        // clear header indicator colKeys\n        clearHeaderIndicatorColKeys() {\n            this.headerIndicatorColKeys.startColKey = \"\";\n            this.headerIndicatorColKeys.startColKeyIndex = -1;\n            this.headerIndicatorColKeys.endColKey = \"\";\n            this.headerIndicatorColKeys.endColKeyIndex = -1;\n        },\n\n        // body indicator rowKeys change\n        bodyIndicatorRowKeysChange({ startRowKey, endRowKey }) {\n            const { allRowKeys } = this;\n            this.bodyIndicatorRowKeys.startRowKey = startRowKey;\n            this.bodyIndicatorRowKeys.startRowKeyIndex =\n                allRowKeys.indexOf(startRowKey);\n            this.bodyIndicatorRowKeys.endRowKey = endRowKey;\n            this.bodyIndicatorRowKeys.endRowKeyIndex =\n                allRowKeys.indexOf(endRowKey);\n        },\n\n        // clear body indicator RowKeys\n        clearBodyIndicatorRowKeys() {\n            this.bodyIndicatorRowKeys.startRowKey = \"\";\n            this.bodyIndicatorRowKeys.startRowKeyIndex = -1;\n            this.bodyIndicatorRowKeys.endRowKey = \"\";\n            this.bodyIndicatorRowKeys.endRowKeyIndex = -1;\n        },\n\n        // set cell selection by autofill\n        setCellSelectionByAutofill() {\n            const {\n                cellAutofillOption,\n                cellSelectionRangeData,\n                colgroups,\n                allRowKeys,\n                autofillingDirection,\n                currentCellSelectionType,\n            } = this;\n            const { autoFillEndCell, currentCell } = this.cellSelectionData;\n\n            const { rowKey, colKey } = autoFillEndCell;\n\n            if (isEmptyValue(rowKey) || isEmptyValue(colKey)) {\n                return false;\n            }\n\n            let currentCellData = {};\n            let normalEndCellData = {};\n\n            const { leftColKey, rightColKey, topRowKey, bottomRowKey } =\n                cellSelectionRangeData;\n\n            // cell selection range auto fill\n            if (\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.RANGE\n            ) {\n                if (\n                    !isCellInSelectionRange({\n                        cellData: autoFillEndCell,\n                        cellSelectionRangeData,\n                        colgroups,\n                        allRowKeys,\n                    })\n                ) {\n                    if (autofillingDirection === AUTOFILLING_DIRECTION.RIGHT) {\n                        currentCellData = {\n                            rowKey: topRowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = { rowKey: bottomRowKey, colKey };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.DOWN\n                    ) {\n                        currentCellData = {\n                            rowKey: topRowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = { rowKey, colKey: rightColKey };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.UP\n                    ) {\n                        currentCellData = {\n                            rowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = {\n                            rowKey: bottomRowKey,\n                            colKey: rightColKey,\n                        };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.LEFT\n                    ) {\n                        currentCellData = { rowKey: topRowKey, colKey };\n                        normalEndCellData = {\n                            rowKey: bottomRowKey,\n                            colKey: rightColKey,\n                        };\n                    }\n                } else {\n                    // return if within the range\n                    return false;\n                }\n            }\n            // cell selection single auto fill\n            else if (\n                currentCellSelectionType === CURRENT_CELL_SELECTION_TYPES.SINGLE\n            ) {\n                if (\n                    currentCell.rowKey !== rowKey ||\n                    currentCell.colKey !== colKey\n                ) {\n                    if (autofillingDirection === AUTOFILLING_DIRECTION.RIGHT) {\n                        currentCellData = {\n                            rowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = {\n                            rowKey,\n                            colKey,\n                        };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.DOWN\n                    ) {\n                        currentCellData = {\n                            rowKey: topRowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = {\n                            rowKey,\n                            colKey: leftColKey,\n                        };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.UP\n                    ) {\n                        currentCellData = {\n                            rowKey,\n                            colKey: leftColKey,\n                        };\n                        normalEndCellData = {\n                            rowKey: bottomRowKey,\n                            colKey: leftColKey,\n                        };\n                    } else if (\n                        autofillingDirection === AUTOFILLING_DIRECTION.LEFT\n                    ) {\n                        currentCellData = {\n                            rowKey,\n                            colKey,\n                        };\n                        normalEndCellData = {\n                            rowKey,\n                            colKey: rightColKey,\n                        };\n                    }\n                } else {\n                    // return if within the range\n                    return false;\n                }\n            }\n\n            const cellAutofillParams = {\n                tableData: this.tableData,\n                allRowKeys: this.allRowKeys,\n                colgroups: this.colgroups,\n                rowKeyFieldName: this.rowKeyFieldName,\n                direction: autofillingDirection,\n                currentCellSelectionType,\n                cellSelectionRangeData,\n                nextCurrentCell: currentCellData,\n                nextNormalEndCell: normalEndCellData,\n            };\n\n            if (cellAutofillOption) {\n                const { beforeAutofill, afterAutofill } = cellAutofillOption;\n\n                if (isFunction(beforeAutofill)) {\n                    // before autofill\n                    const autofillResponse = cellAutofill({\n                        isReplaceData: false,\n                        ...cellAutofillParams,\n                    });\n                    const callback = beforeAutofill(autofillResponse);\n                    if (isBoolean(callback) && !callback) {\n                        return false;\n                    }\n                }\n\n                // after autofill\n                const autofillResponse = cellAutofill({\n                    isReplaceData: true,\n                    ...cellAutofillParams,\n                });\n                if (isFunction(afterAutofill)) {\n                    afterAutofill(autofillResponse);\n                }\n            }\n\n            if (!isEmptyValue(currentCellData.rowKey)) {\n                this.cellSelectionCurrentCellChange({\n                    rowKey: currentCellData.rowKey,\n                    colKey: currentCellData.colKey,\n                });\n            }\n\n            if (!isEmptyValue(normalEndCellData.rowKey)) {\n                this.cellSelectionNormalEndCellChange({\n                    rowKey: normalEndCellData.rowKey,\n                    colKey: normalEndCellData.colKey,\n                });\n            }\n        },\n\n        // cell selection range data change\n        cellSelectionRangeDataChange(newData) {\n            this.cellSelectionRangeData = Object.assign(\n                this.cellSelectionRangeData,\n                newData,\n            );\n        },\n\n        // autofilling direction change\n        autofillingDirectionChange(direction) {\n            this.autofillingDirection = direction;\n        },\n\n        // set current cell selection type\n        setCurrentCellSelectionType() {\n            const { currentCell, normalEndCell } = this.cellSelectionData;\n\n            let result;\n\n            if (\n                isEmptyValue(currentCell.rowKey) ||\n                isEmptyValue(currentCell.colKey)\n            ) {\n                result = \"\";\n            } else {\n                if (\n                    !isEmptyValue(normalEndCell.rowKey) &&\n                    !isEmptyValue(normalEndCell.colKey)\n                ) {\n                    result = CURRENT_CELL_SELECTION_TYPES.RANGE;\n                } else {\n                    result = CURRENT_CELL_SELECTION_TYPES.SINGLE;\n                }\n            }\n\n            this.currentCellSelectionType = result;\n        },\n\n        // deal keydown event\n        dealKeydownEvent(event) {\n            const {\n                colgroups,\n                cellSelectionData,\n                enableStopEditing,\n                isCellEditing,\n            } = this;\n\n            const { keyCode, ctrlKey, shiftKey, altKey } = event;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n\n            const currentColumn = colgroups.find((x) => x.key === colKey);\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                switch (keyCode) {\n                    case KEY_CODES.TAB: {\n                        let direction;\n                        if (shiftKey) {\n                            direction = CELL_SELECTION_DIRECTION.LEFT;\n                        } else {\n                            direction = CELL_SELECTION_DIRECTION.RIGHT;\n                        }\n\n                        this.selectCellByDirection({\n                            direction,\n                        });\n\n                        this.clearCellSelectionNormalEndCell();\n\n                        this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                        event.preventDefault();\n                        break;\n                    }\n                    case KEY_CODES.ARROW_LEFT: {\n                        const direction = CELL_SELECTION_DIRECTION.LEFT;\n                        if (enableStopEditing) {\n                            this.selectCellByDirection({\n                                direction,\n                            });\n\n                            this.clearCellSelectionNormalEndCell();\n\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                            event.preventDefault();\n                        }\n\n                        break;\n                    }\n                    case KEY_CODES.ARROW_RIGHT: {\n                        const direction = CELL_SELECTION_DIRECTION.RIGHT;\n\n                        if (enableStopEditing) {\n                            this.selectCellByDirection({\n                                direction,\n                            });\n\n                            this.clearCellSelectionNormalEndCell();\n\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                            event.preventDefault();\n                        }\n                        break;\n                    }\n                    case KEY_CODES.ARROW_UP: {\n                        const direction = CELL_SELECTION_DIRECTION.UP;\n\n                        if (enableStopEditing) {\n                            this.selectCellByDirection({\n                                direction,\n                            });\n\n                            this.clearCellSelectionNormalEndCell();\n\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                            event.preventDefault();\n                        }\n                        break;\n                    }\n                    case KEY_CODES.ARROW_DOWN: {\n                        const direction = CELL_SELECTION_DIRECTION.DOWN;\n\n                        if (enableStopEditing) {\n                            this.selectCellByDirection({\n                                direction,\n                            });\n\n                            this.clearCellSelectionNormalEndCell();\n\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                            event.preventDefault();\n                        }\n                        break;\n                    }\n                    case KEY_CODES.ENTER: {\n                        let direction;\n                        // add new line\n                        if (altKey) {\n                            const editInputEditor =\n                                this.$refs[this.editInputRef];\n\n                            editInputEditor.textareaAddNewLine();\n                        }\n                        // direction up\n                        else if (shiftKey) {\n                            direction = CELL_SELECTION_DIRECTION.UP;\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                        }\n                        // stop editing and stay in current cell\n                        else if (ctrlKey) {\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                        }\n                        // direction down\n                        else {\n                            direction = CELL_SELECTION_DIRECTION.DOWN;\n                            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                        }\n\n                        if (direction) {\n                            this.clearCellSelectionNormalEndCell();\n                            this.selectCellByDirection({\n                                direction,\n                            });\n                        }\n                        event.preventDefault();\n                        break;\n                    }\n                    case KEY_CODES.SPACE: {\n                        if (!isCellEditing) {\n                            // start editing and enter a space\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\n                                rowKey,\n                                colKey,\n                                defaultValue: \" \",\n                            });\n                            event.preventDefault();\n                        }\n\n                        break;\n                    }\n                    case KEY_CODES.BACK_SPACE: {\n                        if (!isCellEditing) {\n                            // start editing and clear value\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\n                                rowKey,\n                                colKey,\n                                defaultValue: \"\",\n                            });\n                            event.preventDefault();\n                        }\n\n                        break;\n                    }\n                    case KEY_CODES.DELETE: {\n                        if (!isCellEditing) {\n                            // delete cell selection range value\n                            this.deleteCellSelectionRangeValue();\n                            event.preventDefault();\n                        }\n\n                        break;\n                    }\n                    case KEY_CODES.F2: {\n                        if (!isCellEditing) {\n                            if (currentColumn.edit) {\n                                // start editing cell and don't allow stop eidting by direction key\n                                this.enableStopEditing = false;\n                                this[INSTANCE_METHODS.START_EDITING_CELL]({\n                                    rowKey,\n                                    colKey,\n                                });\n                            }\n                            event.preventDefault();\n                        }\n\n                        break;\n                    }\n                    default: {\n                        // enter text directly\n                        if (isInputKeyCode(event)) {\n                            this[INSTANCE_METHODS.START_EDITING_CELL]({\n                                rowKey,\n                                colKey,\n                                defaultValue: \"\",\n                            });\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n\n        // select cell by direction\n        selectCellByDirection({ direction }) {\n            const { colgroups, allRowKeys, cellSelectionData } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n\n            let columnIndex = colgroups.findIndex((x) => x.key === colKey);\n            let rowIndex = allRowKeys.indexOf(rowKey);\n\n            if (direction === CELL_SELECTION_DIRECTION.LEFT) {\n                if (columnIndex > 0) {\n                    let nextColumn = colgroups[columnIndex - 1];\n                    this.cellSelectionData.currentCell.colKey = nextColumn.key;\n                    this.columnToVisible(nextColumn);\n                }\n            } else if (direction === CELL_SELECTION_DIRECTION.RIGHT) {\n                if (columnIndex < colgroups.length - 1) {\n                    let nextColumn = colgroups[columnIndex + 1];\n                    this.cellSelectionData.currentCell.colKey = nextColumn.key;\n                    this.columnToVisible(nextColumn);\n                }\n            } else if (direction === CELL_SELECTION_DIRECTION.UP) {\n                if (rowIndex > 0) {\n                    const nextRowKey = allRowKeys[rowIndex - 1];\n                    this.rowToVisible(KEY_CODES.ARROW_UP, nextRowKey);\n                }\n            } else if (direction === CELL_SELECTION_DIRECTION.DOWN) {\n                if (rowIndex < allRowKeys.length - 1) {\n                    const nextRowKey = allRowKeys[rowIndex + 1];\n                    this.rowToVisible(KEY_CODES.ARROW_DOWN, nextRowKey);\n                }\n            }\n        },\n\n        /*\n         * @columnToVisible\n         * @desc  column to visible\n         * @param {object} nextColumn - next column\n         */\n        columnToVisible(nextColumn) {\n            const { hasXScrollBar, colgroups } = this;\n\n            if (!hasXScrollBar) {\n                return false;\n            }\n\n            const tableContainerRef = this.$refs[this.tableContainerRef];\n\n            const { scrollWidth, clientWidth, scrollLeft } = tableContainerRef;\n\n            if (!nextColumn.fixed) {\n                const leftTotalWidth = getNotFixedTotalWidthByColumnKey({\n                    colgroups,\n                    colKey: nextColumn.key,\n                    fixed: COLUMN_FIXED_TYPE.LEFT,\n                });\n\n                const rightTotalWidth = getNotFixedTotalWidthByColumnKey({\n                    colgroups,\n                    colKey: nextColumn.key,\n                    fixed: COLUMN_FIXED_TYPE.RIGHT,\n                });\n\n                if (scrollLeft) {\n                    const diff = scrollLeft - leftTotalWidth;\n                    if (diff > 0) {\n                        tableContainerRef.scrollLeft = scrollLeft - diff;\n                    }\n                }\n\n                const scrollRight = scrollWidth - clientWidth - scrollLeft;\n                if (scrollRight) {\n                    const diff = scrollRight - rightTotalWidth;\n                    if (diff > 0) {\n                        tableContainerRef.scrollLeft = scrollLeft + diff;\n                    }\n                }\n            }\n        },\n\n        /*\n         * @rowToVisible\n         * @desc  row to visible\n         * @param {number} keyCode - current keyCode\n         * @param {any} nextRowKey - next row key\n         */\n        rowToVisible(keyCode, nextRowKey) {\n            const tableContainerRef = this.$refs[this.tableContainerRef];\n            const tableContentWrapperRef =\n                this.$refs[this.tableContentWrapperRef].$el;\n\n            const { isVirtualScroll, headerTotalHeight, footerTotalHeight } =\n                this;\n\n            const {\n                clientHeight: containerClientHeight,\n                scrollTop: containerScrollTop,\n            } = tableContainerRef;\n\n            const nextRowEl = this.$el.querySelector(\n                `tbody tr[${COMPS_CUSTOM_ATTRS.BODY_ROW_KEY}=\"${nextRowKey}\"]`,\n            );\n\n            if (nextRowEl) {\n                const { offsetTop: trOffsetTop, clientHeight: trClientHeight } =\n                    nextRowEl;\n\n                const parentOffsetTop = tableContentWrapperRef.offsetTop;\n\n                // arrow up\n                if (keyCode === KEY_CODES.ARROW_UP) {\n                    let diff = 0;\n                    if (isVirtualScroll) {\n                        diff =\n                            headerTotalHeight -\n                            (trOffsetTop -\n                                (containerScrollTop - parentOffsetTop));\n                    } else {\n                        diff =\n                            containerScrollTop +\n                            headerTotalHeight -\n                            trOffsetTop;\n                    }\n\n                    if (diff > 0) {\n                        tableContainerRef.scrollTop = containerScrollTop - diff;\n                    }\n                }\n                // arrow down\n                else if (keyCode === KEY_CODES.ARROW_DOWN) {\n                    let diff = 0;\n                    if (isVirtualScroll) {\n                        diff =\n                            trOffsetTop -\n                            (containerScrollTop - parentOffsetTop) +\n                            trClientHeight +\n                            footerTotalHeight -\n                            containerClientHeight;\n                    } else {\n                        diff =\n                            trOffsetTop +\n                            trClientHeight +\n                            footerTotalHeight -\n                            (containerClientHeight + containerScrollTop);\n                    }\n\n                    if (diff >= 0) {\n                        tableContainerRef.scrollTop = containerScrollTop + diff;\n                    }\n                }\n                const { currentCell } = this.cellSelectionData;\n                this.cellSelectionCurrentCellChange({\n                    rowKey: nextRowKey,\n                    colKey: currentCell.colKey,\n                });\n            }\n        },\n\n        // set virtual scroll visible data\n        setVirtualScrollVisibleData() {\n            const { tableData } = this;\n\n            const startIndex = this.virtualScrollStartIndex;\n            const endIndex = this.virtualScrollEndIndex;\n\n            const aboveCount = this.getVirtualScrollAboveCount();\n            const belowCount = this.getVirtualScrollBelowCount();\n\n            let start = startIndex - aboveCount;\n            let end = endIndex + belowCount;\n\n            this.virtualScrollVisibleIndexs.start = start;\n            this.virtualScrollVisibleIndexs.end = end - 1;\n\n            this.virtualScrollVisibleData = tableData.slice(start, end);\n        },\n\n        // get virtual scroll above count\n        getVirtualScrollAboveCount() {\n            let result = 0;\n            const { isVirtualScroll, virtualScrollBufferCount } = this;\n\n            const virtualScrollStartIndex = this.virtualScrollStartIndex;\n\n            if (isVirtualScroll) {\n                result = Math.min(\n                    virtualScrollStartIndex,\n                    virtualScrollBufferCount,\n                );\n            }\n            return result;\n        },\n\n        // get virtual scroll bellow count\n        getVirtualScrollBelowCount() {\n            let result = 0;\n\n            const { isVirtualScroll, tableData, virtualScrollBufferCount } =\n                this;\n\n            const virtualScrollEndIndex = this.virtualScrollEndIndex;\n\n            if (isVirtualScroll) {\n                result = Math.min(\n                    tableData.length - virtualScrollEndIndex,\n                    virtualScrollBufferCount,\n                );\n            }\n\n            return result;\n        },\n\n        // get virtual phantom\n        getVirtualViewPhantom() {\n            let content = null;\n\n            /*\n            1、is virtualScroll\n            or\n            2、\n            has left fixed column and expand option（resolve expand row content sticky）\n            */\n            const { isVirtualScroll, hasLeftFixedColumn, expandOption } = this;\n\n            if (isVirtualScroll || (hasLeftFixedColumn && expandOption)) {\n                const props = {\n                    props: {\n                        tagName: \"div\",\n                    },\n                    style: {\n                        width: \"100%\",\n                    },\n                    on: {\n                        \"on-dom-resize-change\": ({ width }) => {\n                            this.tableViewportWidth = width;\n                        },\n                    },\n                };\n\n                content = (\n                    <div\n                        ref={this.virtualPhantomRef}\n                        class={[\n                            clsName(\"virtual-phantom\"),\n                            isVirtualScroll ? clsName(\"virtual-scroll\") : \"\",\n                        ]}\n                    >\n                        <VueDomResizeObserver {...props} />\n                    </div>\n                );\n            }\n\n            return content;\n        },\n\n        // init virtual scroll positions\n        initVirtualScrollPositions() {\n            if (this.isVirtualScroll) {\n                const {\n                    virtualScrollOption,\n                    rowKeyFieldName,\n                    tableData,\n                    defaultVirtualScrollMinRowHeight,\n                } = this;\n\n                const minRowHeight = isNumber(virtualScrollOption.minRowHeight)\n                    ? virtualScrollOption.minRowHeight\n                    : defaultVirtualScrollMinRowHeight;\n\n                this.virtualScrollPositions = tableData.map((item, index) => ({\n                    rowKey: item[rowKeyFieldName],\n                    height: minRowHeight,\n                    top: index * minRowHeight,\n                    bottom: (index + 1) * minRowHeight,\n                }));\n            }\n        },\n\n        // list item height change\n        bodyRowHeightChange({ rowKey, height }) {\n            //获取真实元素大小，修改对应的尺寸缓存\n            const index = this.virtualScrollPositions.findIndex(\n                (x) => x.rowKey === rowKey,\n            );\n\n            let oldHeight = this.virtualScrollPositions[index].height;\n            let dValue = oldHeight - height;\n            //存在差值\n            if (dValue) {\n                this.virtualScrollPositions[index].bottom =\n                    this.virtualScrollPositions[index].bottom - dValue;\n                this.virtualScrollPositions[index].height = height;\n                for (\n                    let k = index + 1;\n                    k < this.virtualScrollPositions.length;\n                    k++\n                ) {\n                    this.virtualScrollPositions[k].top =\n                        this.virtualScrollPositions[k - 1].bottom;\n                    this.virtualScrollPositions[k].bottom =\n                        this.virtualScrollPositions[k].bottom - dValue;\n                }\n\n                // 更新 virtual phantom 列表总高度\n                this.setVirtualPhantomHeight();\n\n                //更新真实偏移量\n                this.setVirtualScrollStartOffset();\n            }\n        },\n        // update virtual phantom list height\n        setVirtualPhantomHeight() {\n            let totalHeight = 0;\n            if (this.virtualScrollPositions.length) {\n                totalHeight =\n                    this.virtualScrollPositions[\n                        this.virtualScrollPositions.length - 1\n                    ].bottom;\n            }\n\n            this.$refs[this.virtualPhantomRef].style.height =\n                totalHeight + \"px\";\n        },\n        // set virtual scroll start offset\n        setVirtualScrollStartOffset() {\n            const start = this.virtualScrollStartIndex;\n\n            const aboveCount = this.getVirtualScrollAboveCount();\n\n            let startOffset = 0;\n\n            if (start >= 1) {\n                let size =\n                    this.virtualScrollPositions[start].top -\n                    (this.virtualScrollPositions[start - aboveCount]\n                        ? this.virtualScrollPositions[start - aboveCount].top\n                        : 0);\n                startOffset =\n                    this.virtualScrollPositions[start - 1].bottom - size;\n            }\n\n            this.setTableContentTopValue({ top: startOffset });\n        },\n        // set table content top value\n        setTableContentTopValue({ top }) {\n            //this.$refs[this.tableContentWrapperRef].style.transform = `translate3d(0,${startOffset}px,0)`;\n            window.requestAnimationFrame(() => {\n                const ele = this.$refs[this.tableContentWrapperRef];\n                if (ele) {\n                    ele.$el.style.top = `${top}px`;\n                }\n            });\n        },\n        // get virtual scroll start index\n        getVirtualScrollStartIndex(scrollTop = 0) {\n            return this.virtualScrollBinarySearch(\n                this.virtualScrollPositions,\n                scrollTop,\n            );\n        },\n        // virtual scroll binary search\n        virtualScrollBinarySearch(list, value) {\n            let start = 0;\n            let end = list.length - 1;\n            let tempIndex = null;\n\n            while (start <= end) {\n                let midIndex = parseInt((start + end) / 2);\n                let midValue = list[midIndex].bottom;\n                if (midValue === value) {\n                    return midIndex + 1;\n                } else if (midValue < value) {\n                    start = midIndex + 1;\n                } else if (midValue > value) {\n                    if (tempIndex === null || tempIndex > midIndex) {\n                        tempIndex = midIndex;\n                    }\n                    end = end - 1;\n                }\n            }\n            return tempIndex;\n        },\n        // table container virtual scroll handler\n        tableContainerVirtualScrollHandler(tableContainerRef) {\n            const {\n                virtualScrollVisibleCount: visibleCount,\n                virtualScrollOption,\n            } = this;\n\n            //当前滚动位置\n            let scrollTop = tableContainerRef.scrollTop;\n\n            //此时的开始索引\n            let visibleStartIndex = this.getVirtualScrollStartIndex(scrollTop);\n            this.virtualScrollStartIndex = visibleStartIndex;\n\n            //此时的结束索引\n            let visibleEndIndex = visibleStartIndex + visibleCount;\n            this.virtualScrollEndIndex = visibleEndIndex;\n\n            const visibleAboveCount = this.getVirtualScrollAboveCount();\n            const visibleBelowCount = this.getVirtualScrollBelowCount();\n\n            //此时的偏移量\n            this.setVirtualScrollStartOffset();\n\n            if (!this.showVirtualScrollingPlaceholder) {\n                const bodyElement = this.$refs[this.tableBodyRef];\n\n                if (bodyElement) {\n                    bodyElement.renderingRowKeys(\n                        this.allRowKeys.slice(\n                            visibleStartIndex - visibleAboveCount,\n                            visibleEndIndex + visibleBelowCount,\n                        ),\n                    );\n                }\n            }\n\n            const { scrolling } = virtualScrollOption;\n            if (isFunction(scrolling)) {\n                const visibleAboveCount = this.getVirtualScrollAboveCount();\n                const visibleBelowCount = this.getVirtualScrollBelowCount();\n\n                let startRowIndex = visibleStartIndex - visibleAboveCount;\n\n                scrolling({\n                    startRowIndex: startRowIndex > 0 ? startRowIndex : 0,\n                    visibleStartIndex,\n                    visibleEndIndex,\n                    visibleAboveCount,\n                    visibleBelowCount,\n                });\n            }\n\n            this.setVirtualScrollVisibleData();\n        },\n        // debounce scroll ended\n        debounceScrollEnded() {\n            const scrollingResetTimeInterval = 150;\n\n            const { disablePointerEventsTimeoutId } = this;\n\n            if (disablePointerEventsTimeoutId) {\n                cancelAnimationTimeout(disablePointerEventsTimeoutId);\n            }\n\n            this.disablePointerEventsTimeoutId = requestAnimationTimeout(\n                this.debounceScrollEndedCallback,\n                scrollingResetTimeInterval,\n            );\n        },\n        // debounce scroll callback\n        debounceScrollEndedCallback() {\n            this.disablePointerEventsTimeoutId = null;\n            this.showVirtualScrollingPlaceholder = false;\n        },\n        // init virtual scroll\n        initVirtualScroll() {\n            if (this.isVirtualScroll) {\n                const startIndex = 0;\n\n                this.virtualScrollStartIndex = startIndex;\n                this.virtualScrollEndIndex =\n                    startIndex + this.virtualScrollVisibleCount;\n\n                // 修复渲染结束，同时开启虚拟滚动和设置表格数据，无法设置 virtual phantom 高度的问题\n                this.$nextTick(() => {\n                    const tableContainerRef =\n                        this.$refs[this.tableContainerRef];\n                    this.tableContainerVirtualScrollHandler(tableContainerRef);\n                    this.setVirtualPhantomHeight();\n                });\n            }\n        },\n\n        // set scrolling\n        setScrolling(tableContainerRef) {\n            if (this.hasFixedColumn) {\n                const { scrollWidth, clientWidth, scrollLeft } =\n                    tableContainerRef;\n\n                const { previewTableContainerScrollLeft: previewScrollLeft } =\n                    this;\n\n                // 仅横向滚动需要处理\n                if (\n                    previewScrollLeft === 0 ||\n                    previewScrollLeft !== scrollLeft\n                ) {\n                    this.previewTableContainerScrollLeft = scrollLeft;\n\n                    this.isLeftScrolling = scrollLeft > 0;\n                    this.isRightScrolling =\n                        scrollWidth - clientWidth > scrollLeft;\n                }\n                this.isLeftScrolling = scrollLeft > 0;\n                this.isRightScrolling = scrollWidth - clientWidth > scrollLeft;\n            }\n        },\n\n        // set scroll bar status\n        setScrollBarStatus() {\n            const tableContainerRef = this.$refs[this.tableContainerRef];\n            if (tableContainerRef) {\n                const { scrollWidth, clientWidth, scrollHeight, clientHeight } =\n                    tableContainerRef;\n\n                if (scrollWidth && clientWidth) {\n                    this.hasXScrollBar =\n                        scrollWidth - clientWidth ? true : false;\n                }\n\n                if (scrollHeight && clientHeight) {\n                    this.hasYScrollBar =\n                        scrollHeight - clientHeight ? true : false;\n                }\n            }\n        },\n\n        // init scrolling\n        initScrolling() {\n            this.setScrolling(this.$refs[this.tableContainerRef]);\n        },\n\n        // table click outside\n        tableClickOutside(e) {\n            // exclude contextmenu panel clicked\n            if (isContextmenuPanelClicked(e)) {\n                return false;\n            }\n\n            this.isHeaderCellMousedown = false;\n            this.isBodyCellMousedown = false;\n            this.isBodyOperationColumnMousedown = false;\n            this.isAutofillStarting = false;\n            this.setIsColumnResizing(false);\n\n            // clear cell selection\n            this.clearCellSelectionCurrentCell();\n            this.clearCellSelectionNormalEndCell();\n\n            // clear indicators\n            this.clearHeaderIndicatorColKeys();\n            this.clearBodyIndicatorRowKeys();\n\n            // stop editing cell\n            this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n        },\n\n        // save cell when stop editing\n        saveCellWhenStopEditing() {\n            const {\n                colgroups,\n                rowKeyFieldName,\n                editOption,\n                editingCell,\n                isCellEditing,\n            } = this;\n\n            const {\n                cellValueChange,\n                beforeCellValueChange,\n                afterCellValueChange,\n            } = editOption;\n\n            if (isCellEditing) {\n                const { rowKey, colKey } = editingCell;\n\n                let currentRow = this.tableData.find(\n                    (x) => x[rowKeyFieldName] === rowKey,\n                );\n\n                if (currentRow) {\n                    const currentColumn = colgroups.find(\n                        (x) => x.key === colKey,\n                    );\n\n                    const changeValue = editingCell.row[currentColumn.field];\n\n                    if (isFunction(beforeCellValueChange)) {\n                        const allowChange = beforeCellValueChange({\n                            row: cloneDeep(currentRow),\n                            column: currentColumn,\n                            changeValue,\n                        });\n                        if (isBoolean(allowChange) && !allowChange) {\n                            // celar editing cell\n                            this.clearEditingCell();\n                            return false;\n                        }\n                    }\n\n                    currentRow[currentColumn.field] = changeValue;\n\n                    // 同 afterCellValueChange，未来被移除\n                    cellValueChange &&\n                        cellValueChange({\n                            row: currentRow,\n                            column: currentColumn,\n                            changeValue,\n                        });\n\n                    afterCellValueChange &&\n                        afterCellValueChange({\n                            row: currentRow,\n                            column: currentColumn,\n                            changeValue,\n                        });\n\n                    // celar editing cell\n                    this.clearEditingCell();\n                }\n\n                // reset status\n                this.enableStopEditing = true;\n            }\n        },\n\n        // cell selection by click\n        cellSelectionByClick({ rowData, column }) {\n            const { rowKeyFieldName } = this;\n\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\n\n            // set cell selection and column to visible\n            this[INSTANCE_METHODS.SET_CELL_SELECTION]({\n                rowKey,\n                colKey: column.key,\n                isScrollToRow: false,\n            });\n            // row to visible\n            this.rowToVisible(KEY_CODES.ARROW_UP, rowKey);\n            this.rowToVisible(KEY_CODES.ARROW_DOWN, rowKey);\n        },\n\n        /*\n         * @bodyCellContextmenu\n         * @desc  recieve td right click\\contextmenu event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellContextmenu({ event, rowData, column }) {\n            const { editOption, rowKeyFieldName } = this;\n\n            if (editOption) {\n                const rowKey = getRowKey(rowData, rowKeyFieldName);\n                this.editCellByClick({\n                    isDblclick: false,\n                    rowKey,\n                    colKey: column.key,\n                });\n            }\n\n            this.setContextmenuOptions(column);\n        },\n\n        /*\n         * @bodyCellDoubleClick\n         * @desc  recieve td double click event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellDoubleClick({ event, rowData, column }) {\n            const { editOption, rowKeyFieldName, colgroups } = this;\n\n            if (isOperationColumn(column.key, colgroups)) {\n                // clear cell selection\n                this.clearCellSelectionCurrentCell();\n                this.clearCellSelectionNormalEndCell();\n\n                // stop editing cell\n                this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                return false;\n            }\n\n            if (editOption) {\n                const rowKey = getRowKey(rowData, rowKeyFieldName);\n                this.editCellByClick({\n                    isDblclick: true,\n                    rowKey,\n                    colKey: column.key,\n                });\n            }\n        },\n\n        /*\n         * @bodyCellClick\n         * @desc  recieve td click event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellClick({ event, rowData, column }) {\n            // feature...\n        },\n\n        /*\n         * @bodyCellMousedown\n         * @desc  recieve td mousedown event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellMousedown({ event, rowData, column }) {\n            if (!this.enableCellSelection) {\n                return false;\n            }\n\n            const { shiftKey } = event;\n\n            const {\n                editOption,\n                rowKeyFieldName,\n                colgroups,\n                cellSelectionData,\n                cellSelectionRangeData,\n                allRowKeys,\n            } = this;\n\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\n            const colKey = column.key;\n\n            const { currentCell } = cellSelectionData;\n\n            const mouseEventClickType = getMouseEventClickType(event);\n\n            if (isOperationColumn(colKey, colgroups)) {\n                // clear header indicator colKeys\n                this.clearHeaderIndicatorColKeys();\n\n                const { bodyIndicatorRowKeys } = this;\n                this.isBodyOperationColumnMousedown = true;\n\n                const {\n                    startRowKey,\n                    endRowKey,\n                    startRowKeyIndex,\n                    endRowKeyIndex,\n                } = bodyIndicatorRowKeys;\n                let newStartRowKey = startRowKey;\n                let newEndRowKey = endRowKey;\n\n                if (\n                    shiftKey &&\n                    (startRowKeyIndex > -1 || currentCell.rowIndex > -1)\n                ) {\n                    newStartRowKey = isEmptyValue(currentCell.rowKey)\n                        ? startRowKey\n                        : currentCell.rowKey;\n                    newEndRowKey = rowKey;\n                } else {\n                    const currentRowIndex = allRowKeys.indexOf(rowKey);\n\n                    // 左键点击 || 不在当前选择行内\n                    if (\n                        mouseEventClickType ===\n                            MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE ||\n                        currentRowIndex < startRowKeyIndex ||\n                        currentRowIndex > endRowKeyIndex\n                    ) {\n                        newStartRowKey = rowKey;\n                        newEndRowKey = rowKey;\n                    }\n                }\n\n                this.bodyIndicatorRowKeysChange({\n                    startRowKey: newStartRowKey,\n                    endRowKey: newEndRowKey,\n                });\n            } else {\n                // body cell mousedown\n                this.isBodyCellMousedown = true;\n\n                const isClearByRightClick =\n                    isClearSelectionByBodyCellRightClick({\n                        mouseEventClickType,\n                        cellData: {\n                            rowKey,\n                            colKey,\n                        },\n                        cellSelectionData,\n                        cellSelectionRangeData,\n                        colgroups,\n                        allRowKeys,\n                    });\n\n                if (isClearByRightClick) {\n                    // clear header indicator colKeys\n                    this.clearHeaderIndicatorColKeys();\n                    // clear body indicator colKeys\n                    this.clearBodyIndicatorRowKeys();\n\n                    if (shiftKey && currentCell.rowIndex > -1) {\n                        this.cellSelectionNormalEndCellChange({\n                            rowKey,\n                            colKey,\n                        });\n                    } else {\n                        // cell selection by click\n                        this.cellSelectionByClick({ rowData, column });\n                        this.clearCellSelectionNormalEndCell();\n                    }\n                }\n            }\n\n            if (editOption) {\n                this.editCellByClick({\n                    isDblclick: false,\n                    rowKey,\n                    colKey,\n                });\n            }\n        },\n\n        /*\n         * @bodyCellMouseover\n         * @desc  recieve td mouseover event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellMouseover({ event, rowData, column }) {\n            const {\n                rowKeyFieldName,\n                isBodyCellMousedown,\n                isAutofillStarting,\n                isHeaderCellMousedown,\n                isBodyOperationColumnMousedown,\n            } = this;\n\n            const rowKey = getRowKey(rowData, rowKeyFieldName);\n            const colKey = column.key;\n\n            if (isBodyCellMousedown) {\n                // 操作列不能单元格选中\n                if (isOperationColumn(colKey, this.colgroups)) {\n                    return false;\n                }\n                this.cellSelectionNormalEndCellChange({\n                    rowKey,\n                    colKey,\n                });\n            }\n\n            if (isBodyOperationColumnMousedown) {\n                this.bodyIndicatorRowKeysChange({\n                    startRowKey: this.bodyIndicatorRowKeys.startRowKey,\n                    endRowKey: rowKey,\n                });\n            }\n\n            // 允许在body cell mouseover 里补充 header indicator 信息\n            if (isHeaderCellMousedown) {\n                this.headerIndicatorColKeysChange({\n                    startColKey: this.headerIndicatorColKeys.startColKey,\n                    endColKey: colKey,\n                });\n            }\n\n            if (isAutofillStarting) {\n                // 操作列不能autofilling 效果\n                if (isOperationColumn(colKey, this.colgroups)) {\n                    return false;\n                }\n                this.cellSelectionAutofillCellChange({\n                    rowKey,\n                    colKey,\n                });\n            }\n        },\n\n        /*\n         * @bodyCellMousemove\n         * @desc  recieve td mousemove event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellMousemove({ event, rowData, column }) {\n            this.hooks.triggerHook(HOOKS_NAME.BODY_CELL_MOUSEMOVE, {\n                event,\n                column,\n            });\n        },\n\n        /*\n         * @bodyCellMouseup\n         * @desc  recieve td mouseup event\n         * @param {object} rowData - row data\n         * @param {object} column - column data\n         */\n        bodyCellMouseup({ event, rowData, column }) {\n            // feature...\n        },\n\n        // header cell click\n        headerCellClick({ event, column }) {\n            // feature...\n        },\n\n        // header cell contextmenu\n        headerCellContextmenu({ event, column }) {\n            this.setContextmenuOptions(column);\n        },\n\n        // set contextmenu options\n        setContextmenuOptions(column) {\n            const { contextMenuType } = this;\n\n            // header contextmenu\n            if (contextMenuType === CONTEXTMENU_TYPES.HEADER_CONTEXTMENU) {\n                // set header contextmenu options before contextmen show\n                this.contextmenuOptions = setHeaderContextmenuOptions({\n                    column,\n                    contextmenuHeaderOption: this.contextmenuHeaderOption,\n                    cellSelectionRangeData: this.cellSelectionRangeData,\n                    colgroups: this.colgroups,\n                    allRowKeys: this.allRowKeys,\n                    headerIndicatorColKeys: this.headerIndicatorColKeys,\n                    enableHeaderContextmenu: this.enableHeaderContextmenu,\n                    t,\n                });\n            }\n            // body contextmenu\n            else {\n                // set body contextmenu options before contextmen show\n                this.contextmenuOptions = setBodyContextmenuOptions({\n                    enableBodyContextmenu: this.enableBodyContextmenu,\n                    contextmenuBodyOption: this.contextmenuBodyOption,\n                    cellSelectionRangeData: this.cellSelectionRangeData,\n                    colgroups: this.colgroups,\n                    allRowKeys: this.allRowKeys,\n                    bodyIndicatorRowKeys: this.bodyIndicatorRowKeys,\n                    t,\n                });\n            }\n        },\n\n        // header cell mousedown\n        headerCellMousedown({ event, column }) {\n            if (!this.enableCellSelection) {\n                return false;\n            }\n\n            this.isHeaderCellMousedown = true;\n\n            const { shiftKey } = event;\n\n            const {\n                isGroupHeader,\n                colgroups,\n                headerIndicatorColKeys,\n                cellSelectionData,\n            } = this;\n\n            // clear body indicator colKeys\n            this.clearBodyIndicatorRowKeys();\n\n            let colKeys;\n            if (isGroupHeader) {\n                colKeys = getColKeysByHeaderColumn({\n                    headerColumnItem: column,\n                });\n            } else {\n                colKeys = [column.key];\n            }\n\n            const currentCellStartColKey = colKeys[0];\n            const currentCellEndColKey = colKeys[colKeys.length - 1];\n\n            const { currentCell } = cellSelectionData;\n\n            if (isOperationColumn(column.key, colgroups)) {\n                // clear cell selection\n                this.clearCellSelectionCurrentCell();\n                this.clearCellSelectionNormalEndCell();\n                this.$nextTick(() => {\n                    // select all cell\n                    this[INSTANCE_METHODS.SET_ALL_CELL_SELECTION]();\n                });\n                return false;\n            }\n\n            // 需要先将之前选中单元格元素清空\n            if (isEmptyValue(headerIndicatorColKeys.startColKey)) {\n                // 值的比较（currentCell.colKey 会变化）\n                if (\n                    JSON.stringify(colKeys) !=\n                    JSON.stringify([currentCell.colKey])\n                ) {\n                    this.$refs[this.cellSelectionRef].clearCurrentCellRect();\n                }\n                this.$refs[this.cellSelectionRef].clearNormalEndCellRect();\n            }\n\n            const { startColKey, endColKey, startColKeyIndex, endColKeyIndex } =\n                headerIndicatorColKeys;\n\n            let newStartColKey = startColKey;\n            let newEndColKey = endColKey;\n            if (shiftKey) {\n                if (isEmptyValue(startColKey)) {\n                    if (!isEmptyValue(currentCell.colKey)) {\n                        const leftColKey = getLeftmostColKey({\n                            colgroups,\n                            colKeys: colKeys.concat([currentCell.colKey]),\n                        });\n\n                        newStartColKey = currentCell.colKey;\n                        if (leftColKey === currentCell.colKey) {\n                            newEndColKey = currentCellEndColKey;\n                        } else {\n                            newEndColKey = currentCellStartColKey;\n                        }\n                    } else {\n                        newStartColKey = currentCellStartColKey;\n                        newEndColKey = currentCellEndColKey;\n                    }\n                } else {\n                    newStartColKey = startColKey;\n                    const leftColKey = getLeftmostColKey({\n                        colgroups,\n                        colKeys: colKeys.concat([startColKey]),\n                    });\n\n                    if (leftColKey === startColKey) {\n                        newEndColKey = currentCellEndColKey;\n                    } else {\n                        newEndColKey = currentCellStartColKey;\n                    }\n                }\n            } else {\n                const mouseEventClickType = getMouseEventClickType(event);\n                const currentCellStartColIndex = colgroups.findIndex(\n                    (x) => x.key === currentCellEndColKey,\n                );\n                const currentCellEndColIndex = colgroups.findIndex(\n                    (x) => x.key === currentCellStartColKey,\n                );\n                // 左键点击 || 不在当前选择列内\n                if (\n                    mouseEventClickType === MOUSE_EVENT_CLICK_TYPE.LEFT_MOUSE ||\n                    currentCellStartColIndex < startColKeyIndex ||\n                    currentCellEndColIndex < startColKeyIndex ||\n                    currentCellStartColIndex > endColKeyIndex ||\n                    currentCellEndColIndex > endColKeyIndex\n                ) {\n                    newStartColKey = currentCellStartColKey;\n                    newEndColKey = currentCellEndColKey;\n                }\n            }\n\n            this.headerIndicatorColKeysChange({\n                startColKey: newStartColKey,\n                endColKey: newEndColKey,\n            });\n        },\n\n        // header cell mouseover\n        headerCellMouseover({ event, column }) {\n            const {\n                colgroups,\n                isGroupHeader,\n                isHeaderCellMousedown,\n                headerIndicatorColKeys,\n            } = this;\n\n            if (\n                isHeaderCellMousedown &&\n                !isOperationColumn(column.key, colgroups)\n            ) {\n                let colKeys;\n                if (isGroupHeader) {\n                    colKeys = getColKeysByHeaderColumn({\n                        headerColumnItem: column,\n                    });\n                } else {\n                    colKeys = [column.key];\n                }\n\n                const leftColKey = getLeftmostColKey({\n                    colgroups,\n                    colKeys: colKeys.concat([\n                        headerIndicatorColKeys.startColKey,\n                    ]),\n                });\n\n                let endColKey;\n                if (leftColKey === headerIndicatorColKeys.startColKey) {\n                    endColKey = colKeys[colKeys.length - 1];\n                } else {\n                    endColKey = colKeys[0];\n                }\n                this.headerIndicatorColKeysChange({\n                    startColKey: this.headerIndicatorColKeys.startColKey,\n                    endColKey,\n                });\n            }\n        },\n\n        // header cell mousemove\n        headerCellMousemove({ event, column }) {\n            this.hooks.triggerHook(HOOKS_NAME.HEADER_CELL_MOUSEMOVE, {\n                event,\n                column,\n            });\n        },\n\n        // header cell mouseleave\n        headerCellMouseleave({ event, column }) {\n            // todo\n        },\n\n        // header mouseleave\n        headerMouseleave(event) {\n            this.setIsColumnResizerHover(false);\n        },\n\n        // table container mouseup\n        tableContainerMouseup() {\n            this.isHeaderCellMousedown = false;\n            this.isBodyCellMousedown = false;\n            this.isBodyOperationColumnMousedown = false;\n            this.isAutofillStarting = false;\n        },\n\n        /*\n         * @cellSelectionCornerMousedown\n         * @desc  recieve cell selection corner mousedown\n         */\n        cellSelectionCornerMousedown({ event }) {\n            this.isAutofillStarting = true;\n        },\n\n        /*\n         * @cellSelectionCornerMouseup\n         * @desc  recieve cell selection corner mouseup\n         */\n        cellSelectionCornerMouseup({ event }) {\n            this.isAutofillStarting = false;\n        },\n\n        // is edit column\n        isEditColumn(colKey) {\n            return this.colgroups.some((x) => x.key === colKey && x.edit);\n        },\n\n        /*\n         * @editCellByClick\n         * @desc  recieve td click event\n         * @param {boolean} isDblclick - is dblclick\n         */\n        editCellByClick({ isDblclick, rowKey, colKey }) {\n            const {\n                editOption,\n                isCellEditing,\n                hasEditColumn,\n                editingCell,\n                isEditColumn,\n            } = this;\n\n            if (!editOption) {\n                return false;\n            }\n\n            // has edit column\n            if (!hasEditColumn) {\n                return false;\n            }\n\n            if (isEmptyValue(rowKey) || isEmptyValue(colKey)) {\n                return false;\n            }\n            if (\n                editingCell &&\n                editingCell.rowKey == rowKey &&\n                editingCell.colKey == colKey\n            ) {\n                return false;\n            }\n            if (isCellEditing) {\n                this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n            }\n\n            if (isDblclick && isEditColumn(colKey)) {\n                this.enableStopEditing = false;\n\n                this[INSTANCE_METHODS.START_EDITING_CELL]({\n                    rowKey,\n                    colKey,\n                });\n            } else {\n                this.enableStopEditing = true;\n            }\n        },\n\n        /*\n         * @setEditingCell\n         * @desc  add editing cells\n         * @param {object} rowKey - row key\n         * @param {object} colKey - col key\n         * @param {object} column - column\n         * @param {object} row - row data\n         */\n        setEditingCell({ rowKey, colKey, column, row }) {\n            this.editingCell = {\n                rowKey,\n                row: cloneDeep(row),\n                colKey,\n                column,\n            };\n        },\n\n        // update editing cell value\n        updateEditingCellValue(value) {\n            const { editingCell } = this;\n            let { row, column } = editingCell;\n            row[column.field] = value;\n            this.editingCell.row = row;\n        },\n\n        /*\n         * @clearEditingCell\n         * @desc clear editing cell\n         */\n        clearEditingCell() {\n            this.editingCell = {\n                rowKey: \"\",\n                colKey: \"\",\n                row: null,\n                column: null,\n            };\n        },\n\n        // contextmenu item click\n        contextmenuItemClick(type) {\n            // header contextmenu\n            if (this.contextMenuType === CONTEXTMENU_TYPES.HEADER_CONTEXTMENU) {\n                this.headerContextmenuItemClick(type);\n            }\n            // body contextmenu\n            else {\n                this.bodyContextmenuItemClick(type);\n            }\n        },\n\n        // header contextmenu item click\n        headerContextmenuItemClick(type) {\n            const {\n                contextmenuHeaderOption,\n                cellSelectionData,\n                cellSelectionRangeData,\n                allRowKeys,\n                colgroups,\n                enableColumnResize,\n            } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n            const { afterMenuClick } = contextmenuHeaderOption;\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                let selectionRangeKeys = getSelectionRangeKeys({\n                    cellSelectionRangeData,\n                });\n\n                let selectionRangeIndexes = getSelectionRangeIndexes({\n                    cellSelectionRangeData,\n                    colgroups,\n                    allRowKeys,\n                });\n\n                if (isFunction(afterMenuClick)) {\n                    const callback = afterMenuClick({\n                        type,\n                        selectionRangeKeys,\n                        selectionRangeIndexes,\n                    });\n                    if (isBoolean(callback) && !callback) {\n                        return false;\n                    }\n                }\n                const editInputEditor = this.$refs[this.editInputRef];\n\n                // cut\n                if (CONTEXTMENU_NODE_TYPES.CUT === type) {\n                    editInputEditor.textareaSelect();\n                    document.execCommand(\"cut\");\n                }\n                // copy\n                else if (CONTEXTMENU_NODE_TYPES.COPY === type) {\n                    editInputEditor.textareaSelect();\n                    document.execCommand(\"copy\");\n                }\n                // empty column\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_COLUMN === type) {\n                    this.deleteCellSelectionRangeValue();\n                }\n                // left fixed column to\n                else if (CONTEXTMENU_NODE_TYPES.LEFT_FIXED_COLUMN_TO === type) {\n                    this.cloneColumns = setColumnFixed({\n                        cloneColumns: this.cloneColumns,\n                        cellSelectionRangeData,\n                        fixedType: COLUMN_FIXED_TYPE.LEFT,\n                        colgroups,\n                        enableColumnResize,\n                    });\n                }\n                // cancel left fixed column to\n                else if (\n                    CONTEXTMENU_NODE_TYPES.CANCEL_LEFT_FIXED_COLUMN_TO === type\n                ) {\n                    this.cloneColumns = cancelColumnFixed({\n                        cloneColumns: this.cloneColumns,\n                        colgroups,\n                        fixedType: COLUMN_FIXED_TYPE.LEFT,\n                        enableColumnResize,\n                    });\n                }\n                // right fixed column to\n                else if (\n                    CONTEXTMENU_NODE_TYPES.RIGHT_FIXED_COLUMN_TO === type\n                ) {\n                    this.cloneColumns = setColumnFixed({\n                        cloneColumns: this.cloneColumns,\n                        cellSelectionRangeData,\n                        fixedType: COLUMN_FIXED_TYPE.RIGHT,\n                        colgroups,\n                        enableColumnResize,\n                    });\n                }\n                // cancel right fixed column to\n                else if (\n                    CONTEXTMENU_NODE_TYPES.CANCEL_RIGHT_FIXED_COLUMN_TO === type\n                ) {\n                    this.cloneColumns = cancelColumnFixed({\n                        cloneColumns: this.cloneColumns,\n                        colgroups,\n                        fixedType: COLUMN_FIXED_TYPE.RIGHT,\n                        enableColumnResize,\n                    });\n                }\n            }\n        },\n\n        // body contextmenu item click\n        bodyContextmenuItemClick(type) {\n            const {\n                contextmenuBodyOption,\n                cellSelectionData,\n                cellSelectionRangeData,\n                tableData,\n                allRowKeys,\n                colgroups,\n                rowKeyFieldName,\n            } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n            const { afterMenuClick } = contextmenuBodyOption;\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                let selectionRangeKeys = getSelectionRangeKeys({\n                    cellSelectionRangeData,\n                });\n\n                let selectionRangeIndexes = getSelectionRangeIndexes({\n                    cellSelectionRangeData,\n                    colgroups,\n                    allRowKeys,\n                });\n\n                if (isFunction(afterMenuClick)) {\n                    const callback = afterMenuClick({\n                        type,\n                        selectionRangeKeys,\n                        selectionRangeIndexes,\n                    });\n                    if (isBoolean(callback) && !callback) {\n                        return false;\n                    }\n                }\n\n                const { startRowIndex, endRowIndex } = selectionRangeIndexes;\n\n                const currentRowIndex = allRowKeys.findIndex(\n                    (x) => x === rowKey,\n                );\n\n                const editInputEditor = this.$refs[this.editInputRef];\n\n                // cut\n                if (CONTEXTMENU_NODE_TYPES.CUT === type) {\n                    editInputEditor.textareaSelect();\n                    document.execCommand(\"cut\");\n                }\n                // copy\n                else if (CONTEXTMENU_NODE_TYPES.COPY === type) {\n                    editInputEditor.textareaSelect();\n                    document.execCommand(\"copy\");\n                }\n                // paste todo\n                // else if (CONTEXTMENU_NODE_TYPES.PASTE === type) {\n                //     editInputEditor.textareaSelect();\n                //     document.execCommand(\"paste\", null, null);\n                // }\n                // remove rows\n                else if (CONTEXTMENU_NODE_TYPES.REMOVE_ROW === type) {\n                    tableData.splice(\n                        startRowIndex,\n                        endRowIndex - startRowIndex + 1,\n                    );\n                }\n                // empty rows\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_ROW === type) {\n                    this.deleteCellSelectionRangeValue();\n                }\n                // empty rows\n                else if (CONTEXTMENU_NODE_TYPES.EMPTY_CELL === type) {\n                    this.deleteCellSelectionRangeValue();\n                }\n                // insert row above\n                else if (CONTEXTMENU_NODE_TYPES.INSERT_ROW_ABOVE === type) {\n                    tableData.splice(\n                        currentRowIndex,\n                        0,\n                        createEmptyRowData({ colgroups, rowKeyFieldName }),\n                    );\n                }\n                // insert row below\n                else if (CONTEXTMENU_NODE_TYPES.INSERT_ROW_BELOW === type) {\n                    tableData.splice(\n                        currentRowIndex + 1,\n                        0,\n                        createEmptyRowData({ colgroups, rowKeyFieldName }),\n                    );\n                }\n            }\n        },\n\n        // editor copy\n        editorCopy(event) {\n            const {\n                isCellEditing,\n                enableClipboard,\n                clipboardOption,\n                cellSelectionRangeData,\n                tableData,\n                colgroups,\n                allRowKeys,\n            } = this;\n\n            if (!enableClipboard) {\n                return false;\n            }\n\n            // 正在编辑的单元格不进行自定义复制功能\n            if (isCellEditing) {\n                return false;\n            }\n\n            const {\n                copy,\n                beforeCopy: beforeCopyCallback,\n                afterCopy: afterCopyCallback,\n            } = clipboardOption || {};\n\n            if (isBoolean(copy) && !copy) {\n                return false;\n            }\n\n            event.preventDefault();\n\n            const selectionRangeData = getSelectionRangeData({\n                cellSelectionRangeData,\n                resultType: \"flat\",\n                tableData,\n                colgroups,\n                allRowKeys,\n            });\n\n            const response = onBeforeCopy({\n                cellSelectionRangeData,\n                selectionRangeData,\n                colgroups,\n                allRowKeys,\n            });\n\n            if (isFunction(beforeCopyCallback)) {\n                const allowCoping = beforeCopyCallback(response);\n                if (isBoolean(allowCoping) && !allowCoping) {\n                    return false;\n                }\n            }\n\n            onAfterCopy({ event, selectionRangeData });\n\n            if (isFunction(afterCopyCallback)) {\n                afterCopyCallback(response);\n            }\n        },\n\n        // editor paste\n        editorPaste(event) {\n            const { isCellEditing, enableClipboard, clipboardOption } = this;\n\n            if (!enableClipboard) {\n                return false;\n            }\n\n            // 正在编辑的单元格不进行自定义粘贴功能\n            if (isCellEditing) {\n                return false;\n            }\n\n            const {\n                paste,\n                beforePaste: beforePasteCallback,\n                afterPaste: afterPasteCallback,\n            } = clipboardOption || {};\n\n            if (isBoolean(paste) && !paste) {\n                return false;\n            }\n\n            event.preventDefault();\n\n            const response = onBeforePaste({\n                event,\n                cellSelectionRangeData: this.cellSelectionRangeData,\n                colgroups: this.colgroups,\n                allRowKeys: this.allRowKeys,\n                rowKeyFieldName: this.rowKeyFieldName,\n            });\n\n            if (\n                response &&\n                Array.isArray(response.data) &&\n                response.data.length\n            ) {\n                if (isFunction(beforePasteCallback)) {\n                    const allowPasting = beforePasteCallback(response);\n                    if (isBoolean(allowPasting) && !allowPasting) {\n                        return false;\n                    }\n                }\n                // change table cell data\n                onAfterPaste({\n                    tableData: this.tableData,\n                    beforePasteResponse: response,\n                });\n\n                if (isFunction(afterPasteCallback)) {\n                    afterPasteCallback(response);\n                }\n\n                const { startColKey, endColKey, startRowKey, endRowKey } =\n                    response.selectionRangeKeys;\n\n                this.cellSelectionCurrentCellChange({\n                    rowKey: startRowKey,\n                    colKey: startColKey,\n                });\n\n                this.cellSelectionNormalEndCellChange({\n                    rowKey: endRowKey,\n                    colKey: endColKey,\n                });\n\n                // clipboard cell value change\n                this.hooks.triggerHook(HOOKS_NAME.CLIPBOARD_CELL_VALUE_CHANGE);\n            }\n        },\n\n        // editor cut\n        editorCut(event) {\n            const {\n                isCellEditing,\n                enableClipboard,\n                clipboardOption,\n                cellSelectionRangeData,\n                tableData,\n                colgroups,\n                allRowKeys,\n            } = this;\n\n            if (!enableClipboard) {\n                return false;\n            }\n\n            // 正在编辑的单元格不进行自定义剪切功能\n            if (isCellEditing) {\n                return false;\n            }\n\n            const {\n                cut,\n                beforeCut: beforeCutCallback,\n                afterCut: afterCutCallback,\n            } = clipboardOption || {};\n\n            if (isBoolean(cut) && !cut) {\n                return false;\n            }\n\n            event.preventDefault();\n\n            const selectionRangeData = getSelectionRangeData({\n                cellSelectionRangeData,\n                resultType: \"flat\",\n                tableData,\n                colgroups,\n                allRowKeys,\n            });\n\n            const response = onBeforeCut({\n                cellSelectionRangeData,\n                selectionRangeData,\n                colgroups,\n                allRowKeys,\n            });\n\n            if (isFunction(beforeCutCallback)) {\n                const allowCuting = beforeCutCallback(response);\n                if (isBoolean(allowCuting) && !allowCuting) {\n                    return false;\n                }\n            }\n\n            onAfterCut({\n                event,\n                tableData,\n                colgroups,\n                selectionRangeData,\n                selectionRangeIndexes: response.selectionRangeIndexes,\n            });\n\n            if (isFunction(afterCutCallback)) {\n                afterCutCallback(response);\n            }\n        },\n\n        // delete selection cell value\n        deleteCellSelectionRangeValue() {\n            const {\n                isCellEditing,\n                enableClipboard,\n                clipboardOption,\n                cellSelectionRangeData,\n                tableData,\n                colgroups,\n                allRowKeys,\n            } = this;\n\n            if (!enableClipboard) {\n                return false;\n            }\n\n            // 正在编辑的单元格不进行删除区域单元格功能\n            if (isCellEditing) {\n                return false;\n            }\n\n            const {\n                // delete is key word\n                delete: delete2,\n                beforeDelete: beforeDeleteCallback,\n                afterDelete: afterDeleteCallback,\n            } = clipboardOption || {};\n\n            if (isBoolean(delete2) && !delete2) {\n                return false;\n            }\n\n            const selectionRangeData = getSelectionRangeData({\n                cellSelectionRangeData,\n                resultType: \"flat\",\n                tableData,\n                colgroups,\n                allRowKeys,\n            });\n\n            const response = onBeforeDelete({\n                cellSelectionRangeData,\n                selectionRangeData,\n                colgroups,\n                allRowKeys,\n            });\n\n            if (isFunction(beforeDeleteCallback)) {\n                const allowDeleting = beforeDeleteCallback(response);\n                if (isBoolean(allowDeleting) && !allowDeleting) {\n                    return false;\n                }\n            }\n\n            onAfterDelete({\n                tableData,\n                colgroups,\n                selectionRangeIndexes: response.selectionRangeIndexes,\n            });\n\n            if (isFunction(afterDeleteCallback)) {\n                afterDeleteCallback(response);\n            }\n        },\n\n        // set range cell selection by header indicator\n        setRangeCellSelectionByHeaderIndicator() {\n            const { headerIndicatorColKeys, allRowKeys } = this;\n            const { startColKey, endColKey } = headerIndicatorColKeys;\n\n            if (isEmptyValue(startColKey) || isEmptyValue(endColKey)) {\n                return false;\n            }\n\n            this.cellSelectionCurrentCellChange({\n                rowKey: allRowKeys[0],\n                colKey: startColKey,\n            });\n\n            this.cellSelectionNormalEndCellChange({\n                rowKey: allRowKeys[allRowKeys.length - 1],\n                colKey: endColKey,\n            });\n        },\n\n        // set range cell selection by body indicator\n        setRangeCellSelectionByBodyIndicator() {\n            const { bodyIndicatorRowKeys, colgroups } = this;\n            const { startRowKey, endRowKey } = bodyIndicatorRowKeys;\n\n            if (isEmptyValue(startRowKey) || isEmptyValue(endRowKey)) {\n                return false;\n            }\n\n            if (colgroups.length > 1) {\n                this.cellSelectionCurrentCellChange({\n                    rowKey: startRowKey,\n                    colKey: colgroups[1].key,\n                });\n\n                this.cellSelectionNormalEndCellChange({\n                    rowKey: endRowKey,\n                    colKey: colgroups[colgroups.length - 1].key,\n                });\n            }\n        },\n\n        // set isColumnResizerHover\n        setIsColumnResizerHover(val) {\n            this.isColumnResizerHover = val;\n        },\n\n        // set isColumnResizing\n        setIsColumnResizing(val) {\n            this.isColumnResizing = val;\n        },\n\n        /*\n        set cell selection and column to visible\n        */\n        [INSTANCE_METHODS.SET_CELL_SELECTION]({\n            rowKey,\n            colKey,\n            isScrollToRow = true,\n        }) {\n            const { enableCellSelection } = this;\n\n            if (!enableCellSelection) {\n                return false;\n            }\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                this.cellSelectionCurrentCellChange({\n                    rowKey,\n                    colKey,\n                });\n\n                const column = getColumnByColkey(colKey, this.colgroups);\n                // column to visible\n                this.columnToVisible(column);\n                // row to visible\n                if (isScrollToRow) {\n                    this[INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({ rowKey });\n                }\n            }\n        },\n\n        /*\n        set range cell selection and column to visible\n        */\n        [INSTANCE_METHODS.SET_RANGE_CELL_SELECTION]({\n            startRowKey,\n            startColKey,\n            endRowKey,\n            endColKey,\n            isScrollToStartCell = false,\n        }) {\n            const { enableCellSelection } = this;\n\n            if (!enableCellSelection) {\n                return false;\n            }\n\n            if (\n                isEmptyValue(startRowKey) ||\n                isEmptyValue(startColKey) ||\n                isEmptyValue(endRowKey) ||\n                isEmptyValue(endColKey)\n            ) {\n                return false;\n            }\n\n            this.cellSelectionCurrentCellChange({\n                rowKey: startRowKey,\n                colKey: startColKey,\n            });\n\n            this.cellSelectionNormalEndCellChange({\n                rowKey: endRowKey,\n                colKey: endColKey,\n            });\n\n            // row to visible\n            if (isScrollToStartCell) {\n                const column = getColumnByColkey(startColKey, this.colgroups);\n                // column to visible\n                this.columnToVisible(column);\n                this[INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({\n                    rowKey: startRowKey,\n                });\n            }\n        },\n\n        /*\n        get range cell selection\n        */\n        [INSTANCE_METHODS.GET_RANGE_CELL_SELECTION]() {\n            const {\n                cellSelectionData,\n                cellSelectionRangeData,\n                allRowKeys,\n                colgroups,\n            } = this;\n\n            const { rowKey, colKey } = cellSelectionData.currentCell;\n\n            if (!isEmptyValue(rowKey) && !isEmptyValue(colKey)) {\n                let selectionRangeKeys = getSelectionRangeKeys({\n                    cellSelectionRangeData,\n                });\n\n                let selectionRangeIndexes = getSelectionRangeIndexes({\n                    cellSelectionRangeData,\n                    colgroups,\n                    allRowKeys,\n                });\n\n                return {\n                    selectionRangeKeys,\n                    selectionRangeIndexes,\n                };\n            }\n        },\n\n        /*\n        set all cell selection and column to visible\n        */\n        [INSTANCE_METHODS.SET_ALL_CELL_SELECTION]() {\n            const { enableCellSelection } = this;\n\n            if (!enableCellSelection) {\n                return false;\n            }\n\n            const { colgroups, allRowKeys } = this;\n\n            if (colgroups.length) {\n                const colKeys = colgroups\n                    .filter((x) => !x.operationColumn)\n                    .map((x) => x.key);\n\n                if (colKeys.length) {\n                    this.headerIndicatorColKeysChange({\n                        startColKey: colKeys[0],\n                        endColKey: colKeys[colKeys.length - 1],\n                    });\n                }\n            }\n\n            if (allRowKeys.length) {\n                this.bodyIndicatorRowKeysChange({\n                    startRowKey: allRowKeys[0],\n                    endRowKey: allRowKeys[allRowKeys.length - 1],\n                });\n            }\n        },\n\n        // hide columns by keys\n        [INSTANCE_METHODS.HIDE_COLUMNS_BY_KEYS](keys) {\n            if (!isEmptyArray(keys)) {\n                /*\n                将要隐藏的列添加到 hiddenColumns 中\n                Add the columns you want to hide to hidden columns\n                */\n                this.hiddenColumns = Array.from(\n                    new Set(this.hiddenColumns.concat(keys)),\n                );\n\n                this.showOrHideColumns();\n            }\n        },\n\n        // show columns by keys\n        [INSTANCE_METHODS.SHOW_COLUMNS_BY_KEYS](keys) {\n            if (!isEmptyArray(keys)) {\n                /*\n                将要显示的列从 hiddenColumns 中移除\n                Remove the columns to show from hidden columns\n                */\n                for (let i = keys.length - 1; i >= 0; i--) {\n                    const delIndex = this.hiddenColumns.indexOf(keys[i]);\n                    if (delIndex > -1) {\n                        this.hiddenColumns.splice(delIndex, 1);\n                    }\n                }\n\n                this.showOrHideColumns();\n            }\n        },\n\n        // table scrollTo\n        [INSTANCE_METHODS.SCROLL_TO](option) {\n            scrollTo(this.$refs[this.tableContainerRef], option);\n        },\n        // table scroll to rowKey position\n        [INSTANCE_METHODS.SCROLL_TO_ROW_KEY]({ rowKey }) {\n            if (isEmptyValue(rowKey)) {\n                console.warn(\"Row key can't be empty!\");\n                return false;\n            }\n\n            let scrollTop = 0;\n\n            const { isVirtualScroll, headerTotalHeight } = this;\n\n            const tableContainerRef = this.$refs[this.tableContainerRef];\n\n            if (isVirtualScroll) {\n                const position = this.virtualScrollPositions.find(\n                    (x) => x.rowKey === rowKey,\n                );\n\n                if (position) {\n                    scrollTop = position.top;\n                }\n\n                // fix bug #470\n                setTimeout(() => {\n                    scrollTo(tableContainerRef, {\n                        top: scrollTop,\n                        behavior: \"auto\",\n                    });\n                }, 200);\n            } else {\n                const rowEl = this.$el.querySelector(\n                    `tbody tr[${COMPS_CUSTOM_ATTRS.BODY_ROW_KEY}=\"${rowKey}\"]`,\n                );\n\n                scrollTop = rowEl.offsetTop - headerTotalHeight;\n            }\n\n            scrollTo(tableContainerRef, {\n                top: scrollTop,\n                behavior: isVirtualScroll ? \"auto\" : \"smooth\",\n            });\n        },\n        // scroll to col key position\n        [INSTANCE_METHODS.SCROLL_TO_COL_KEY]({ colKey }) {\n            const column = getColumnByColkey(colKey, this.colgroups);\n            if (column) {\n                this.columnToVisible(column);\n            }\n        },\n        // start editing cell\n        [INSTANCE_METHODS.START_EDITING_CELL]({\n            rowKey,\n            colKey,\n            defaultValue,\n        }) {\n            const {\n                editOption,\n                colgroups,\n                rowKeyFieldName,\n                editingCell,\n                cellSelectionData,\n            } = this;\n\n            if (!editOption) {\n                return false;\n            }\n\n            let currentRow = this.tableData.find(\n                (x) => x[rowKeyFieldName] === rowKey,\n            );\n\n            currentRow = cloneDeep(currentRow);\n\n            /* \n            调用API编辑的情况，需要关闭之前编辑的单元格\n            */\n            if (\n                editingCell.rowKey === rowKey &&\n                editingCell.colKey === colKey\n            ) {\n                return false;\n            }\n\n            const currentColumn = colgroups.find((x) => x.key === colKey);\n            // 当前列是否可编辑\n            if (!currentColumn.edit) {\n                return false;\n            }\n\n            // 给当前列赋默认值\n            if (isDefined(defaultValue)) {\n                this.editorInputStartValue = defaultValue;\n                // doesn't change cell original value\n                currentRow[currentColumn.field] = defaultValue;\n            } else {\n                this.editorInputStartValue = currentRow[currentColumn.field];\n            }\n\n            if (\n                cellSelectionData.currentCell.colKey !== colKey ||\n                cellSelectionData.currentCell.rowKey !== rowKey\n            ) {\n                this.cellSelectionCurrentCellChange({\n                    rowKey,\n                    colKey,\n                });\n            }\n\n            // set editing cell\n            this.setEditingCell({\n                rowKey,\n                colKey,\n                column: currentColumn,\n                row: cloneDeep(currentRow),\n            });\n        },\n        // stop editing cell\n        [INSTANCE_METHODS.STOP_EDITING_CELL]() {\n            const { editOption, isCellEditing } = this;\n\n            if (!editOption) {\n                return false;\n            }\n\n            // clear editor input start value\n            this.editorInputStartValue = \"\";\n\n            if (isCellEditing) {\n                this.saveCellWhenStopEditing();\n            }\n        },\n        // set highlight row\n        [INSTANCE_METHODS.SET_HIGHLIGHT_ROW]({ rowKey }) {\n            this.highlightRowKey = rowKey;\n        },\n    },\n    created() {\n        // bug fixed #467\n        this.debouncedBodyCellWidthChange = debounce(\n            this.bodyCellWidthChange,\n            0,\n        );\n    },\n    mounted() {\n        this.parentRendered = true;\n\n        // set contextmenu event target\n        this.contextmenuEventTarget = this.$el.querySelector(\n            `.${clsName(\"content\")}`,\n        );\n\n        // create hook instance\n        this.hooks = new Hooks();\n\n        // receive sort change\n        this.$on(EMIT_EVENTS.SORT_CHANGE, (params) => {\n            this.updateColgroupsBySortChange(params);\n        });\n\n        // receive row selected change\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_CHANGE, (params) => {\n            this.selectedAllChange(params);\n        });\n\n        // receive selected all info\n        this.$on(EMIT_EVENTS.CHECKBOX_SELECTED_ALL_INFO, (params) => {\n            this.setSelectedAllInfo(params);\n        });\n\n        // receive multiple header row height change\n        this.$on(\n            EMIT_EVENTS.HEADER_ROW_HEIGHT_CHANGE,\n            ({ rowIndex, height }) => {\n                this.headerRowHeightChange({ rowIndex, height });\n            },\n        );\n\n        // receive virtual scroll row height change\n        this.$on(EMIT_EVENTS.BODY_ROW_HEIGHT_CHANGE, ({ rowKey, height }) => {\n            this.bodyRowHeightChange({ rowKey, height });\n        });\n\n        // receive footer row height change\n        this.$on(\n            EMIT_EVENTS.FOOTER_ROW_HEIGHT_CHANGE,\n            ({ rowIndex, height }) => {\n                this.footRowHeightChange({ rowIndex, height });\n            },\n        );\n\n        // recieve body cell click\n        this.$on(EMIT_EVENTS.BODY_CELL_CLICK, (params) => {\n            this.bodyCellClick(params);\n        });\n\n        // recieve body cell mouseover\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEOVER, (params) => {\n            this.bodyCellMouseover(params);\n        });\n\n        // recieve body cell mousedown\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEDOWN, (params) => {\n            this.bodyCellMousedown(params);\n        });\n\n        // recieve body cell mousemove\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEMOVE, (params) => {\n            this.bodyCellMousemove(params);\n        });\n\n        // recieve body cell mouseup\n        this.$on(EMIT_EVENTS.BODY_CELL_MOUSEUP, (params) => {\n            this.bodyCellMouseup(params);\n        });\n\n        // recieve selection corner mousedown\n        this.$on(EMIT_EVENTS.SELECTION_CORNER_MOUSEDOWN, (params) => {\n            this.cellSelectionCornerMousedown(params);\n        });\n\n        // recieve selection corner mouseup\n        this.$on(EMIT_EVENTS.SELECTION_CORNER_MOUSEUP, (params) => {\n            this.cellSelectionCornerMouseup(params);\n        });\n\n        // autofilling direction change\n        this.$on(EMIT_EVENTS.AUTOFILLING_DIRECTION_CHANGE, (params) => {\n            this.autofillingDirectionChange(params);\n        });\n\n        // recieve body cell contextmenu(right click)\n        this.$on(EMIT_EVENTS.BODY_CELL_CONTEXTMENU, (params) => {\n            this.bodyCellContextmenu(params);\n        });\n\n        // recieve body cell double click\n        this.$on(EMIT_EVENTS.BODY_CELL_DOUBLE_CLICK, (params) => {\n            this.bodyCellDoubleClick(params);\n        });\n\n        // recieve header cell contextmenu(right click)\n        this.$on(EMIT_EVENTS.HEADER_CELL_CLICK, (params) => {\n            this.headerCellClick(params);\n        });\n\n        // recieve header cell contextmenu(right click)\n        this.$on(EMIT_EVENTS.HEADER_CELL_CONTEXTMENU, (params) => {\n            this.headerCellContextmenu(params);\n        });\n\n        // recieve header cell mousedown\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEDOWN, (params) => {\n            this.headerCellMousedown(params);\n        });\n\n        // recieve header cell mouseover\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEOVER, (params) => {\n            this.headerCellMouseover(params);\n        });\n\n        // recieve header cell mousemove\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSEMOVE, (params) => {\n            this.headerCellMousemove(params);\n        });\n\n        // recieve header cell mouseleave\n        this.$on(EMIT_EVENTS.HEADER_CELL_MOUSELEAVE, (params) => {\n            this.headerCellMouseleave(params);\n        });\n\n        // add key down event listener\n        document.addEventListener(\"keydown\", this.dealKeydownEvent);\n\n        // init scrolling\n        this.initScrolling();\n    },\n    destroyed() {\n        // remove key down event listener\n        document.removeEventListener(\"keydown\", this.dealKeydownEvent);\n    },\n    render() {\n        const {\n            showHeader,\n            tableViewportWidth,\n            tableContainerStyle,\n            tableStyle,\n            tableClass,\n            colgroups,\n            groupColumns,\n            fixedHeader,\n            fixedFooter,\n            actualRenderTableData,\n            debouncedBodyCellWidthChange,\n            expandOption,\n            checkboxOption,\n            radioOption,\n            rowKeyFieldName,\n            virtualScrollOption,\n            isVirtualScroll,\n            sortOption,\n            cellStyleOption,\n            showVirtualScrollingPlaceholder,\n            cellSelectionData,\n            editOption,\n            contextmenuOptions,\n            allRowKeys,\n            enableCellSelection,\n            enableColumnResize,\n            cellSelectionRangeData,\n            headerIndicatorColKeys,\n            bodyIndicatorRowKeys,\n        } = this;\n\n        // header props\n        const headerProps = {\n            class: clsName(\"header\"),\n            style: {\n                cursor:\n                    this.isColumnResizerHover || this.isColumnResizing\n                        ? \"col-resize\"\n                        : \"\",\n            },\n            props: {\n                columnsOptionResetTime: this.columnsOptionResetTime,\n                tableViewportWidth,\n                groupColumns,\n                colgroups,\n                isGroupHeader: this.isGroupHeader,\n                fixedHeader,\n                checkboxOption,\n                sortOption,\n                cellStyleOption,\n                eventCustomOption: this.eventCustomOption,\n                headerRows: this.headerRows,\n                cellSelectionData,\n                cellSelectionRangeData,\n                headerIndicatorColKeys,\n            },\n            nativeOn: {\n                click: () => {\n                    this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                },\n                mouseleave: (event) => {\n                    this.headerMouseleave(event);\n                },\n            },\n        };\n\n        // body props\n        const bodyProps = {\n            ref: this.tableBodyRef,\n            class: [clsName(\"body\"), this.tableBodyClass],\n            props: {\n                tableViewportWidth,\n                columnsOptionResetTime: this.columnsOptionResetTime,\n                colgroups,\n                expandOption,\n                checkboxOption,\n                actualRenderTableData,\n                rowKeyFieldName,\n                radioOption,\n                virtualScrollOption,\n                isVirtualScroll,\n                cellStyleOption,\n                cellSpanOption: this.cellSpanOption,\n                eventCustomOption: this.eventCustomOption,\n                cellSelectionOption: this.cellSelectionOption,\n                hasFixedColumn: this.hasFixedColumn,\n                cellSelectionData,\n                cellSelectionRangeData,\n                allRowKeys,\n                editOption,\n                highlightRowKey: this.highlightRowKey,\n                showVirtualScrollingPlaceholder,\n                bodyIndicatorRowKeys,\n            },\n            on: {\n                [EMIT_EVENTS.BODY_CELL_WIDTH_CHANGE]:\n                    debouncedBodyCellWidthChange,\n                [EMIT_EVENTS.HIGHLIGHT_ROW_CHANGE]:\n                    this[INSTANCE_METHODS.SET_HIGHLIGHT_ROW],\n            },\n        };\n\n        // footer props\n        const footerProps = {\n            class: [clsName(\"footer\")],\n            props: {\n                colgroups,\n                footerData: this.footerData,\n                rowKeyFieldName,\n                cellStyleOption,\n                fixedFooter,\n                cellSpanOption: this.cellSpanOption,\n                eventCustomOption: this.eventCustomOption,\n                hasFixedColumn: this.hasFixedColumn,\n                allRowKeys,\n                footerRows: this.footerRows,\n            },\n            nativeOn: {\n                click: () => {\n                    this[INSTANCE_METHODS.STOP_EDITING_CELL]();\n                },\n            },\n        };\n\n        // table root props\n        const tableRootProps = {\n            ref: this.tableRootRef,\n            class: {\n                \"vue-table-root\": true,\n            },\n        };\n\n        // table container wrapper props\n        const tableContainerWrapperProps = {\n            ref: this.tableContainerWrapperRef,\n            style: this.tableContainerWrapperStyle,\n            class: {\n                \"ve-table\": true,\n                [clsName(\"border-around\")]: this.borderAround,\n            },\n            props: {\n                tagName: \"div\",\n            },\n            on: {\n                \"on-dom-resize-change\": ({ height }) => {\n                    this.tableOffestHeight = height;\n                    this.initVirtualScroll();\n                    // fixed #404\n                    this.initScrolling();\n                    this.setScrollBarStatus();\n                    this.hooks.triggerHook(HOOKS_NAME.TABLE_SIZE_CHANGE);\n                },\n            },\n            directives: [\n                {\n                    name: \"click-outside\",\n                    value: (e) => {\n                        this.tableClickOutside(e);\n                    },\n                },\n            ],\n        };\n\n        // table container props\n        const tableContainerProps = {\n            ref: this.tableContainerRef,\n            class: this.tableContainerClass,\n            style: tableContainerStyle,\n            on: {\n                scroll: () => {\n                    const tableContainerRef =\n                        this.$refs[this.tableContainerRef];\n\n                    this.hooks.triggerHook(\n                        HOOKS_NAME.TABLE_CONTAINER_SCROLL,\n                        tableContainerRef,\n                    );\n                    this.setScrolling(tableContainerRef);\n\n                    if (isVirtualScroll) {\n                        this.tableContainerVirtualScrollHandler(\n                            tableContainerRef,\n                        );\n\n                        const {\n                            virtualScrollStartIndex: startIndex,\n                            previewVirtualScrollStartIndex: previewStartIndex,\n                        } = this;\n\n                        const differ = Math.abs(startIndex - previewStartIndex);\n\n                        this.previewVirtualScrollStartIndex = startIndex;\n\n                        // default placeholder per scrolling row count\n                        if (\n                            differ > this.defaultPlaceholderPerScrollingRowCount\n                        ) {\n                            this.showVirtualScrollingPlaceholder = true;\n                        } else {\n                            this.showVirtualScrollingPlaceholder = false;\n                        }\n\n                        this.debounceScrollEnded();\n                    }\n                },\n                mouseup: () => {\n                    // 事件的先后顺序 containerMouseup > bodyCellMousedown > bodyCellMouseup > bodyCellClick\n                    this.tableContainerMouseup();\n                },\n                mousemove: (event) => {\n                    // todo\n                },\n            },\n        };\n\n        // table wrapper props\n        const tableWrapperProps = {\n            ref: this.tableContentWrapperRef,\n            class: [clsName(\"content-wrapper\")],\n            props: {\n                tagName: \"div\",\n            },\n            on: {\n                \"on-dom-resize-change\": ({ height }) => {\n                    this.tableHeight = height;\n                },\n            },\n        };\n\n        // tale props\n        const tableProps = {\n            ref: this.tableRef,\n            class: [clsName(\"content\"), tableClass],\n            style: tableStyle,\n        };\n\n        // selection props\n        const selectionProps = {\n            ref: this.cellSelectionRef,\n            props: {\n                tableEl: this.$refs[this.tableRef],\n                allRowKeys,\n                colgroups,\n                parentRendered: this.parentRendered,\n                hooks: this.hooks,\n                cellSelectionData,\n                isAutofillStarting: this.isAutofillStarting,\n                cellSelectionRangeData,\n                currentCellSelectionType: this.currentCellSelectionType,\n                showVirtualScrollingPlaceholder,\n                isVirtualScroll,\n                virtualScrollVisibleIndexs: this.virtualScrollVisibleIndexs,\n                isCellEditing: this.isCellEditing,\n                cellAutofillOption: this.cellAutofillOption,\n            },\n            on: {\n                [EMIT_EVENTS.CELL_SELECTION_RANGE_DATA_CHANGE]: (newData) => {\n                    this.cellSelectionRangeDataChange(newData);\n                },\n            },\n        };\n\n        // edit input props\n        const editInputProps = {\n            ref: this.editInputRef,\n            props: {\n                hooks: this.hooks,\n                parentRendered: this.parentRendered,\n                inputStartValue: this.editorInputStartValue,\n                rowKeyFieldName,\n                tableData: this.tableData,\n                cellSelectionData,\n                colgroups,\n                editingCell: this.editingCell,\n                isCellEditing: this.isCellEditing,\n                allRowKeys,\n                hasXScrollBar: this.hasXScrollBar,\n                hasYScrollBar: this.hasYScrollBar,\n                hasRightFixedColumn: this.hasRightFixedColumn,\n                scrollBarWidth: this.getScrollBarWidth(),\n            },\n            on: {\n                // edit input click\n                [EMIT_EVENTS.EDIT_INPUT_CLICK]: () => {\n                    this.enableStopEditing = false;\n                },\n                // edit input value change\n                [EMIT_EVENTS.EDIT_INPUT_VALUE_CHANGE]: (value) => {\n                    this.updateEditingCellValue(value);\n                },\n                // copy\n                [EMIT_EVENTS.EDIT_INPUT_COPY]: (e) => {\n                    this.editorCopy(e);\n                },\n                // paste\n                [EMIT_EVENTS.EDIT_INPUT_PASTE]: (e) => {\n                    this.editorPaste(e);\n                },\n                // cut\n                [EMIT_EVENTS.EDIT_INPUT_CUT]: (e) => {\n                    this.editorCut(e);\n                },\n            },\n        };\n\n        // 直接在组件上写事件，单元测试无法通过。如 on={{\"on-node-click\":()=>{}}}\n        const contextmenuProps = {\n            ref: this.contextmenuRef,\n            props: {\n                eventTarget: this.contextmenuEventTarget,\n                options: contextmenuOptions,\n            },\n            on: {\n                \"on-node-click\": (type) => {\n                    this.contextmenuItemClick(type);\n                },\n            },\n        };\n\n        // column resizer props\n        const columnResizerProps = {\n            props: {\n                parentRendered: this.parentRendered,\n                tableContainerEl: this.$refs[this.tableContainerRef],\n                hooks: this.hooks,\n                colgroups,\n                isColumnResizerHover: this.isColumnResizerHover,\n                isColumnResizing: this.isColumnResizing,\n                setIsColumnResizerHover: this.setIsColumnResizerHover,\n                setIsColumnResizing: this.setIsColumnResizing,\n                setColumnWidth: this.setColumnWidth,\n                columnWidthResizeOption: this.columnWidthResizeOption,\n            },\n        };\n\n        return (\n            <div {...tableRootProps}>\n                <VueDomResizeObserver {...tableContainerWrapperProps}>\n                    <div {...tableContainerProps}>\n                        {/* virtual view phantom */}\n                        {this.getVirtualViewPhantom()}\n                        {/* vue 实例类型，访问dom时需要通过$el属性访问 */}\n                        <VueDomResizeObserver {...tableWrapperProps}>\n                            <table {...tableProps}>\n                                {/* colgroup */}\n                                <Colgroup\n                                    colgroups={colgroups}\n                                    enableColumnResize={enableColumnResize}\n                                />\n                                {/* table header */}\n                                {showHeader && <Header {...headerProps} />}\n                                {/* table body */}\n                                <Body {...bodyProps} />\n                                {/* table footer */}\n                                <Footer {...footerProps} />\n                            </table>\n                            {/* cell selection */}\n                            {enableCellSelection && (\n                                <Selection {...selectionProps} />\n                            )}\n                        </VueDomResizeObserver>\n                    </div>\n                    {/* edit input */}\n                    {enableCellSelection && <EditInput {...editInputProps} />}\n                    {/* contextmenu */}\n                    {(this.enableHeaderContextmenu ||\n                        this.enableBodyContextmenu) && (\n                        <VeContextmenu {...contextmenuProps} />\n                    )}\n                    {/* column resizer */}\n                    {enableColumnResize && (\n                        <ColumnResizer {...columnResizerProps} />\n                    )}\n                </VueDomResizeObserver>\n            </div>\n        );\n    },\n};\n","import VeTable from \"./src/index.jsx\";\n\nVeTable.install = function (Vue) {\n    Vue.component(VeTable.name, VeTable);\n};\n\nexport default VeTable;\n","// This file is auto gererated by build/build-entry.js\r\n\nimport VeCheckbox from './ve-checkbox';\nimport VeCheckboxGroup from './ve-checkbox-group';\nimport VeContextmenu from './ve-contextmenu';\nimport VeDropdown from './ve-dropdown';\nimport VeIcon from './ve-icon';\nimport VeLoading from './ve-loading';\nimport VeLocale from './ve-locale';\nimport VePagination from './ve-pagination';\nimport VeRadio from './ve-radio';\nimport VeSelect from './ve-select';\nimport VeTable from './ve-table';\n\n\nconst version = '2.21.9';\nconst components = [\n  VeCheckbox,\n  VeCheckboxGroup,\n  VeContextmenu,\n  VeDropdown,\n  VeIcon,\n  VeLoading,\n  VeLocale,\n  VePagination,\n  VeRadio,\n  VeSelect,\n  VeTable\n];\n\nconst install = Vue => {\n  components.forEach(Component => {\n    Vue.use(Component);\n  });\n\n  Vue.prototype.$veLoading = VeLoading;\n  Vue.prototype.$veLocale = VeLocale;\n};\n\n/* istanbul ignore if */\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexport {\n  install,\n  version,\n  VeCheckbox,\n  VeCheckboxGroup,\n  VeContextmenu,\n  VeDropdown,\n  VeIcon,\n  VeLoading,\n  VeLocale,\n  VePagination,\n  VeRadio,\n  VeSelect,\n  VeTable\n};\n\nexport default {\n  install,\n  version,\n  VeCheckbox,\n  VeCheckboxGroup,\n  VeContextmenu,\n  VeDropdown,\n  VeIcon,\n  VeLoading,\n  VeLocale,\n  VePagination,\n  VeRadio,\n  VeSelect,\n  VeTable\n};\n","// polyfills\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\n\nimport Vue from \"vue\";\nimport APP from \"@/comp/app.vue\";\nimport router from \"@/router/index\";\n\nimport { getDocTheme } from \"@/utils/cookies\";\n\nimport NProgress from \"nprogress\"; // Progress 进度条\n\nimport \"@/css/index.less\";\nimport \"@/css/custom.less\";\nimport \"@/comp/app.less\";\n\n// Progress 进度条 样式\nimport \"nprogress/nprogress.css\";\n// highlight theme\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/color-brewer.css\";\n\nimport DemoBlock from \"@/comp/demo-block.vue\";\nimport Anchor from \"@/comp/anchor.vue\";\nVue.component(\"demo-block\", DemoBlock);\nVue.component(\"anchor\", Anchor);\n\n// 仅用作示例\nimport {\n    Switch,\n    Row,\n    Col,\n    Radio,\n    RadioButton,\n    RadioGroup,\n    Select,\n    Option,\n    DatePicker,\n    InputNumber,\n    Input,\n    Button,\n    CascaderPanel,\n} from \"element-ui\";\nVue.use(Switch);\nVue.use(Row);\nVue.use(Col);\nVue.use(Radio);\nVue.use(RadioButton);\nVue.use(RadioGroup);\nVue.use(Select);\nVue.use(Option);\nVue.use(DatePicker);\nVue.use(InputNumber);\nVue.use(Input);\nVue.use(Button);\nVue.use(CascaderPanel);\n\n// vue-lazy-container\nimport VueLazyContainer from \"vue-lazy-container\";\nVue.use(VueLazyContainer);\n\n// product\n/* import \"../../libs/theme-default/index.css\";\nimport {\n    VeCheckbox,\n    VeCheckboxGroup,\n    VeDropdown,\n    VeIcon,\n    VeLoading,\n    VeLocale,\n    VePagination,\n    VeRadio,\n    VeSelect,\n    VeTable\n} from \"../../libs/main.js\";\nimport zhCN from \"../../libs/locale/lang/zh-CN\";\nimport enUS from \"../../libs/locale/lang/en-US\";\nVeLocale.use(zhCN); */\n\n// 设置当前环境\nwindow.env = process.env.NODE_ENV === \"development\" ? \"dev\" : \"pro\";\n\n/*\ndev mode\n1、生产环境使用已发布的样式文件，参考 theme-switch-mixins.js\n*/\n\nif (window.env === \"dev\") {\n    const docTheme = getDocTheme();\n    if (docTheme && docTheme === \"dark\") {\n        require(\"../../packages/theme-dark/index.less\");\n    } else {\n        require(\"../../packages/theme-default/index.less\");\n    }\n}\n\nimport {\n    VeCheckbox,\n    VeCheckboxGroup,\n    VeContextmenu,\n    VeDropdown,\n    VeIcon,\n    VeLoading,\n    VeLocale,\n    VePagination,\n    VeRadio,\n    VeSelect,\n    VeTable,\n} from \"../../packages/index.js\";\n\nVue.use(VeCheckbox);\nVue.use(VeCheckboxGroup);\nVue.use(VeContextmenu);\nVue.use(VeDropdown);\nVue.use(VeIcon);\nVue.use(VePagination);\nVue.use(VeRadio);\nVue.use(VeSelect);\nVue.use(VeTable);\n\nVue.prototype.$veLoading = VeLoading;\nVue.prototype.$veLocale = VeLocale;\n\n// 全部引入\n/* import \"../../packages/theme-default/index.less\";\nimport vueEasytable from \"../../packages/index.js\";\nVue.use(vueEasytable); */\n\n/* import \"../../libs/theme-default/index.css\";\nimport vueEasytable from \"../../libs/main.js\";\nVue.use(vueEasytable); */\n\nrouter.beforeEach((to, from, next) => {\n    NProgress.start();\n\n    next();\n\n    NProgress.done();\n});\n\nrouter.afterEach(() => {\n    Vue.nextTick(() => {\n        const blocks = document.querySelectorAll(\"pre code:not(.hljs)\");\n        Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n\n        window.scroll(0, 0);\n    });\n    NProgress.done(); // 结束Progress\n});\n\nnew Vue({\n    el: \"#app\",\n    router,\n    render: (h) => h(APP),\n});\n","/* doc lang */\nexport const DOC_LANG = {\n    EN: \"en\",\n    ZH: \"zh\",\n};\n\n// doc theme\n// export const DOC_THEME = {\n//     DEFAULT: \"default\",\n//     DARK: \"dark\",\n// };\n\n// doc lang cookie\nexport const DOC_LANG_COOKIE = \"doc_lang_cookie\";\n\n// doc theme cookie\nexport const DOC_THEME_COOKIE = \"doc_lang_cookie\";\n","const emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\n\nconst config = [\n    {\n        path: \"intro\",\n        component: () => import(\"@/docs/zh/intro.md\"),\n        name: \"简介\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"start\",\n        component: () => import(\"@/docs/zh/start.md\"),\n        name: \"快速开始\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"theme\",\n        component: () => import(\"@/docs/zh/theme.md\"),\n        name: \"主题定制\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"locale\",\n        component: () => import(\"@/docs/zh/locale.md\"),\n        name: \"国际化\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"qa\",\n        component: () => import(\"@/docs/zh/QA.md\"),\n        name: \"常见问题\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"base\",\n        name: \"基础组件\",\n        component: emptyLayout,\n        children: [\n            {\n                path: \"loading\",\n                component: () => import(\"@/docs/zh/ve-loading/main.vue\"),\n                name: \"Loading 加载\",\n            },\n            {\n                path: \"locale\",\n                component: () => import(\"@/docs/zh/ve-locale/main.vue\"),\n                name: \"Locale 国际化\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"icon\",\n                component: () => import(\"@/docs/zh/ve-icon/main.vue\"),\n                name: \"Icon 图标\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"pagination\",\n                component: () => import(\"@/docs/zh/ve-pagination/main.vue\"),\n                name: \"Pagination 分页\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"contextmenu\",\n                component: () => import(\"@/docs/zh/ve-contextmenu/main.vue\"),\n                name: \"Contextmenu 右键菜单\",\n                meta: { keepAlive: true },\n            },\n        ],\n    },\n    {\n        path: \"table\",\n        name: \"Table 组件\",\n        component: emptyLayout,\n        children: [\n            /*  {\n                path: \"test\",\n                component: () => import(\"@/docs/zh/ve-table/test/main.vue\"),\n                name: \"性能测试\",\n                meta: { keepAlive: true }\n            }, */\n            {\n                path: \"usage\",\n                component: () => import(\"@/docs/zh/ve-table/usage/main.md\"),\n                name: \"用法\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-width\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/table-width/main.vue\"),\n                name: \"表格宽度\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-height\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/table-height/main.vue\"),\n                name: \"表格高度\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-border\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/table-border/main.vue\"),\n                name: \"表格边框\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-width\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/column-width/main.vue\"),\n                name: \"列宽设置\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-resize\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/column-resize/main.vue\"),\n                name: \"列宽拖动\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-fixed\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/column-fixed/main.vue\"),\n                name: \"列固定\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-hidden\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/column-hidden/main.vue\"),\n                name: \"列隐藏\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-fixed\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-fixed/main.vue\"),\n                name: \"表头固定\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-grouping\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-grouping/main.vue\"),\n                name: \"表头分组\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-hidden\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-hidden/main.vue\"),\n                name: \"表头隐藏\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-filter\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-filter/main.vue\"),\n                name: \"筛选\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-filter-custom\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-filter-custom/main.vue\"),\n                name: \"筛选自定义\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-sort\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/header-sort/main.vue\"),\n                name: \"排序\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-align\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-align/main.vue\"),\n                name: \"单元格对齐\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-style\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-style/main.vue\"),\n                name: \"单元格样式\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-custom\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-custom/main.vue\"),\n                name: \"单元格自定义\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-span\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-span/main.vue\"),\n                name: \"单元格合并\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"operation-column\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/operation-column/main.vue\"),\n                name: \"操作列\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-selection\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-selection/main.vue\"),\n                name: \"单元格选择\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-autofill\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-autofill/main.vue\"),\n                name: \"单元格自动填充\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-edit\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-edit/main.vue\"),\n                name: \"单元格编辑\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"clipboard\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/clipboard/main.vue\"),\n                name: \"剪贴板\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"contextmenu\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/contextmenu/main.vue\"),\n                name: \"右键菜单\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-ellipsis\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/cell-ellipsis/main.vue\"),\n                name: \"单元格省略\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-index\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/row-index/main.vue\"),\n                name: \"行序号\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-radio\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/row-radio/main.vue\"),\n                name: \"行单选\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-checkbox\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/row-checkbox/main.vue\"),\n                name: \"行多选\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-expand\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/row-expand/main.vue\"),\n                name: \"行展开\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-style\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/row-style/main.vue\"),\n                name: \"行样式\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"footer-summary\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/footer-summary/main.vue\"),\n                name: \"footer 汇总\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"pagination\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/pagination/main.vue\"),\n                name: \"分页\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"loading\",\n                component: () => import(\"@/docs/zh/ve-table/loading/main.vue\"),\n                name: \"开启 loading\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"virtual-scroll\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/virtual-scroll/main.vue\"),\n                name: \"虚拟滚动\",\n                meta: { keepAlive: false },\n            },\n            {\n                path: \"event-custom\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/event-custom/main.vue\"),\n                name: \"事件自定义\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"data-empty\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/data-empty/main.vue\"),\n                name: \"空数据\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"instance-methods\",\n                component: () =>\n                    import(\"@/docs/zh/ve-table/instance-methods/main.vue\"),\n                name: \"实例方法\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"api\",\n                component: () => import(\"@/docs/zh/ve-table/api/main.vue\"),\n                name: \"API\",\n                meta: { keepAlive: true },\n            },\n        ],\n    },\n    /* {\n        path: \"other\",\n        name: \"辅助组件\",\n        component: emptyLayout,\n        children: [\n            {\n                path: \"checkbox\",\n                component: () => import(\"@/docs/zh/ve-checkbox/main.vue\"),\n                name: \"checkbox\"\n            },\n            {\n                path: \"radio\",\n                component: () => import(\"@/docs/zh/ve-radio/main.vue\"),\n                name: \"radio\"\n            },\n            {\n                path: \"select\",\n                component: () => import(\"@/docs/zh/ve-select/main.vue\"),\n                name: \"select\"\n            },\n            {\n                path: \"dropdown\",\n                component: () => import(\"@/docs/zh/ve-dropdown/main.vue\"),\n                name: \"dropdown\"\n            }\n        ]\n    } */\n];\n\nexport default config;\n","const emptyLayout = () => import(\"@/comp/layout/empty-layout.vue\");\n\nconst config = [\n    {\n        path: \"intro\",\n        component: () => import(\"@/docs/en/intro.md\"),\n        name: \"Intro\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"start\",\n        component: () => import(\"@/docs/en/start.md\"),\n        name: \"Quick Start\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"theme\",\n        component: () => import(\"@/docs/en/theme.md\"),\n        name: \"Theme Custom\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"locale\",\n        component: () => import(\"@/docs/en/locale.md\"),\n        name: \"Internationalization\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"qa\",\n        component: () => import(\"@/docs/en/QA.md\"),\n        name: \"Q&A\",\n        meta: { keepAlive: true },\n    },\n    {\n        path: \"base\",\n        name: \"Base Components\",\n        component: emptyLayout,\n        children: [\n            {\n                path: \"loading\",\n                component: () => import(\"@/docs/en/ve-loading/main.vue\"),\n                name: \"Loading\",\n            },\n            {\n                path: \"locale\",\n                component: () => import(\"@/docs/en/ve-locale/main.vue\"),\n                name: \"Locale\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"icon\",\n                component: () => import(\"@/docs/en/ve-icon/main.vue\"),\n                name: \"Icon\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"pagination\",\n                component: () => import(\"@/docs/en/ve-pagination/main.vue\"),\n                name: \"Pagination\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"contextmenu\",\n                component: () => import(\"@/docs/en/ve-contextmenu/main.vue\"),\n                name: \"Contextmenu\",\n                meta: { keepAlive: true },\n            },\n        ],\n    },\n    {\n        path: \"table\",\n        name: \"Table Component\",\n        component: emptyLayout,\n        children: [\n            /* {\n                path: \"test\",\n                component: () => import(\"@/docs/en/ve-table/test/main.vue\"),\n                name: \"性能测试\",\n                meta: { keepAlive: true }\n            }, */\n            {\n                path: \"usage\",\n                component: () => import(\"@/docs/en/ve-table/usage/main.md\"),\n                name: \"Usage\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-width\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/table-width/main.vue\"),\n                name: \"Table Width\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-height\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/table-height/main.vue\"),\n                name: \"Table Height\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"table-border\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/table-border/main.vue\"),\n                name: \"Table Border\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-width\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/column-width/main.vue\"),\n                name: \"Column Width\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-resize\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/column-resize/main.vue\"),\n                name: \"Column Resize\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-fixed\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/column-fixed/main.vue\"),\n                name: \"Column Fixed\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"column-hidden\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/column-hidden/main.vue\"),\n                name: \"Column Hidden\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-fixed\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-fixed/main.vue\"),\n                name: \"Header Fixed\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-grouping\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-grouping/main.vue\"),\n                name: \"Header Grouping\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-hidden\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-hidden/main.vue\"),\n                name: \"Header Hidden\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-filter\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-filter/main.vue\"),\n                name: \"Filter\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-filter-custom\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-filter-custom/main.vue\"),\n                name: \"Filter Custom\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"header-sort\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/header-sort/main.vue\"),\n                name: \"Sort\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-align\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-align/main.vue\"),\n                name: \"Cell Align\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-style\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-style/main.vue\"),\n                name: \"Cell Style\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-custom\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-custom/main.vue\"),\n                name: \"Cell Custom\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-span\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-span/main.vue\"),\n                name: \"Cell Span\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"operation-column\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/operation-column/main.vue\"),\n                name: \"Operation Column\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-selection\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-selection/main.vue\"),\n                name: \"Cell Selection\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-autofill\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-autofill/main.vue\"),\n                name: \"Cell Autofill\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-edit\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-edit/main.vue\"),\n                name: \"Cell Edit\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"clipboard\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/clipboard/main.vue\"),\n                name: \"Clipboard\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"contextmenu\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/contextmenu/main.vue\"),\n                name: \"Contextmenu\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"cell-ellipsis\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/cell-ellipsis/main.vue\"),\n                name: \"Cell Ellipsis\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-index\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/row-index/main.vue\"),\n                name: \"Row Index\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-radio\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/row-radio/main.vue\"),\n                name: \"Row Radio\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-checkbox\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/row-checkbox/main.vue\"),\n                name: \"Row Checkbox\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-expand\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/row-expand/main.vue\"),\n                name: \"Row Expand\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"row-style\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/row-style/main.vue\"),\n                name: \"Row Style\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"footer-summary\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/footer-summary/main.vue\"),\n                name: \"Footer Summary\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"pagination\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/pagination/main.vue\"),\n                name: \"Pagination\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"loading\",\n                component: () => import(\"@/docs/en/ve-table/loading/main.vue\"),\n                name: \"Enable Loading\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"virtual-scroll\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/virtual-scroll/main.vue\"),\n                name: \"Virtual Scroll\",\n                meta: { keepAlive: false },\n            },\n            {\n                path: \"event-custom\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/event-custom/main.vue\"),\n                name: \"Event Custom\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"data-empty\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/data-empty/main.vue\"),\n                name: \"Data Empty\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"instance-methods\",\n                component: () =>\n                    import(\"@/docs/en/ve-table/instance-methods/main.vue\"),\n                name: \"Instance methods\",\n                meta: { keepAlive: true },\n            },\n            {\n                path: \"api\",\n                component: () => import(\"@/docs/en/ve-table/api/main.vue\"),\n                name: \"API\",\n                meta: { keepAlive: true },\n            },\n        ],\n    },\n    /*  {\n        path: \"other\",\n        name: \"辅助组件\",\n        component: emptyLayout,\n        children: [\n            {\n                path: \"checkbox\",\n                component: () => import(\"@/docs/en/ve-checkbox/main.vue\"),\n                name: \"checkbox\"\n            },\n            {\n                path: \"radio\",\n                component: () => import(\"@/docs/en/ve-radio/main.vue\"),\n                name: \"radio\"\n            },\n            {\n                path: \"select\",\n                component: () => import(\"@/docs/en/ve-select/main.vue\"),\n                name: \"select\"\n            },\n            {\n                path: \"dropdown\",\n                component: () => import(\"@/docs/en/ve-dropdown/main.vue\"),\n                name: \"dropdown\"\n            }\n        ]\n    } */\n];\n\nexport default config;\n","import zh from \"./zh.router.config\";\nimport en from \"./en.router.config\";\n\nexport default { zh, en };\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./anchor.vue?vue&type=style&index=0&id=72d05200&prod&lang=less&scoped=true&\"","export default {\n    pagination: {\n        goto: \"Go to\",\n        page: \"\",\n        itemsPerPage: \" / page\",\n        total: (total) => `Total ${total}`,\n        prev5: \"Previous 5 Pages\",\n        next5: \"Next 5 Pages\",\n    },\n    table: {\n        // filter\n        confirmFilter: \"Confirm\",\n        resetFilter: \"Reset\",\n        // contextmenu event\n        cut: \"Cut\",\n        copy: \"Copy\",\n        insertRowAbove: \"Insert row above\",\n        insertRowBelow: \"Insert row below\",\n        removeRow: \"Remove $1 row\",\n        emptyRow: \"Empty $1 row\",\n        //removeColumn: \"Remove column\",\n        emptyColumn: \"Empty $1 column\",\n        //hideColumn: \"Hide column\",\n        emptyCell: \"Empty cell\",\n        leftFixedColumnTo: \"Left fixed column to\",\n        cancelLeftFixedColumnTo: \"Cancel left fixed column to\",\n        rightFixedColumnTo: \"Right fixed column to\",\n        cancelRightFixedColumnTo: \"Cancel right fixed column to\",\n    },\n};\n","export function stripScript(content) {\n    const result = content.match(/<(script)>([\\s\\S]+)<\\/\\1>/);\n    return result && result[2] ? result[2].trim() : \"\";\n}\n\nexport function stripStyle(content) {\n    const result = content.match(/<(style)\\s*>([\\s\\S]+)<\\/\\1>/);\n    return result && result[2] ? result[2].trim() : \"\";\n}\n\nexport function stripTemplate(content) {\n    content = content.trim();\n    if (!content) {\n        return content;\n    }\n    return content.replace(/<(script|style)[\\s\\S]+<\\/\\1>/g, \"\").trim();\n}\n\n/*\n * @isFunction\n * @desc is function\n * @param {any} val\n */\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n\n// 根据锚点id 定位\nexport function goTobyAnchorId(context, id) {\n    context.$router\n        .replace({\n            path: context.$route.path,\n            query: { anchor: id },\n        })\n        .finally(() => {\n            context.$nextTick(() => {\n                let anchor = document.querySelector(`#${id}`);\n\n                if (anchor) {\n                    // 65 为 头部高度\n                    window.scroll(0, anchor.offsetTop - 65);\n                }\n            });\n        })\n        .catch(() => {});\n}\n"],"sourceRoot":""}